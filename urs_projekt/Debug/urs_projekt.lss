
urs_projekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001e60  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000d8  00800060  00001e60  00001ef4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000a3  00800138  00800138  00001fcc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001fcc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002028  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f8  00000000  00000000  00002068  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001844  00000000  00000000  00002260  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a6d  00000000  00000000  00003aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001248  00000000  00000000  00004511  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000524  00000000  00000000  0000575c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c8  00000000  00000000  00005c80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012d2  00000000  00000000  00006348  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  0000761a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
       4:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
       8:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
       c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      10:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      14:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      18:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      1c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      20:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      24:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      28:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      2c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      30:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      34:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      38:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      3c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      40:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      44:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      48:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      4c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      50:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      54:	07 63       	ori	r16, 0x37	; 55
      56:	42 36       	cpi	r20, 0x62	; 98
      58:	b7 9b       	sbis	0x16, 7	; 22
      5a:	d8 a7       	std	Y+40, r29	; 0x28
      5c:	1a 39       	cpi	r17, 0x9A	; 154
      5e:	68 56       	subi	r22, 0x68	; 104
      60:	18 ae       	std	Y+56, r1	; 0x38
      62:	ba ab       	std	Y+50, r27	; 0x32
      64:	55 8c       	ldd	r5, Z+29	; 0x1d
      66:	1d 3c       	cpi	r17, 0xCD	; 205
      68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
      6a:	57 63       	ori	r21, 0x37	; 55
      6c:	bd 6d       	ori	r27, 0xDD	; 221
      6e:	ed fd       	.word	0xfded	; ????
      70:	75 3e       	cpi	r23, 0xE5	; 229
      72:	f6 17       	cp	r31, r22
      74:	72 31       	cpi	r23, 0x12	; 18
      76:	bf 00       	.word	0x00bf	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	08 00       	.word	0x0008	; ????
      7e:	00 00       	nop
      80:	be 92       	st	-X, r11
      82:	24 49       	sbci	r18, 0x94	; 148
      84:	12 3e       	cpi	r17, 0xE2	; 226
      86:	ab aa       	std	Y+51, r10	; 0x33
      88:	aa 2a       	or	r10, r26
      8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
      8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
      8e:	4c 3e       	cpi	r20, 0xEC	; 236
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	be ab       	std	Y+54, r27	; 0x36
      96:	aa aa       	std	Y+50, r10	; 0x32
      98:	aa 3e       	cpi	r26, 0xEA	; 234
      9a:	00 00       	nop
      9c:	00 00       	nop
      9e:	bf 00       	.word	0x00bf	; ????
      a0:	00 00       	nop
      a2:	80 3f       	cpi	r24, 0xF0	; 240
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	00 08       	sbc	r0, r0
      aa:	41 78       	andi	r20, 0x81	; 129
      ac:	d3 bb       	out	0x13, r29	; 19
      ae:	43 87       	std	Z+11, r20	; 0x0b
      b0:	d1 13       	cpse	r29, r17
      b2:	3d 19       	sub	r19, r13
      b4:	0e 3c       	cpi	r16, 0xCE	; 206
      b6:	c3 bd       	out	0x23, r28	; 35
      b8:	42 82       	std	Z+2, r4	; 0x02
      ba:	ad 2b       	or	r26, r29
      bc:	3e 68       	ori	r19, 0x8E	; 142
      be:	ec 82       	std	Y+4, r14	; 0x04
      c0:	76 be       	out	0x36, r7	; 54
      c2:	d9 8f       	std	Y+25, r29	; 0x19
      c4:	e1 a9       	ldd	r30, Z+49	; 0x31
      c6:	3e 4c       	sbci	r19, 0xCE	; 206
      c8:	80 ef       	ldi	r24, 0xF0	; 240
      ca:	ff be       	out	0x3f, r15	; 63
      cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <get_user_result+0x1a>
      ce:	ff 7f       	andi	r31, 0xFF	; 255
      d0:	3f 00       	.word	0x003f	; ????
      d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
      d6:	11 24       	eor	r1, r1
      d8:	1f be       	out	0x3f, r1	; 63
      da:	cf e5       	ldi	r28, 0x5F	; 95
      dc:	d8 e0       	ldi	r29, 0x08	; 8
      de:	de bf       	out	0x3e, r29	; 62
      e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
      e2:	11 e0       	ldi	r17, 0x01	; 1
      e4:	a0 e6       	ldi	r26, 0x60	; 96
      e6:	b0 e0       	ldi	r27, 0x00	; 0
      e8:	e0 e6       	ldi	r30, 0x60	; 96
      ea:	fe e1       	ldi	r31, 0x1E	; 30
      ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
      ee:	05 90       	lpm	r0, Z+
      f0:	0d 92       	st	X+, r0
      f2:	a8 33       	cpi	r26, 0x38	; 56
      f4:	b1 07       	cpc	r27, r17
      f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>

000000f8 <__do_clear_bss>:
      f8:	21 e0       	ldi	r18, 0x01	; 1
      fa:	a8 e3       	ldi	r26, 0x38	; 56
      fc:	b1 e0       	ldi	r27, 0x01	; 1
      fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
     100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
     102:	ab 3d       	cpi	r26, 0xDB	; 219
     104:	b2 07       	cpc	r27, r18
     106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
     108:	0e 94 16 05 	call	0xa2c	; 0xa2c <main>
     10c:	0c 94 2e 0f 	jmp	0x1e5c	; 0x1e5c <_exit>

00000110 <__bad_interrupt>:
     110:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000114 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
     114:	97 9a       	sbi	0x12, 7	; 18
     116:	00 c0       	rjmp	.+0      	; 0x118 <toggle_e+0x4>
     118:	97 98       	cbi	0x12, 7	; 18
     11a:	08 95       	ret

0000011c <lcd_write>:
     11c:	cf 93       	push	r28
     11e:	c8 2f       	mov	r28, r24
     120:	66 23       	and	r22, r22
     122:	11 f0       	breq	.+4      	; 0x128 <lcd_write+0xc>
     124:	95 9a       	sbi	0x12, 5	; 18
     126:	01 c0       	rjmp	.+2      	; 0x12a <lcd_write+0xe>
     128:	95 98       	cbi	0x12, 5	; 18
     12a:	96 98       	cbi	0x12, 6	; 18
     12c:	bc 9a       	sbi	0x17, 4	; 23
     12e:	bd 9a       	sbi	0x17, 5	; 23
     130:	be 9a       	sbi	0x17, 6	; 23
     132:	bf 9a       	sbi	0x17, 7	; 23
     134:	c7 98       	cbi	0x18, 7	; 24
     136:	c6 98       	cbi	0x18, 6	; 24
     138:	c5 98       	cbi	0x18, 5	; 24
     13a:	c4 98       	cbi	0x18, 4	; 24
     13c:	cc 23       	and	r28, r28
     13e:	0c f4       	brge	.+2      	; 0x142 <lcd_write+0x26>
     140:	c7 9a       	sbi	0x18, 7	; 24
     142:	c6 fd       	sbrc	r28, 6
     144:	c6 9a       	sbi	0x18, 6	; 24
     146:	c5 fd       	sbrc	r28, 5
     148:	c5 9a       	sbi	0x18, 5	; 24
     14a:	c4 fd       	sbrc	r28, 4
     14c:	c4 9a       	sbi	0x18, 4	; 24
     14e:	0e 94 8a 00 	call	0x114	; 0x114 <toggle_e>
     152:	c7 98       	cbi	0x18, 7	; 24
     154:	c6 98       	cbi	0x18, 6	; 24
     156:	c5 98       	cbi	0x18, 5	; 24
     158:	c4 98       	cbi	0x18, 4	; 24
     15a:	c3 fd       	sbrc	r28, 3
     15c:	c7 9a       	sbi	0x18, 7	; 24
     15e:	c2 fd       	sbrc	r28, 2
     160:	c6 9a       	sbi	0x18, 6	; 24
     162:	c1 fd       	sbrc	r28, 1
     164:	c5 9a       	sbi	0x18, 5	; 24
     166:	c0 fd       	sbrc	r28, 0
     168:	c4 9a       	sbi	0x18, 4	; 24
     16a:	0e 94 8a 00 	call	0x114	; 0x114 <toggle_e>
     16e:	c4 9a       	sbi	0x18, 4	; 24
     170:	c5 9a       	sbi	0x18, 5	; 24
     172:	c6 9a       	sbi	0x18, 6	; 24
     174:	c7 9a       	sbi	0x18, 7	; 24
     176:	cf 91       	pop	r28
     178:	08 95       	ret

0000017a <lcd_read>:
     17a:	88 23       	and	r24, r24
     17c:	11 f0       	breq	.+4      	; 0x182 <lcd_read+0x8>
     17e:	95 9a       	sbi	0x12, 5	; 18
     180:	01 c0       	rjmp	.+2      	; 0x184 <lcd_read+0xa>
     182:	95 98       	cbi	0x12, 5	; 18
     184:	96 9a       	sbi	0x12, 6	; 18
     186:	bc 98       	cbi	0x17, 4	; 23
     188:	bd 98       	cbi	0x17, 5	; 23
     18a:	be 98       	cbi	0x17, 6	; 23
     18c:	bf 98       	cbi	0x17, 7	; 23
     18e:	97 9a       	sbi	0x12, 7	; 18
     190:	00 c0       	rjmp	.+0      	; 0x192 <lcd_read+0x18>
     192:	b4 9b       	sbis	0x16, 4	; 22
     194:	02 c0       	rjmp	.+4      	; 0x19a <lcd_read+0x20>
     196:	80 e1       	ldi	r24, 0x10	; 16
     198:	01 c0       	rjmp	.+2      	; 0x19c <lcd_read+0x22>
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	b5 99       	sbic	0x16, 5	; 22
     19e:	80 62       	ori	r24, 0x20	; 32
     1a0:	b6 99       	sbic	0x16, 6	; 22
     1a2:	80 64       	ori	r24, 0x40	; 64
     1a4:	b7 99       	sbic	0x16, 7	; 22
     1a6:	80 68       	ori	r24, 0x80	; 128
     1a8:	97 98       	cbi	0x12, 7	; 18
     1aa:	00 c0       	rjmp	.+0      	; 0x1ac <lcd_read+0x32>
     1ac:	97 9a       	sbi	0x12, 7	; 18
     1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <lcd_read+0x36>
     1b0:	b4 99       	sbic	0x16, 4	; 22
     1b2:	81 60       	ori	r24, 0x01	; 1
     1b4:	b5 99       	sbic	0x16, 5	; 22
     1b6:	82 60       	ori	r24, 0x02	; 2
     1b8:	b6 99       	sbic	0x16, 6	; 22
     1ba:	84 60       	ori	r24, 0x04	; 4
     1bc:	b7 99       	sbic	0x16, 7	; 22
     1be:	88 60       	ori	r24, 0x08	; 8
     1c0:	97 98       	cbi	0x12, 7	; 18
     1c2:	08 95       	ret

000001c4 <lcd_waitbusy>:
     1c4:	80 e0       	ldi	r24, 0x00	; 0
     1c6:	0e 94 bd 00 	call	0x17a	; 0x17a <lcd_read>
     1ca:	88 23       	and	r24, r24
     1cc:	dc f3       	brlt	.-10     	; 0x1c4 <lcd_waitbusy>
     1ce:	83 e0       	ldi	r24, 0x03	; 3
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <lcd_waitbusy+0xe>
     1d6:	80 e0       	ldi	r24, 0x00	; 0
     1d8:	0e 94 bd 00 	call	0x17a	; 0x17a <lcd_read>
     1dc:	08 95       	ret

000001de <lcd_command>:
     1de:	cf 93       	push	r28
     1e0:	c8 2f       	mov	r28, r24
     1e2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_waitbusy>
     1e6:	60 e0       	ldi	r22, 0x00	; 0
     1e8:	8c 2f       	mov	r24, r28
     1ea:	0e 94 8e 00 	call	0x11c	; 0x11c <lcd_write>
     1ee:	cf 91       	pop	r28
     1f0:	08 95       	ret

000001f2 <lcd_gotoxy>:
     1f2:	61 11       	cpse	r22, r1
     1f4:	04 c0       	rjmp	.+8      	; 0x1fe <lcd_gotoxy+0xc>
     1f6:	80 58       	subi	r24, 0x80	; 128
     1f8:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>
     1fc:	08 95       	ret
     1fe:	80 54       	subi	r24, 0x40	; 64
     200:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>
     204:	08 95       	ret

00000206 <lcd_clrscr>:
     206:	81 e0       	ldi	r24, 0x01	; 1
     208:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>
     20c:	08 95       	ret

0000020e <lcd_putc>:
     20e:	cf 93       	push	r28
     210:	c8 2f       	mov	r28, r24
     212:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <lcd_waitbusy>
     216:	ca 30       	cpi	r28, 0x0A	; 10
     218:	49 f4       	brne	.+18     	; 0x22c <lcd_putc+0x1e>
     21a:	80 34       	cpi	r24, 0x40	; 64
     21c:	10 f0       	brcs	.+4      	; 0x222 <lcd_putc+0x14>
     21e:	80 e0       	ldi	r24, 0x00	; 0
     220:	01 c0       	rjmp	.+2      	; 0x224 <lcd_putc+0x16>
     222:	80 e4       	ldi	r24, 0x40	; 64
     224:	80 58       	subi	r24, 0x80	; 128
     226:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>
     22a:	04 c0       	rjmp	.+8      	; 0x234 <lcd_putc+0x26>
     22c:	61 e0       	ldi	r22, 0x01	; 1
     22e:	8c 2f       	mov	r24, r28
     230:	0e 94 8e 00 	call	0x11c	; 0x11c <lcd_write>
     234:	cf 91       	pop	r28
     236:	08 95       	ret

00000238 <lcd_puts>:
     238:	cf 93       	push	r28
     23a:	df 93       	push	r29
     23c:	ec 01       	movw	r28, r24
     23e:	21 96       	adiw	r28, 0x01	; 1
     240:	fc 01       	movw	r30, r24
     242:	80 81       	ld	r24, Z
     244:	88 23       	and	r24, r24
     246:	29 f0       	breq	.+10     	; 0x252 <lcd_puts+0x1a>
     248:	0e 94 07 01 	call	0x20e	; 0x20e <lcd_putc>
     24c:	89 91       	ld	r24, Y+
     24e:	81 11       	cpse	r24, r1
     250:	fb cf       	rjmp	.-10     	; 0x248 <lcd_puts+0x10>
     252:	df 91       	pop	r29
     254:	cf 91       	pop	r28
     256:	08 95       	ret

00000258 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     258:	1f 93       	push	r17
     25a:	cf 93       	push	r28
     25c:	df 93       	push	r29
     25e:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     260:	8d 9a       	sbi	0x11, 5	; 17
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     262:	8e 9a       	sbi	0x11, 6	; 17
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     264:	8f 9a       	sbi	0x11, 7	; 17
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     266:	bc 9a       	sbi	0x17, 4	; 23
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     268:	bd 9a       	sbi	0x17, 5	; 23
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     26a:	be 9a       	sbi	0x17, 6	; 23
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     26c:	bf 9a       	sbi	0x17, 7	; 23
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     26e:	80 e3       	ldi	r24, 0x30	; 48
     270:	93 e7       	ldi	r25, 0x73	; 115
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <lcd_init+0x1a>
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(16000);        /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
     276:	c5 9a       	sbi	0x18, 5	; 24
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
     278:	c4 9a       	sbi	0x18, 4	; 24
    lcd_e_toggle();
     27a:	0e 94 8a 00 	call	0x114	; 0x114 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     27e:	80 ef       	ldi	r24, 0xF0	; 240
     280:	93 e2       	ldi	r25, 0x23	; 35
     282:	01 97       	sbiw	r24, 0x01	; 1
     284:	f1 f7       	brne	.-4      	; 0x282 <lcd_init+0x2a>
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
    lcd_e_toggle();
    delay(4992);         /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     286:	0e 94 8a 00 	call	0x114	; 0x114 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     28a:	c5 e7       	ldi	r28, 0x75	; 117
     28c:	d0 e0       	ldi	r29, 0x00	; 0
     28e:	ce 01       	movw	r24, r28
     290:	01 97       	sbiw	r24, 0x01	; 1
     292:	f1 f7       	brne	.-4      	; 0x290 <lcd_init+0x38>
    /* repeat last command */ 
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     294:	0e 94 8a 00 	call	0x114	; 0x114 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     298:	ce 01       	movw	r24, r28
     29a:	01 97       	sbiw	r24, 0x01	; 1
     29c:	f1 f7       	brne	.-4      	; 0x29a <lcd_init+0x42>
    /* repeat last command a third time */
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     29e:	c4 98       	cbi	0x18, 4	; 24
    lcd_e_toggle();
     2a0:	0e 94 8a 00 	call	0x114	; 0x114 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     2a4:	21 97       	sbiw	r28, 0x01	; 1
     2a6:	f1 f7       	brne	.-4      	; 0x2a4 <lcd_init+0x4c>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     2a8:	88 e2       	ldi	r24, 0x28	; 40
     2aa:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     2ae:	88 e0       	ldi	r24, 0x08	; 8
     2b0:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
     2b4:	0e 94 03 01 	call	0x206	; 0x206 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     2b8:	86 e0       	ldi	r24, 0x06	; 6
     2ba:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
     2be:	81 2f       	mov	r24, r17
     2c0:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>

}/* lcd_init */
     2c4:	df 91       	pop	r29
     2c6:	cf 91       	pop	r28
     2c8:	1f 91       	pop	r17
     2ca:	08 95       	ret

000002cc <write_to_lcd>:
	average_array_counter %= AVERAGE_ARRAY_SIZE;
	average_array[average_array_counter++] = val;
	last_sample = val;
	
	if (val > max_value) {
		max_value = val;
     2cc:	0f 93       	push	r16
     2ce:	1f 93       	push	r17
     2d0:	cf 93       	push	r28
     2d2:	df 93       	push	r29
     2d4:	cd b7       	in	r28, 0x3d	; 61
     2d6:	de b7       	in	r29, 0x3e	; 62
     2d8:	c0 58       	subi	r28, 0x80	; 128
     2da:	d1 09       	sbc	r29, r1
     2dc:	0f b6       	in	r0, 0x3f	; 63
     2de:	f8 94       	cli
     2e0:	de bf       	out	0x3e, r29	; 62
     2e2:	0f be       	out	0x3f, r0	; 63
     2e4:	cd bf       	out	0x3d, r28	; 61
     2e6:	8b e5       	ldi	r24, 0x5B	; 91
     2e8:	91 e0       	ldi	r25, 0x01	; 1
     2ea:	9f 93       	push	r25
     2ec:	8f 93       	push	r24
     2ee:	8b e9       	ldi	r24, 0x9B	; 155
     2f0:	91 e0       	ldi	r25, 0x01	; 1
     2f2:	9f 93       	push	r25
     2f4:	8f 93       	push	r24
     2f6:	89 e6       	ldi	r24, 0x69	; 105
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	9f 93       	push	r25
     2fc:	8f 93       	push	r24
     2fe:	1f 92       	push	r1
     300:	80 e8       	ldi	r24, 0x80	; 128
     302:	8f 93       	push	r24
     304:	8e 01       	movw	r16, r28
     306:	0f 5f       	subi	r16, 0xFF	; 255
     308:	1f 4f       	sbci	r17, 0xFF	; 255
     30a:	1f 93       	push	r17
     30c:	0f 93       	push	r16
     30e:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
     312:	0e 94 03 01 	call	0x206	; 0x206 <lcd_clrscr>
     316:	c8 01       	movw	r24, r16
     318:	0e 94 1c 01 	call	0x238	; 0x238 <lcd_puts>
     31c:	0f b6       	in	r0, 0x3f	; 63
     31e:	f8 94       	cli
     320:	de bf       	out	0x3e, r29	; 62
     322:	0f be       	out	0x3f, r0	; 63
     324:	cd bf       	out	0x3d, r28	; 61
     326:	c0 58       	subi	r28, 0x80	; 128
     328:	df 4f       	sbci	r29, 0xFF	; 255
     32a:	0f b6       	in	r0, 0x3f	; 63
     32c:	f8 94       	cli
     32e:	de bf       	out	0x3e, r29	; 62
     330:	0f be       	out	0x3f, r0	; 63
     332:	cd bf       	out	0x3d, r28	; 61
     334:	df 91       	pop	r29
     336:	cf 91       	pop	r28
     338:	1f 91       	pop	r17
     33a:	0f 91       	pop	r16
     33c:	08 95       	ret

0000033e <delete_database>:
     33e:	ef 92       	push	r14
     340:	ff 92       	push	r15
     342:	0f 93       	push	r16
     344:	1f 93       	push	r17
     346:	cf 93       	push	r28
     348:	df 93       	push	r29
     34a:	06 e0       	ldi	r16, 0x06	; 6
     34c:	10 e0       	ldi	r17, 0x00	; 0
     34e:	21 c0       	rjmp	.+66     	; 0x392 <delete_database+0x54>
     350:	60 e0       	ldi	r22, 0x00	; 0
     352:	ce 01       	movw	r24, r28
     354:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <eeprom_write_byte>
     358:	21 96       	adiw	r28, 0x01	; 1
     35a:	c0 17       	cp	r28, r16
     35c:	d1 07       	cpc	r29, r17
     35e:	c1 f7       	brne	.-16     	; 0x350 <delete_database+0x12>
     360:	60 e0       	ldi	r22, 0x00	; 0
     362:	c8 01       	movw	r24, r16
     364:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <eeprom_write_byte>
     368:	e8 01       	movw	r28, r16
     36a:	21 96       	adiw	r28, 0x01	; 1
     36c:	78 01       	movw	r14, r16
     36e:	81 e1       	ldi	r24, 0x11	; 17
     370:	e8 0e       	add	r14, r24
     372:	f1 1c       	adc	r15, r1
     374:	40 e0       	ldi	r20, 0x00	; 0
     376:	50 e0       	ldi	r21, 0x00	; 0
     378:	ba 01       	movw	r22, r20
     37a:	ce 01       	movw	r24, r28
     37c:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <eeprom_write_dword>
     380:	24 96       	adiw	r28, 0x04	; 4
     382:	ce 15       	cp	r28, r14
     384:	df 05       	cpc	r29, r15
     386:	b1 f7       	brne	.-20     	; 0x374 <delete_database+0x36>
     388:	0e 5e       	subi	r16, 0xEE	; 238
     38a:	1f 4f       	sbci	r17, 0xFF	; 255
     38c:	0e 34       	cpi	r16, 0x4E	; 78
     38e:	11 05       	cpc	r17, r1
     390:	19 f0       	breq	.+6      	; 0x398 <delete_database+0x5a>
     392:	e8 01       	movw	r28, r16
     394:	26 97       	sbiw	r28, 0x06	; 6
     396:	dc cf       	rjmp	.-72     	; 0x350 <delete_database+0x12>
     398:	61 e4       	ldi	r22, 0x41	; 65
     39a:	80 e0       	ldi	r24, 0x00	; 0
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <eeprom_write_byte>
     3a2:	60 e0       	ldi	r22, 0x00	; 0
     3a4:	81 e0       	ldi	r24, 0x01	; 1
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <eeprom_write_byte>
     3ac:	61 e0       	ldi	r22, 0x01	; 1
     3ae:	88 e4       	ldi	r24, 0x48	; 72
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <eeprom_write_byte>
     3b6:	81 e0       	ldi	r24, 0x01	; 1
     3b8:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <number_of_users>
     3bc:	df 91       	pop	r29
     3be:	cf 91       	pop	r28
     3c0:	1f 91       	pop	r17
     3c2:	0f 91       	pop	r16
     3c4:	ff 90       	pop	r15
     3c6:	ef 90       	pop	r14
     3c8:	08 95       	ret

000003ca <calculate_average>:
     3ca:	8a e0       	ldi	r24, 0x0A	; 10
     3cc:	20 e0       	ldi	r18, 0x00	; 0
     3ce:	30 e0       	ldi	r19, 0x00	; 0
     3d0:	36 9a       	sbi	0x06, 6	; 6
     3d2:	34 9b       	sbis	0x06, 4	; 6
     3d4:	fe cf       	rjmp	.-4      	; 0x3d2 <calculate_average+0x8>
     3d6:	44 b1       	in	r20, 0x04	; 4
     3d8:	55 b1       	in	r21, 0x05	; 5
     3da:	24 0f       	add	r18, r20
     3dc:	35 1f       	adc	r19, r21
     3de:	81 50       	subi	r24, 0x01	; 1
     3e0:	b9 f7       	brne	.-18     	; 0x3d0 <calculate_average+0x6>
     3e2:	ad ec       	ldi	r26, 0xCD	; 205
     3e4:	bc ec       	ldi	r27, 0xCC	; 204
     3e6:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <__umulhisi3>
     3ea:	96 95       	lsr	r25
     3ec:	87 95       	ror	r24
     3ee:	96 95       	lsr	r25
     3f0:	87 95       	ror	r24
     3f2:	96 95       	lsr	r25
     3f4:	87 95       	ror	r24
     3f6:	08 95       	ret

000003f8 <writeADC>:
	}
}


void writeADC(float BAC)
{
     3f8:	4f 92       	push	r4
     3fa:	5f 92       	push	r5
     3fc:	6f 92       	push	r6
     3fe:	7f 92       	push	r7
     400:	af 92       	push	r10
     402:	bf 92       	push	r11
     404:	cf 92       	push	r12
     406:	df 92       	push	r13
     408:	ef 92       	push	r14
     40a:	ff 92       	push	r15
     40c:	0f 93       	push	r16
     40e:	1f 93       	push	r17
     410:	cf 93       	push	r28
     412:	df 93       	push	r29
     414:	6b 01       	movw	r12, r22
     416:	7c 01       	movw	r14, r24
	// BAC = 2.56 mgl = 25.6 u float
	float PROM = BAC * 2.09;
     418:	2f e8       	ldi	r18, 0x8F	; 143
     41a:	32 ec       	ldi	r19, 0xC2	; 194
     41c:	45 e0       	ldi	r20, 0x05	; 5
     41e:	50 e4       	ldi	r21, 0x40	; 64
     420:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__mulsf3>
     424:	2b 01       	movw	r4, r22
     426:	3c 01       	movw	r6, r24
	snprintf(Dstr, 64, "%d.%d%dmg/L  %d.%d%d%c.", (int)BAC/10, (int)BAC%10, (int)(BAC*10)%10, (int)PROM/10, (int)PROM%10, (int)(PROM*10)%10, '%');
     428:	0e 94 ed 08 	call	0x11da	; 0x11da <__fixsfsi>
     42c:	5b 01       	movw	r10, r22
     42e:	c7 01       	movw	r24, r14
     430:	b6 01       	movw	r22, r12
     432:	0e 94 ed 08 	call	0x11da	; 0x11da <__fixsfsi>
     436:	8b 01       	movw	r16, r22
     438:	1f 92       	push	r1
     43a:	85 e2       	ldi	r24, 0x25	; 37
     43c:	8f 93       	push	r24
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	40 e2       	ldi	r20, 0x20	; 32
     444:	51 e4       	ldi	r21, 0x41	; 65
     446:	c3 01       	movw	r24, r6
     448:	b2 01       	movw	r22, r4
     44a:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__mulsf3>
     44e:	0e 94 ed 08 	call	0x11da	; 0x11da <__fixsfsi>
     452:	ca e0       	ldi	r28, 0x0A	; 10
     454:	d0 e0       	ldi	r29, 0x00	; 0
     456:	cb 01       	movw	r24, r22
     458:	be 01       	movw	r22, r28
     45a:	0e 94 c7 0b 	call	0x178e	; 0x178e <__divmodhi4>
     45e:	9f 93       	push	r25
     460:	8f 93       	push	r24
     462:	c5 01       	movw	r24, r10
     464:	be 01       	movw	r22, r28
     466:	0e 94 c7 0b 	call	0x178e	; 0x178e <__divmodhi4>
     46a:	9f 93       	push	r25
     46c:	8f 93       	push	r24
     46e:	7f 93       	push	r23
     470:	6f 93       	push	r22
     472:	20 e0       	ldi	r18, 0x00	; 0
     474:	30 e0       	ldi	r19, 0x00	; 0
     476:	40 e2       	ldi	r20, 0x20	; 32
     478:	51 e4       	ldi	r21, 0x41	; 65
     47a:	c7 01       	movw	r24, r14
     47c:	b6 01       	movw	r22, r12
     47e:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__mulsf3>
     482:	0e 94 ed 08 	call	0x11da	; 0x11da <__fixsfsi>
     486:	cb 01       	movw	r24, r22
     488:	be 01       	movw	r22, r28
     48a:	0e 94 c7 0b 	call	0x178e	; 0x178e <__divmodhi4>
     48e:	9f 93       	push	r25
     490:	8f 93       	push	r24
     492:	c8 01       	movw	r24, r16
     494:	be 01       	movw	r22, r28
     496:	0e 94 c7 0b 	call	0x178e	; 0x178e <__divmodhi4>
     49a:	9f 93       	push	r25
     49c:	8f 93       	push	r24
     49e:	7f 93       	push	r23
     4a0:	6f 93       	push	r22
     4a2:	8f e6       	ldi	r24, 0x6F	; 111
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	9f 93       	push	r25
     4a8:	8f 93       	push	r24
     4aa:	1f 92       	push	r1
     4ac:	80 e4       	ldi	r24, 0x40	; 64
     4ae:	8f 93       	push	r24
     4b0:	8b e5       	ldi	r24, 0x5B	; 91
     4b2:	91 e0       	ldi	r25, 0x01	; 1
     4b4:	9f 93       	push	r25
     4b6:	8f 93       	push	r24
     4b8:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
}
     4bc:	8d b7       	in	r24, 0x3d	; 61
     4be:	9e b7       	in	r25, 0x3e	; 62
     4c0:	44 96       	adiw	r24, 0x14	; 20
     4c2:	0f b6       	in	r0, 0x3f	; 63
     4c4:	f8 94       	cli
     4c6:	9e bf       	out	0x3e, r25	; 62
     4c8:	0f be       	out	0x3f, r0	; 63
     4ca:	8d bf       	out	0x3d, r24	; 61
     4cc:	df 91       	pop	r29
     4ce:	cf 91       	pop	r28
     4d0:	1f 91       	pop	r17
     4d2:	0f 91       	pop	r16
     4d4:	ff 90       	pop	r15
     4d6:	ef 90       	pop	r14
     4d8:	df 90       	pop	r13
     4da:	cf 90       	pop	r12
     4dc:	bf 90       	pop	r11
     4de:	af 90       	pop	r10
     4e0:	7f 90       	pop	r7
     4e2:	6f 90       	pop	r6
     4e4:	5f 90       	pop	r5
     4e6:	4f 90       	pop	r4
     4e8:	08 95       	ret

000004ea <ADCpretvorba>:

float ADCpretvorba()
{
     4ea:	cf 92       	push	r12
     4ec:	df 92       	push	r13
     4ee:	ef 92       	push	r14
     4f0:	ff 92       	push	r15
     4f2:	cf 93       	push	r28
     4f4:	df 93       	push	r29
	//ucitava stanje na senzoru
	int average = calculate_average();
     4f6:	0e 94 e5 01 	call	0x3ca	; 0x3ca <calculate_average>
	//pretvorba ADC u BAC
	float sens_volt = (float)average / 1024 * 5.0;
	float RS = ((5 * R2) / sens_volt) - R2;
	float omjer = RS / R0;
     4fa:	c0 91 61 00 	lds	r28, 0x0061	; 0x800061 <R0>
     4fe:	d0 91 62 00 	lds	r29, 0x0062	; 0x800062 <R0+0x1>
	double x = 0.3934 * omjer;
	float BAC = pow(x, -1.504) - ref_value;
     502:	bc 01       	movw	r22, r24
     504:	99 0f       	add	r25, r25
     506:	88 0b       	sbc	r24, r24
     508:	99 0b       	sbc	r25, r25
     50a:	0e 94 25 09 	call	0x124a	; 0x124a <__floatsisf>
     50e:	20 e0       	ldi	r18, 0x00	; 0
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	40 e8       	ldi	r20, 0x80	; 128
     514:	5a e3       	ldi	r21, 0x3A	; 58
     516:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__mulsf3>
     51a:	20 e0       	ldi	r18, 0x00	; 0
     51c:	30 e0       	ldi	r19, 0x00	; 0
     51e:	40 ea       	ldi	r20, 0xA0	; 160
     520:	50 e4       	ldi	r21, 0x40	; 64
     522:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__mulsf3>
     526:	9b 01       	movw	r18, r22
     528:	ac 01       	movw	r20, r24
     52a:	60 e0       	ldi	r22, 0x00	; 0
     52c:	70 e4       	ldi	r23, 0x40	; 64
     52e:	8e e4       	ldi	r24, 0x4E	; 78
     530:	95 e4       	ldi	r25, 0x45	; 69
     532:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__divsf3>
     536:	20 e0       	ldi	r18, 0x00	; 0
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	45 e2       	ldi	r20, 0x25	; 37
     53c:	54 e4       	ldi	r21, 0x44	; 68
     53e:	0e 94 09 08 	call	0x1012	; 0x1012 <__subsf3>
     542:	6b 01       	movw	r12, r22
     544:	7c 01       	movw	r14, r24
     546:	be 01       	movw	r22, r28
     548:	dd 0f       	add	r29, r29
     54a:	88 0b       	sbc	r24, r24
     54c:	99 0b       	sbc	r25, r25
     54e:	0e 94 25 09 	call	0x124a	; 0x124a <__floatsisf>
     552:	9b 01       	movw	r18, r22
     554:	ac 01       	movw	r20, r24
     556:	c7 01       	movw	r24, r14
     558:	b6 01       	movw	r22, r12
     55a:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__divsf3>
     55e:	2a eb       	ldi	r18, 0xBA	; 186
     560:	3b e6       	ldi	r19, 0x6B	; 107
     562:	49 ec       	ldi	r20, 0xC9	; 201
     564:	5e e3       	ldi	r21, 0x3E	; 62
     566:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__mulsf3>
     56a:	22 e1       	ldi	r18, 0x12	; 18
     56c:	33 e8       	ldi	r19, 0x83	; 131
     56e:	40 ec       	ldi	r20, 0xC0	; 192
     570:	5f eb       	ldi	r21, 0xBF	; 191
     572:	0e 94 42 0a 	call	0x1484	; 0x1484 <pow>
     576:	20 91 4c 01 	lds	r18, 0x014C	; 0x80014c <ref_value>
     57a:	30 91 4d 01 	lds	r19, 0x014D	; 0x80014d <ref_value+0x1>
     57e:	40 91 4e 01 	lds	r20, 0x014E	; 0x80014e <ref_value+0x2>
     582:	50 91 4f 01 	lds	r21, 0x014F	; 0x80014f <ref_value+0x3>
	
	return BAC;
     586:	0e 94 09 08 	call	0x1012	; 0x1012 <__subsf3>
}
     58a:	df 91       	pop	r29
     58c:	cf 91       	pop	r28
     58e:	ff 90       	pop	r15
     590:	ef 90       	pop	r14
     592:	df 90       	pop	r13
     594:	cf 90       	pop	r12
     596:	08 95       	ret

00000598 <debounce_buttons>:


void debounce_buttons(){
     598:	e0 e5       	ldi	r30, 0x50	; 80
     59a:	f1 e0       	ldi	r31, 0x01	; 1
     59c:	20 e0       	ldi	r18, 0x00	; 0
     59e:	30 e0       	ldi	r19, 0x00	; 0
	uint8_t i;
	for(i = 0; i < 4; i++){
		if(bit_is_set(PINB, i)) { // ako gumb nije pritisnut
     5a0:	86 b3       	in	r24, 0x16	; 22
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	02 2e       	mov	r0, r18
     5a6:	02 c0       	rjmp	.+4      	; 0x5ac <debounce_buttons+0x14>
     5a8:	95 95       	asr	r25
     5aa:	87 95       	ror	r24
     5ac:	0a 94       	dec	r0
     5ae:	e2 f7       	brpl	.-8      	; 0x5a8 <debounce_buttons+0x10>
     5b0:	80 ff       	sbrs	r24, 0
     5b2:	05 c0       	rjmp	.+10     	; 0x5be <debounce_buttons+0x26>
			if(debounce_buttons_array[i] > 0) debounce_buttons_array[i] = debounce_buttons_array[i] - 1;
     5b4:	80 81       	ld	r24, Z
     5b6:	88 23       	and	r24, r24
     5b8:	11 f0       	breq	.+4      	; 0x5be <debounce_buttons+0x26>
     5ba:	81 50       	subi	r24, 0x01	; 1
     5bc:	80 83       	st	Z, r24
     5be:	2f 5f       	subi	r18, 0xFF	; 255
     5c0:	3f 4f       	sbci	r19, 0xFF	; 255
     5c2:	31 96       	adiw	r30, 0x01	; 1
}


void debounce_buttons(){
	uint8_t i;
	for(i = 0; i < 4; i++){
     5c4:	24 30       	cpi	r18, 0x04	; 4
     5c6:	31 05       	cpc	r19, r1
     5c8:	59 f7       	brne	.-42     	; 0x5a0 <debounce_buttons+0x8>
		if(bit_is_set(PINB, i)) { // ako gumb nije pritisnut
			if(debounce_buttons_array[i] > 0) debounce_buttons_array[i] = debounce_buttons_array[i] - 1;
		}
	}
}
     5ca:	08 95       	ret

000005cc <is_button_pressed>:

uint8_t is_button_pressed(int button){
	if(bit_is_clear(PINB, button) && debounce_buttons_array[button] == 0) {
     5cc:	26 b3       	in	r18, 0x16	; 22
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	08 2e       	mov	r0, r24
     5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <is_button_pressed+0xc>
     5d4:	35 95       	asr	r19
     5d6:	27 95       	ror	r18
     5d8:	0a 94       	dec	r0
     5da:	e2 f7       	brpl	.-8      	; 0x5d4 <is_button_pressed+0x8>
     5dc:	20 fd       	sbrc	r18, 0
     5de:	0d c0       	rjmp	.+26     	; 0x5fa <is_button_pressed+0x2e>
     5e0:	fc 01       	movw	r30, r24
     5e2:	e0 5b       	subi	r30, 0xB0	; 176
     5e4:	fe 4f       	sbci	r31, 0xFE	; 254
     5e6:	20 81       	ld	r18, Z
     5e8:	21 11       	cpse	r18, r1
     5ea:	09 c0       	rjmp	.+18     	; 0x5fe <is_button_pressed+0x32>
		// make debounce increase to 30;
		debounce_buttons_array[button] = 1;
     5ec:	fc 01       	movw	r30, r24
     5ee:	e0 5b       	subi	r30, 0xB0	; 176
     5f0:	fe 4f       	sbci	r31, 0xFE	; 254
     5f2:	21 e0       	ldi	r18, 0x01	; 1
     5f4:	20 83       	st	Z, r18
		return 1;
     5f6:	81 e0       	ldi	r24, 0x01	; 1
     5f8:	08 95       	ret
	}
	return 0;
     5fa:	80 e0       	ldi	r24, 0x00	; 0
     5fc:	08 95       	ret
     5fe:	80 e0       	ldi	r24, 0x00	; 0
}
     600:	08 95       	ret

00000602 <LCDinit>:
	read_user_name();
}

void LCDinit()
{
	DDRD = _BV(4);
     602:	80 e1       	ldi	r24, 0x10	; 16
     604:	81 bb       	out	0x11, r24	; 17

	TCCR1A = _BV(COM1B1) | _BV(WGM10);
     606:	81 e2       	ldi	r24, 0x21	; 33
     608:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = _BV(WGM12) | _BV(CS11);
     60a:	8a e0       	ldi	r24, 0x0A	; 10
     60c:	8e bd       	out	0x2e, r24	; 46
	OCR1B = 14;
     60e:	8e e0       	ldi	r24, 0x0E	; 14
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	99 bd       	out	0x29, r25	; 41
     614:	88 bd       	out	0x28, r24	; 40
	
	lcd_init(LCD_DISP_ON);
     616:	8c e0       	ldi	r24, 0x0C	; 12
     618:	0e 94 2c 01 	call	0x258	; 0x258 <lcd_init>
     61c:	08 95       	ret

0000061e <ADCinit>:
}

void ADCinit()
{
	//konfiguracija ADC referentne voltaze (REFS0) i ulaznog pina PA0!
	ADMUX = _BV(REFS0);
     61e:	80 e4       	ldi	r24, 0x40	; 64
     620:	87 b9       	out	0x07, r24	; 7
	//ukljuci ADC i prescaler od 64
	ADCSRA = _BV(ADEN) | _BV(ADPS2) | _BV(ADPS1);
     622:	86 e8       	ldi	r24, 0x86	; 134
     624:	86 b9       	out	0x06, r24	; 6
     626:	08 95       	ret

00000628 <calibrate>:
}


void calibrate()
{
     628:	4f 92       	push	r4
     62a:	5f 92       	push	r5
     62c:	6f 92       	push	r6
     62e:	7f 92       	push	r7
     630:	8f 92       	push	r8
     632:	9f 92       	push	r9
     634:	af 92       	push	r10
     636:	bf 92       	push	r11
     638:	cf 92       	push	r12
     63a:	df 92       	push	r13
     63c:	ef 92       	push	r14
     63e:	ff 92       	push	r15
     640:	0f 93       	push	r16
     642:	1f 93       	push	r17
     644:	cf 93       	push	r28
     646:	df 93       	push	r29
	uint8_t count = 0;
	while(!is_calibrated){
     648:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <is_calibrated>
     64c:	81 11       	cpse	r24, r1
     64e:	93 c0       	rjmp	.+294    	; 0x776 <calibrate+0x14e>
     650:	c0 e0       	ldi	r28, 0x00	; 0
		if (tmp_abs < 10) //mores smanjit kod
		{
			count++;
			if(count == 20) //mores povecat tu da se vise puta treba poklopit vrijednost da je manja od one u if uvjetu
			{				//ali onda promijeni i u ispisu postotke
				is_calibrated = 1;
     652:	cc 24       	eor	r12, r12
     654:	c3 94       	inc	r12
				ref_value = ADCpretvorba();
				R0 *= 1 + ref_value/420; //veci broj = brze raste funkcija
				snprintf(Dstr, 64, "");
     656:	0f 2e       	mov	r0, r31
     658:	fb e5       	ldi	r31, 0x5B	; 91
     65a:	af 2e       	mov	r10, r31
     65c:	f1 e0       	ldi	r31, 0x01	; 1
     65e:	bf 2e       	mov	r11, r31
     660:	f0 2d       	mov	r31, r0
			}
		}
		snprintf(Ustr, 64, "Calibrating:%hhu%c", count*5, '%');
     662:	0f 2e       	mov	r0, r31
     664:	f5 e2       	ldi	r31, 0x25	; 37
     666:	df 2e       	mov	r13, r31
     668:	f0 2d       	mov	r31, r0
     66a:	0f 2e       	mov	r0, r31
     66c:	f7 e8       	ldi	r31, 0x87	; 135
     66e:	ef 2e       	mov	r14, r31
     670:	f0 e0       	ldi	r31, 0x00	; 0
     672:	ff 2e       	mov	r15, r31
     674:	f0 2d       	mov	r31, r0
     676:	d0 e4       	ldi	r29, 0x40	; 64
     678:	0b e9       	ldi	r16, 0x9B	; 155
     67a:	11 e0       	ldi	r17, 0x01	; 1

void calibrate()
{
	uint8_t count = 0;
	while(!is_calibrated){
		ADCSRA |= _BV(ADSC);
     67c:	36 9a       	sbi	0x06, 6	; 6
		while (!(ADCSRA & _BV(ADIF)));
     67e:	34 9b       	sbis	0x06, 4	; 6
     680:	fe cf       	rjmp	.-4      	; 0x67e <calibrate+0x56>
		
		uint16_t new_sample = ADC;
     682:	84 b1       	in	r24, 0x04	; 4
     684:	95 b1       	in	r25, 0x05	; 5
		uint8_t tmp_abs = 0;
		
		if((new_sample - last_sample) > 0) tmp_abs = new_sample - last_sample;
     686:	20 91 41 01 	lds	r18, 0x0141	; 0x800141 <last_sample>
     68a:	30 91 42 01 	lds	r19, 0x0142	; 0x800142 <last_sample+0x1>
     68e:	82 17       	cp	r24, r18
     690:	93 07       	cpc	r25, r19
     692:	39 f0       	breq	.+14     	; 0x6a2 <calibrate+0x7a>
		else tmp_abs = last_sample - new_sample;
		last_sample = new_sample;
     694:	90 93 42 01 	sts	0x0142, r25	; 0x800142 <last_sample+0x1>
     698:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <last_sample>

		if (tmp_abs < 10) //mores smanjit kod
     69c:	82 1b       	sub	r24, r18
     69e:	8a 30       	cpi	r24, 0x0A	; 10
     6a0:	e8 f5       	brcc	.+122    	; 0x71c <calibrate+0xf4>
		{
			count++;
     6a2:	cf 5f       	subi	r28, 0xFF	; 255
			if(count == 20) //mores povecat tu da se vise puta treba poklopit vrijednost da je manja od one u if uvjetu
     6a4:	c4 31       	cpi	r28, 0x14	; 20
     6a6:	d1 f5       	brne	.+116    	; 0x71c <calibrate+0xf4>
			{				//ali onda promijeni i u ispisu postotke
				is_calibrated = 1;
     6a8:	c0 92 43 01 	sts	0x0143, r12	; 0x800143 <is_calibrated>
				ref_value = ADCpretvorba();
     6ac:	0e 94 75 02 	call	0x4ea	; 0x4ea <ADCpretvorba>
     6b0:	60 93 4c 01 	sts	0x014C, r22	; 0x80014c <ref_value>
     6b4:	70 93 4d 01 	sts	0x014D, r23	; 0x80014d <ref_value+0x1>
     6b8:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <ref_value+0x2>
     6bc:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <ref_value+0x3>
				R0 *= 1 + ref_value/420; //veci broj = brze raste funkcija
     6c0:	60 91 4c 01 	lds	r22, 0x014C	; 0x80014c <ref_value>
     6c4:	70 91 4d 01 	lds	r23, 0x014D	; 0x80014d <ref_value+0x1>
     6c8:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <ref_value+0x2>
     6cc:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <ref_value+0x3>
     6d0:	80 90 61 00 	lds	r8, 0x0061	; 0x800061 <R0>
     6d4:	90 90 62 00 	lds	r9, 0x0062	; 0x800062 <R0+0x1>
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	42 ed       	ldi	r20, 0xD2	; 210
     6de:	53 e4       	ldi	r21, 0x43	; 67
     6e0:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__divsf3>
     6e4:	20 e0       	ldi	r18, 0x00	; 0
     6e6:	30 e0       	ldi	r19, 0x00	; 0
     6e8:	40 e8       	ldi	r20, 0x80	; 128
     6ea:	5f e3       	ldi	r21, 0x3F	; 63
     6ec:	0e 94 0a 08 	call	0x1014	; 0x1014 <__addsf3>
     6f0:	2b 01       	movw	r4, r22
     6f2:	3c 01       	movw	r6, r24
     6f4:	b4 01       	movw	r22, r8
     6f6:	99 0c       	add	r9, r9
     6f8:	88 0b       	sbc	r24, r24
     6fa:	99 0b       	sbc	r25, r25
     6fc:	0e 94 25 09 	call	0x124a	; 0x124a <__floatsisf>
     700:	9b 01       	movw	r18, r22
     702:	ac 01       	movw	r20, r24
     704:	c3 01       	movw	r24, r6
     706:	b2 01       	movw	r22, r4
     708:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__mulsf3>
     70c:	0e 94 ed 08 	call	0x11da	; 0x11da <__fixsfsi>
     710:	70 93 62 00 	sts	0x0062, r23	; 0x800062 <R0+0x1>
     714:	60 93 61 00 	sts	0x0061, r22	; 0x800061 <R0>
				snprintf(Dstr, 64, "");
     718:	f5 01       	movw	r30, r10
     71a:	10 82       	st	Z, r1
			}
		}
		snprintf(Ustr, 64, "Calibrating:%hhu%c", count*5, '%');
     71c:	1f 92       	push	r1
     71e:	df 92       	push	r13
     720:	8c 2f       	mov	r24, r28
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	9c 01       	movw	r18, r24
     726:	22 0f       	add	r18, r18
     728:	33 1f       	adc	r19, r19
     72a:	22 0f       	add	r18, r18
     72c:	33 1f       	adc	r19, r19
     72e:	82 0f       	add	r24, r18
     730:	93 1f       	adc	r25, r19
     732:	9f 93       	push	r25
     734:	8f 93       	push	r24
     736:	ff 92       	push	r15
     738:	ef 92       	push	r14
     73a:	1f 92       	push	r1
     73c:	df 93       	push	r29
     73e:	1f 93       	push	r17
     740:	0f 93       	push	r16
     742:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
		write_to_lcd();
     746:	0e 94 66 01 	call	0x2cc	; 0x2cc <write_to_lcd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     74a:	ff ef       	ldi	r31, 0xFF	; 255
     74c:	2f e1       	ldi	r18, 0x1F	; 31
     74e:	81 e0       	ldi	r24, 0x01	; 1
     750:	f1 50       	subi	r31, 0x01	; 1
     752:	20 40       	sbci	r18, 0x00	; 0
     754:	80 40       	sbci	r24, 0x00	; 0
     756:	e1 f7       	brne	.-8      	; 0x750 <calibrate+0x128>
     758:	00 c0       	rjmp	.+0      	; 0x75a <calibrate+0x132>
     75a:	00 00       	nop


void calibrate()
{
	uint8_t count = 0;
	while(!is_calibrated){
     75c:	ed b7       	in	r30, 0x3d	; 61
     75e:	fe b7       	in	r31, 0x3e	; 62
     760:	3a 96       	adiw	r30, 0x0a	; 10
     762:	0f b6       	in	r0, 0x3f	; 63
     764:	f8 94       	cli
     766:	fe bf       	out	0x3e, r31	; 62
     768:	0f be       	out	0x3f, r0	; 63
     76a:	ed bf       	out	0x3d, r30	; 61
     76c:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <is_calibrated>
     770:	88 23       	and	r24, r24
     772:	09 f4       	brne	.+2      	; 0x776 <calibrate+0x14e>
     774:	83 cf       	rjmp	.-250    	; 0x67c <calibrate+0x54>
		}
		snprintf(Ustr, 64, "Calibrating:%hhu%c", count*5, '%');
		write_to_lcd();
		_delay_ms(50); //ako je vec dovoljno zagrijan senzor kalibracija ce bit gotova u jednu sekundu
	}
}
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	1f 91       	pop	r17
     77c:	0f 91       	pop	r16
     77e:	ff 90       	pop	r15
     780:	ef 90       	pop	r14
     782:	df 90       	pop	r13
     784:	cf 90       	pop	r12
     786:	bf 90       	pop	r11
     788:	af 90       	pop	r10
     78a:	9f 90       	pop	r9
     78c:	8f 90       	pop	r8
     78e:	7f 90       	pop	r7
     790:	6f 90       	pop	r6
     792:	5f 90       	pop	r5
     794:	4f 90       	pop	r4
     796:	08 95       	ret

00000798 <save_result>:

void save_result(float BAC){
     798:	cf 92       	push	r12
     79a:	df 92       	push	r13
     79c:	ef 92       	push	r14
     79e:	ff 92       	push	r15
     7a0:	1f 93       	push	r17
     7a2:	cf 93       	push	r28
     7a4:	df 93       	push	r29
     7a6:	6b 01       	movw	r12, r22
     7a8:	7c 01       	movw	r14, r24
	float max_tmp;
	max_tmp = eeprom_read_float((uint8_t)user_number*SINGLE_USER_MEMORY_SIZE + USER_NAME_SIZE + USER_SLOT_SIZE + 12);
     7aa:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <user_number>
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	88 0f       	add	r24, r24
     7b2:	99 1f       	adc	r25, r25
     7b4:	ec 01       	movw	r28, r24
     7b6:	cc 0f       	add	r28, r28
     7b8:	dd 1f       	adc	r29, r29
     7ba:	cc 0f       	add	r28, r28
     7bc:	dd 1f       	adc	r29, r29
     7be:	cc 0f       	add	r28, r28
     7c0:	dd 1f       	adc	r29, r29
     7c2:	8c 0f       	add	r24, r28
     7c4:	9d 1f       	adc	r25, r29
     7c6:	ec 01       	movw	r28, r24
     7c8:	63 96       	adiw	r28, 0x13	; 19
     7ca:	ce 01       	movw	r24, r28
     7cc:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <eeprom_read_dword>
	if(max_tmp < BAC){
     7d0:	a7 01       	movw	r20, r14
     7d2:	96 01       	movw	r18, r12
     7d4:	0e 94 76 08 	call	0x10ec	; 0x10ec <__cmpsf2>
     7d8:	88 23       	and	r24, r24
     7da:	2c f4       	brge	.+10     	; 0x7e6 <save_result+0x4e>
		eeprom_write_float((uint8_t)user_number*SINGLE_USER_MEMORY_SIZE + USER_NAME_SIZE + USER_SLOT_SIZE + 12, BAC);
     7dc:	b7 01       	movw	r22, r14
     7de:	a6 01       	movw	r20, r12
     7e0:	ce 01       	movw	r24, r28
     7e2:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <eeprom_write_dword>
	}
	
	uint8_t save_offest = eeprom_read_byte((uint8_t)user_number*SINGLE_USER_MEMORY_SIZE + USER_NAME_SIZE);
     7e6:	c0 91 40 01 	lds	r28, 0x0140	; 0x800140 <user_number>
     7ea:	d0 e0       	ldi	r29, 0x00	; 0
     7ec:	cc 0f       	add	r28, r28
     7ee:	dd 1f       	adc	r29, r29
     7f0:	9e 01       	movw	r18, r28
     7f2:	22 0f       	add	r18, r18
     7f4:	33 1f       	adc	r19, r19
     7f6:	22 0f       	add	r18, r18
     7f8:	33 1f       	adc	r19, r19
     7fa:	22 0f       	add	r18, r18
     7fc:	33 1f       	adc	r19, r19
     7fe:	c2 0f       	add	r28, r18
     800:	d3 1f       	adc	r29, r19
     802:	ce 01       	movw	r24, r28
     804:	06 96       	adiw	r24, 0x06	; 6
     806:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <eeprom_read_byte>
     80a:	18 2f       	mov	r17, r24
	eeprom_write_float((uint8_t) user_number*SINGLE_USER_MEMORY_SIZE + USER_NAME_SIZE + USER_SLOT_SIZE + 4*save_offest, BAC);
     80c:	ce 01       	movw	r24, r28
     80e:	07 96       	adiw	r24, 0x07	; 7
     810:	b7 01       	movw	r22, r14
     812:	a6 01       	movw	r20, r12
     814:	24 e0       	ldi	r18, 0x04	; 4
     816:	12 9f       	mul	r17, r18
     818:	80 0d       	add	r24, r0
     81a:	91 1d       	adc	r25, r1
     81c:	11 24       	eor	r1, r1
     81e:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <eeprom_write_dword>
	if(save_offest >= 3){
     822:	13 30       	cpi	r17, 0x03	; 3
     824:	18 f4       	brcc	.+6      	; 0x82c <save_result+0x94>
		save_offest = 0;
	} else {
		save_offest++;
     826:	61 e0       	ldi	r22, 0x01	; 1
     828:	61 0f       	add	r22, r17
     82a:	01 c0       	rjmp	.+2      	; 0x82e <save_result+0x96>
	}
	
	uint8_t save_offest = eeprom_read_byte((uint8_t)user_number*SINGLE_USER_MEMORY_SIZE + USER_NAME_SIZE);
	eeprom_write_float((uint8_t) user_number*SINGLE_USER_MEMORY_SIZE + USER_NAME_SIZE + USER_SLOT_SIZE + 4*save_offest, BAC);
	if(save_offest >= 3){
		save_offest = 0;
     82c:	60 e0       	ldi	r22, 0x00	; 0
	} else {
		save_offest++;
	}
	eeprom_write_byte(user_number*SINGLE_USER_MEMORY_SIZE+USER_NAME_SIZE, save_offest);
     82e:	20 91 40 01 	lds	r18, 0x0140	; 0x800140 <user_number>
     832:	30 e0       	ldi	r19, 0x00	; 0
     834:	22 0f       	add	r18, r18
     836:	33 1f       	adc	r19, r19
     838:	c9 01       	movw	r24, r18
     83a:	88 0f       	add	r24, r24
     83c:	99 1f       	adc	r25, r25
     83e:	88 0f       	add	r24, r24
     840:	99 1f       	adc	r25, r25
     842:	88 0f       	add	r24, r24
     844:	99 1f       	adc	r25, r25
     846:	82 0f       	add	r24, r18
     848:	93 1f       	adc	r25, r19
     84a:	06 96       	adiw	r24, 0x06	; 6
     84c:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <eeprom_write_byte>
}
     850:	df 91       	pop	r29
     852:	cf 91       	pop	r28
     854:	1f 91       	pop	r17
     856:	ff 90       	pop	r15
     858:	ef 90       	pop	r14
     85a:	df 90       	pop	r13
     85c:	cf 90       	pop	r12
     85e:	08 95       	ret

00000860 <read_user_name>:

void read_user_name(){
	eeprom_read_block(ime, user_number*SINGLE_USER_MEMORY_SIZE, USER_NAME_SIZE);
     860:	60 91 40 01 	lds	r22, 0x0140	; 0x800140 <user_number>
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	66 0f       	add	r22, r22
     868:	77 1f       	adc	r23, r23
     86a:	cb 01       	movw	r24, r22
     86c:	88 0f       	add	r24, r24
     86e:	99 1f       	adc	r25, r25
     870:	88 0f       	add	r24, r24
     872:	99 1f       	adc	r25, r25
     874:	88 0f       	add	r24, r24
     876:	99 1f       	adc	r25, r25
     878:	68 0f       	add	r22, r24
     87a:	79 1f       	adc	r23, r25
     87c:	46 e0       	ldi	r20, 0x06	; 6
     87e:	50 e0       	ldi	r21, 0x00	; 0
     880:	85 e4       	ldi	r24, 0x45	; 69
     882:	91 e0       	ldi	r25, 0x01	; 1
     884:	0e 94 bf 0e 	call	0x1d7e	; 0x1d7e <eeprom_read_block>
     888:	08 95       	ret

0000088a <initialize>:
	return 0;
}

void initialize(){
	//user_number = eeprom_read_word((uint16_t*)16);
	mode = ALCOTEST_MODE;
     88a:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <mode>
	menu_active = 1;
     88e:	81 e0       	ldi	r24, 0x01	; 1
     890:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <menu_active>
	
	// buttons
	PORTB = _BV(0) | _BV(1) | _BV(2) | _BV(3);
     894:	8f e0       	ldi	r24, 0x0F	; 15
     896:	88 bb       	out	0x18, r24	; 24
	DDRB = 0;	
     898:	17 ba       	out	0x17, r1	; 23
	
	number_of_users = eeprom_read_byte(4*SINGLE_USER_MEMORY_SIZE);
     89a:	88 e4       	ldi	r24, 0x48	; 72
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <eeprom_read_byte>
     8a2:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <number_of_users>
	if(number_of_users < 1 || number_of_users > 4){
     8a6:	81 50       	subi	r24, 0x01	; 1
     8a8:	84 30       	cpi	r24, 0x04	; 4
     8aa:	10 f0       	brcs	.+4      	; 0x8b0 <initialize+0x26>
		delete_database();
     8ac:	0e 94 9f 01 	call	0x33e	; 0x33e <delete_database>
	}
	read_user_name();
     8b0:	0e 94 30 04 	call	0x860	; 0x860 <read_user_name>
     8b4:	08 95       	ret

000008b6 <get_user_result>:
void read_user_name(){
	eeprom_read_block(ime, user_number*SINGLE_USER_MEMORY_SIZE, USER_NAME_SIZE);
}

void get_user_result(){
	result = eeprom_read_float(user_number*SINGLE_USER_MEMORY_SIZE + USER_NAME_SIZE + USER_SLOT_SIZE + result_pointer*4);
     8b6:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <user_number>
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	88 0f       	add	r24, r24
     8be:	99 1f       	adc	r25, r25
     8c0:	9c 01       	movw	r18, r24
     8c2:	22 0f       	add	r18, r18
     8c4:	33 1f       	adc	r19, r19
     8c6:	22 0f       	add	r18, r18
     8c8:	33 1f       	adc	r19, r19
     8ca:	22 0f       	add	r18, r18
     8cc:	33 1f       	adc	r19, r19
     8ce:	82 0f       	add	r24, r18
     8d0:	93 1f       	adc	r25, r19
     8d2:	07 96       	adiw	r24, 0x07	; 7
     8d4:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <result_pointer>
     8d8:	34 e0       	ldi	r19, 0x04	; 4
     8da:	23 9f       	mul	r18, r19
     8dc:	80 0d       	add	r24, r0
     8de:	91 1d       	adc	r25, r1
     8e0:	11 24       	eor	r1, r1
     8e2:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <eeprom_read_dword>
     8e6:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <result>
     8ea:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <result+0x1>
     8ee:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <result+0x2>
     8f2:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <result+0x3>
     8f6:	08 95       	ret

000008f8 <average_result>:
}

float average_result() {
     8f8:	cf 92       	push	r12
     8fa:	df 92       	push	r13
     8fc:	ef 92       	push	r14
     8fe:	ff 92       	push	r15
     900:	0f 93       	push	r16
     902:	1f 93       	push	r17
     904:	cf 93       	push	r28
     906:	df 93       	push	r29
	uint8_t j;
	float sum = 0.0f;
	for (j = 0; j < 3; ++j) {
		sum += eeprom_read_float(user_number*SINGLE_USER_MEMORY_SIZE+USER_NAME_SIZE+USER_SLOT_SIZE+j*4);
     908:	00 91 40 01 	lds	r16, 0x0140	; 0x800140 <user_number>
     90c:	10 e0       	ldi	r17, 0x00	; 0
     90e:	00 0f       	add	r16, r16
     910:	11 1f       	adc	r17, r17
     912:	c8 01       	movw	r24, r16
     914:	88 0f       	add	r24, r24
     916:	99 1f       	adc	r25, r25
     918:	88 0f       	add	r24, r24
     91a:	99 1f       	adc	r25, r25
     91c:	88 0f       	add	r24, r24
     91e:	99 1f       	adc	r25, r25
     920:	08 0f       	add	r16, r24
     922:	19 1f       	adc	r17, r25
     924:	e8 01       	movw	r28, r16
     926:	27 96       	adiw	r28, 0x07	; 7
     928:	0d 5e       	subi	r16, 0xED	; 237
     92a:	1f 4f       	sbci	r17, 0xFF	; 255
	result = eeprom_read_float(user_number*SINGLE_USER_MEMORY_SIZE + USER_NAME_SIZE + USER_SLOT_SIZE + result_pointer*4);
}

float average_result() {
	uint8_t j;
	float sum = 0.0f;
     92c:	c1 2c       	mov	r12, r1
     92e:	d1 2c       	mov	r13, r1
     930:	76 01       	movw	r14, r12
	for (j = 0; j < 3; ++j) {
		sum += eeprom_read_float(user_number*SINGLE_USER_MEMORY_SIZE+USER_NAME_SIZE+USER_SLOT_SIZE+j*4);
     932:	ce 01       	movw	r24, r28
     934:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <eeprom_read_dword>
     938:	9b 01       	movw	r18, r22
     93a:	ac 01       	movw	r20, r24
     93c:	c7 01       	movw	r24, r14
     93e:	b6 01       	movw	r22, r12
     940:	0e 94 0a 08 	call	0x1014	; 0x1014 <__addsf3>
     944:	6b 01       	movw	r12, r22
     946:	7c 01       	movw	r14, r24
     948:	24 96       	adiw	r28, 0x04	; 4
}

float average_result() {
	uint8_t j;
	float sum = 0.0f;
	for (j = 0; j < 3; ++j) {
     94a:	c0 17       	cp	r28, r16
     94c:	d1 07       	cpc	r29, r17
     94e:	89 f7       	brne	.-30     	; 0x932 <average_result+0x3a>
		sum += eeprom_read_float(user_number*SINGLE_USER_MEMORY_SIZE+USER_NAME_SIZE+USER_SLOT_SIZE+j*4);
	}
	return sum/(float)3;
     950:	20 e0       	ldi	r18, 0x00	; 0
     952:	30 e0       	ldi	r19, 0x00	; 0
     954:	40 e4       	ldi	r20, 0x40	; 64
     956:	50 e4       	ldi	r21, 0x40	; 64
     958:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <__divsf3>
}
     95c:	df 91       	pop	r29
     95e:	cf 91       	pop	r28
     960:	1f 91       	pop	r17
     962:	0f 91       	pop	r16
     964:	ff 90       	pop	r15
     966:	ef 90       	pop	r14
     968:	df 90       	pop	r13
     96a:	cf 90       	pop	r12
     96c:	08 95       	ret

0000096e <add_new_user_update_screen>:

void add_new_user_update_screen(){
	snprintf(Ustr, 128, "User:%s", ime);
     96e:	85 e4       	ldi	r24, 0x45	; 69
     970:	91 e0       	ldi	r25, 0x01	; 1
     972:	9f 93       	push	r25
     974:	8f 93       	push	r24
     976:	8a e9       	ldi	r24, 0x9A	; 154
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	9f 93       	push	r25
     97c:	8f 93       	push	r24
     97e:	1f 92       	push	r1
     980:	80 e8       	ldi	r24, 0x80	; 128
     982:	8f 93       	push	r24
     984:	8b e9       	ldi	r24, 0x9B	; 155
     986:	91 e0       	ldi	r25, 0x01	; 1
     988:	9f 93       	push	r25
     98a:	8f 93       	push	r24
     98c:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
	write_to_lcd();
     990:	0e 94 66 01 	call	0x2cc	; 0x2cc <write_to_lcd>
	lcd_gotoxy(5+choose_name_pointer, 0);
     994:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <choose_name_pointer>
     998:	60 e0       	ldi	r22, 0x00	; 0
     99a:	8b 5f       	subi	r24, 0xFB	; 251
     99c:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcd_gotoxy>
	lcd_putc(name_current_letter);
     9a0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     9a4:	0e 94 07 01 	call	0x20e	; 0x20e <lcd_putc>
	lcd_gotoxy(5+choose_name_pointer, 0);
     9a8:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <choose_name_pointer>
     9ac:	60 e0       	ldi	r22, 0x00	; 0
     9ae:	8b 5f       	subi	r24, 0xFB	; 251
     9b0:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcd_gotoxy>
}
     9b4:	8d b7       	in	r24, 0x3d	; 61
     9b6:	9e b7       	in	r25, 0x3e	; 62
     9b8:	08 96       	adiw	r24, 0x08	; 8
     9ba:	0f b6       	in	r0, 0x3f	; 63
     9bc:	f8 94       	cli
     9be:	9e bf       	out	0x3e, r25	; 62
     9c0:	0f be       	out	0x3f, r0	; 63
     9c2:	8d bf       	out	0x3d, r24	; 61
     9c4:	08 95       	ret

000009c6 <add_new_user>:

void add_new_user(){
     9c6:	0f 93       	push	r16
     9c8:	1f 93       	push	r17
     9ca:	cf 93       	push	r28
     9cc:	df 93       	push	r29
	if(number_of_users >= 4) return;
     9ce:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <number_of_users>
     9d2:	84 30       	cpi	r24, 0x04	; 4
     9d4:	30 f5       	brcc	.+76     	; 0xa22 <add_new_user+0x5c>
     9d6:	05 e4       	ldi	r16, 0x45	; 69
     9d8:	11 e0       	ldi	r17, 0x01	; 1
     9da:	c0 e0       	ldi	r28, 0x00	; 0
     9dc:	d0 e0       	ldi	r29, 0x00	; 0
	uint8_t j;
	for (j = 0; j < USER_NAME_SIZE-1; ++j) {
		eeprom_write_byte(number_of_users*SINGLE_USER_MEMORY_SIZE + j, ime[j]);
     9de:	f8 01       	movw	r30, r16
     9e0:	61 91       	ld	r22, Z+
     9e2:	8f 01       	movw	r16, r30
     9e4:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <number_of_users>
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	88 0f       	add	r24, r24
     9ec:	99 1f       	adc	r25, r25
     9ee:	9c 01       	movw	r18, r24
     9f0:	22 0f       	add	r18, r18
     9f2:	33 1f       	adc	r19, r19
     9f4:	22 0f       	add	r18, r18
     9f6:	33 1f       	adc	r19, r19
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	82 0f       	add	r24, r18
     9fe:	93 1f       	adc	r25, r19
     a00:	8c 0f       	add	r24, r28
     a02:	9d 1f       	adc	r25, r29
     a04:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <eeprom_write_byte>
     a08:	21 96       	adiw	r28, 0x01	; 1
}

void add_new_user(){
	if(number_of_users >= 4) return;
	uint8_t j;
	for (j = 0; j < USER_NAME_SIZE-1; ++j) {
     a0a:	c5 30       	cpi	r28, 0x05	; 5
     a0c:	d1 05       	cpc	r29, r1
     a0e:	39 f7       	brne	.-50     	; 0x9de <add_new_user+0x18>
		eeprom_write_byte(number_of_users*SINGLE_USER_MEMORY_SIZE + j, ime[j]);
	}
	//eeprom_write_block(ime, number_of_users*SINGLE_USER_MEMORY_SIZE, USER_NAME_SIZE-1); // write name
	//eeprom_write_byte(number_of_users*SINGLE_USER_MEMORY_SIZE + USER_NAME_SIZE - 1, '\0'); // write name
	number_of_users++;
     a10:	60 91 3f 01 	lds	r22, 0x013F	; 0x80013f <number_of_users>
     a14:	6f 5f       	subi	r22, 0xFF	; 255
     a16:	60 93 3f 01 	sts	0x013F, r22	; 0x80013f <number_of_users>
	eeprom_write_byte(SINGLE_USER_MEMORY_SIZE*4, number_of_users); // how many users are in the database?
     a1a:	88 e4       	ldi	r24, 0x48	; 72
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <eeprom_write_byte>
}
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	1f 91       	pop	r17
     a28:	0f 91       	pop	r16
     a2a:	08 95       	ret

00000a2c <main>:

int main()
{
	initialize();
     a2c:	0e 94 45 04 	call	0x88a	; 0x88a <initialize>
	LCDinit();
     a30:	0e 94 01 03 	call	0x602	; 0x602 <LCDinit>
	ADCinit();
     a34:	0e 94 0f 03 	call	0x61e	; 0x61e <ADCinit>
	calibrate();
     a38:	0e 94 14 03 	call	0x628	; 0x628 <calibrate>
					break;
				case CLEAR_DATABASE_MODE:
					snprintf(Ustr, 64, "?Clear\ndatabase");
					break;
			}
			snprintf(Dstr, 64, "");
     a3c:	cb e5       	ldi	r28, 0x5B	; 91
     a3e:	d1 e0       	ldi	r29, 0x01	; 1
				
			}
			
			if(is_button_pressed(BUTTON_LEFT)) {
				if(menu_pointer == 0){
					menu_pointer = 4;
     a40:	68 94       	set
     a42:	55 24       	eor	r5, r5
     a44:	52 f8       	bld	r5, 2
			
			if(is_button_pressed(BUTTON_CONFIRM)) {
				// odabrano nesto iz menu-a
				if(menu_pointer == ADD_USER_MODE){
					if(number_of_users > 4) continue;
					snprintf(ime, USER_NAME_SIZE, ""); // ocisti varijablu ime
     a46:	05 e4       	ldi	r16, 0x45	; 69
     a48:	11 e0       	ldi	r17, 0x01	; 1
						add_new_user();
						mode = ALCOTEST_MODE;
						menu_active = 1;
						lcd_command(LCD_DISP_ON);
					} else {
						snprintf(ime, USER_NAME_SIZE, "%s%c\0", ime, name_current_letter);
     a4a:	0f 2e       	mov	r0, r31
     a4c:	f3 e6       	ldi	r31, 0x63	; 99
     a4e:	2f 2e       	mov	r2, r31
     a50:	f0 e0       	ldi	r31, 0x00	; 0
     a52:	3f 2e       	mov	r3, r31
     a54:	f0 2d       	mov	r31, r0
				}
				
				if(!yes_no_button){
					snprintf(Dstr, 128, "No");
				} else {
					snprintf(Dstr, 128, "Yes");
     a56:	0f 2e       	mov	r0, r31
     a58:	f9 e5       	ldi	r31, 0x59	; 89
     a5a:	8f 2e       	mov	r8, r31
     a5c:	f5 e6       	ldi	r31, 0x65	; 101
     a5e:	9f 2e       	mov	r9, r31
     a60:	f0 2d       	mov	r31, r0
     a62:	0f 2e       	mov	r0, r31
     a64:	f3 e7       	ldi	r31, 0x73	; 115
     a66:	af 2e       	mov	r10, r31
     a68:	b1 2c       	mov	r11, r1
     a6a:	f0 2d       	mov	r31, r0
						yes_no_button = 0;
					}
				}
				
				if(!yes_no_button){
					snprintf(Dstr, 128, "No");
     a6c:	0f 2e       	mov	r0, r31
     a6e:	fe e4       	ldi	r31, 0x4E	; 78
     a70:	6f 2e       	mov	r6, r31
     a72:	ff e6       	ldi	r31, 0x6F	; 111
     a74:	7f 2e       	mov	r7, r31
     a76:	f0 2d       	mov	r31, r0
		
		switch(mode){
			case ALCOTEST_MODE:
			{
				ALCsample = ADCpretvorba();
				snprintf(Ustr, 128, "User:%s", ime);
     a78:	0f 2e       	mov	r0, r31
     a7a:	fa e9       	ldi	r31, 0x9A	; 154
     a7c:	ef 2e       	mov	r14, r31
     a7e:	f0 e0       	ldi	r31, 0x00	; 0
     a80:	ff 2e       	mov	r15, r31
     a82:	f0 2d       	mov	r31, r0
					if(user_number > number_of_users-1) user_number = 0;
					read_user_name();
				}

				snprintf(Ustr, 128, "User:%s", ime);
				snprintf(Dstr, 128, "ID:%d of %d", user_number+1, number_of_users);
     a84:	0f 2e       	mov	r0, r31
     a86:	f1 ee       	ldi	r31, 0xE1	; 225
     a88:	cf 2e       	mov	r12, r31
     a8a:	f0 e0       	ldi	r31, 0x00	; 0
     a8c:	df 2e       	mov	r13, r31
     a8e:	f0 2d       	mov	r31, r0
	// calibrating
	
    /* Replace with your beautiful code */
    while (1) 
    {
		debounce_buttons();
     a90:	0e 94 cc 02 	call	0x598	; 0x598 <debounce_buttons>

		if(is_button_pressed(BUTTON_SWITCH_MODE)) {
     a94:	80 e0       	ldi	r24, 0x00	; 0
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     a9c:	88 23       	and	r24, r24
     a9e:	41 f0       	breq	.+16     	; 0xab0 <main+0x84>
			if(menu_active){
     aa0:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <menu_active>
     aa4:	81 11       	cpse	r24, r1
     aa6:	09 c0       	rjmp	.+18     	; 0xaba <main+0x8e>
				//menu_active = 0;
			} else {
				menu_active = 1;
     aa8:	81 e0       	ldi	r24, 0x01	; 1
     aaa:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <menu_active>
     aae:	05 c0       	rjmp	.+10     	; 0xaba <main+0x8e>
			}
		}
		
		if(menu_active){
     ab0:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <menu_active>
     ab4:	88 23       	and	r24, r24
     ab6:	09 f4       	brne	.+2      	; 0xaba <main+0x8e>
     ab8:	99 c0       	rjmp	.+306    	; 0xbec <main+0x1c0>
			if(mode == ADD_USER_MODE){
     aba:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <mode>
     abe:	83 30       	cpi	r24, 0x03	; 3
     ac0:	19 f4       	brne	.+6      	; 0xac8 <main+0x9c>
				lcd_command(LCD_DISP_ON);
     ac2:	8c e0       	ldi	r24, 0x0C	; 12
     ac4:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>
			}
			
			if(is_button_pressed(BUTTON_CONFIRM)) {
     ac8:	82 e0       	ldi	r24, 0x02	; 2
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     ad0:	88 23       	and	r24, r24
     ad2:	39 f1       	breq	.+78     	; 0xb22 <main+0xf6>
				// odabrano nesto iz menu-a
				if(menu_pointer == ADD_USER_MODE){
     ad4:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     ad8:	83 30       	cpi	r24, 0x03	; 3
     ada:	91 f4       	brne	.+36     	; 0xb00 <main+0xd4>
					if(number_of_users > 4) continue;
     adc:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <number_of_users>
     ae0:	85 30       	cpi	r24, 0x05	; 5
     ae2:	b0 f6       	brcc	.-84     	; 0xa90 <main+0x64>
					snprintf(ime, USER_NAME_SIZE, ""); // ocisti varijablu ime
     ae4:	f8 01       	movw	r30, r16
     ae6:	10 82       	st	Z, r1
					snprintf(Dstr, 128, "");
     ae8:	18 82       	st	Y, r1
					lcd_command(LCD_DISP_ON_CURSOR_BLINK); // napravi da cursor blinka
     aea:	8f e0       	ldi	r24, 0x0F	; 15
     aec:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>
					choose_name_pointer = 0;
     af0:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <choose_name_pointer>
					name_current_letter = 'A';
     af4:	f1 e4       	ldi	r31, 0x41	; 65
     af6:	f0 93 60 00 	sts	0x0060, r31	; 0x800060 <__DATA_REGION_ORIGIN__>
					add_new_user_update_screen();
     afa:	0e 94 b7 04 	call	0x96e	; 0x96e <add_new_user_update_screen>
     afe:	0b c0       	rjmp	.+22     	; 0xb16 <main+0xea>
				} else if(menu_pointer == RESULTS_MODE){
     b00:	82 30       	cpi	r24, 0x02	; 2
     b02:	29 f4       	brne	.+10     	; 0xb0e <main+0xe2>
					result_pointer = 0;
     b04:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <result_pointer>
					get_user_result();
     b08:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <get_user_result>
     b0c:	04 c0       	rjmp	.+8      	; 0xb16 <main+0xea>
				} else if(menu_pointer == SWITCH_USER_MODE){
     b0e:	81 30       	cpi	r24, 0x01	; 1
     b10:	11 f4       	brne	.+4      	; 0xb16 <main+0xea>
					read_user_name();
     b12:	0e 94 30 04 	call	0x860	; 0x860 <read_user_name>
				}
				mode = menu_pointer;
     b16:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     b1a:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <mode>
				menu_active = 0;
     b1e:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <menu_active>
				//snprintf(Ustr, 128, "User:%s", ime);
				
			}
			
			if(is_button_pressed(BUTTON_LEFT)) {
     b22:	81 e0       	ldi	r24, 0x01	; 1
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     b2a:	88 23       	and	r24, r24
     b2c:	51 f0       	breq	.+20     	; 0xb42 <main+0x116>
				if(menu_pointer == 0){
     b2e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     b32:	81 11       	cpse	r24, r1
     b34:	03 c0       	rjmp	.+6      	; 0xb3c <main+0x110>
					menu_pointer = 4;
     b36:	50 92 38 01 	sts	0x0138, r5	; 0x800138 <__data_end>
     b3a:	03 c0       	rjmp	.+6      	; 0xb42 <main+0x116>
				} else {
					menu_pointer--;
     b3c:	81 50       	subi	r24, 0x01	; 1
     b3e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
				}
				
			}
			
			if(is_button_pressed(BUTTON_RIGHT)) {
     b42:	83 e0       	ldi	r24, 0x03	; 3
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     b4a:	88 23       	and	r24, r24
     b4c:	59 f0       	breq	.+22     	; 0xb64 <main+0x138>
				menu_pointer++;
     b4e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     b52:	8f 5f       	subi	r24, 0xFF	; 255
				if(menu_pointer > 4) menu_pointer = 0;
     b54:	85 30       	cpi	r24, 0x05	; 5
     b56:	18 f4       	brcc	.+6      	; 0xb5e <main+0x132>
				}
				
			}
			
			if(is_button_pressed(BUTTON_RIGHT)) {
				menu_pointer++;
     b58:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
     b5c:	03 c0       	rjmp	.+6      	; 0xb64 <main+0x138>
				if(menu_pointer > 4) menu_pointer = 0;
     b5e:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <__data_end>
     b62:	0f c0       	rjmp	.+30     	; 0xb82 <main+0x156>
			}
			
			
			switch(menu_pointer){
     b64:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
     b68:	82 30       	cpi	r24, 0x02	; 2
     b6a:	f9 f0       	breq	.+62     	; 0xbaa <main+0x17e>
     b6c:	28 f4       	brcc	.+10     	; 0xb78 <main+0x14c>
     b6e:	88 23       	and	r24, r24
     b70:	41 f0       	breq	.+16     	; 0xb82 <main+0x156>
     b72:	81 30       	cpi	r24, 0x01	; 1
     b74:	81 f0       	breq	.+32     	; 0xb96 <main+0x16a>
     b76:	36 c0       	rjmp	.+108    	; 0xbe4 <main+0x1b8>
     b78:	83 30       	cpi	r24, 0x03	; 3
     b7a:	09 f1       	breq	.+66     	; 0xbbe <main+0x192>
     b7c:	84 30       	cpi	r24, 0x04	; 4
     b7e:	49 f1       	breq	.+82     	; 0xbd2 <main+0x1a6>
     b80:	31 c0       	rjmp	.+98     	; 0xbe4 <main+0x1b8>
				case ALCOTEST_MODE:
					snprintf(Ustr, 64, "?Alcotest");
     b82:	8a e0       	ldi	r24, 0x0A	; 10
     b84:	e2 ea       	ldi	r30, 0xA2	; 162
     b86:	f0 e0       	ldi	r31, 0x00	; 0
     b88:	ab e9       	ldi	r26, 0x9B	; 155
     b8a:	b1 e0       	ldi	r27, 0x01	; 1
     b8c:	01 90       	ld	r0, Z+
     b8e:	0d 92       	st	X+, r0
     b90:	8a 95       	dec	r24
     b92:	e1 f7       	brne	.-8      	; 0xb8c <main+0x160>
					break;
     b94:	27 c0       	rjmp	.+78     	; 0xbe4 <main+0x1b8>
				case SWITCH_USER_MODE:
					snprintf(Ustr, 64, "?Switch\nuser");
     b96:	8d e0       	ldi	r24, 0x0D	; 13
     b98:	ec ea       	ldi	r30, 0xAC	; 172
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	ab e9       	ldi	r26, 0x9B	; 155
     b9e:	b1 e0       	ldi	r27, 0x01	; 1
     ba0:	01 90       	ld	r0, Z+
     ba2:	0d 92       	st	X+, r0
     ba4:	8a 95       	dec	r24
     ba6:	e1 f7       	brne	.-8      	; 0xba0 <main+0x174>
					break;
     ba8:	1d c0       	rjmp	.+58     	; 0xbe4 <main+0x1b8>
				case RESULTS_MODE:
					snprintf(Ustr, 64, "?Results");
     baa:	89 e0       	ldi	r24, 0x09	; 9
     bac:	e9 eb       	ldi	r30, 0xB9	; 185
     bae:	f0 e0       	ldi	r31, 0x00	; 0
     bb0:	ab e9       	ldi	r26, 0x9B	; 155
     bb2:	b1 e0       	ldi	r27, 0x01	; 1
     bb4:	01 90       	ld	r0, Z+
     bb6:	0d 92       	st	X+, r0
     bb8:	8a 95       	dec	r24
     bba:	e1 f7       	brne	.-8      	; 0xbb4 <main+0x188>
					break;
     bbc:	13 c0       	rjmp	.+38     	; 0xbe4 <main+0x1b8>
				case ADD_USER_MODE:
					snprintf(Ustr, 64, "?Add new\nusers");
     bbe:	8f e0       	ldi	r24, 0x0F	; 15
     bc0:	e2 ec       	ldi	r30, 0xC2	; 194
     bc2:	f0 e0       	ldi	r31, 0x00	; 0
     bc4:	ab e9       	ldi	r26, 0x9B	; 155
     bc6:	b1 e0       	ldi	r27, 0x01	; 1
     bc8:	01 90       	ld	r0, Z+
     bca:	0d 92       	st	X+, r0
     bcc:	8a 95       	dec	r24
     bce:	e1 f7       	brne	.-8      	; 0xbc8 <main+0x19c>
					break;
     bd0:	09 c0       	rjmp	.+18     	; 0xbe4 <main+0x1b8>
				case CLEAR_DATABASE_MODE:
					snprintf(Ustr, 64, "?Clear\ndatabase");
     bd2:	80 e1       	ldi	r24, 0x10	; 16
     bd4:	e1 ed       	ldi	r30, 0xD1	; 209
     bd6:	f0 e0       	ldi	r31, 0x00	; 0
     bd8:	ab e9       	ldi	r26, 0x9B	; 155
     bda:	b1 e0       	ldi	r27, 0x01	; 1
     bdc:	01 90       	ld	r0, Z+
     bde:	0d 92       	st	X+, r0
     be0:	8a 95       	dec	r24
     be2:	e1 f7       	brne	.-8      	; 0xbdc <main+0x1b0>
					break;
			}
			snprintf(Dstr, 64, "");
     be4:	18 82       	st	Y, r1
			write_to_lcd();
     be6:	0e 94 66 01 	call	0x2cc	; 0x2cc <write_to_lcd>
			continue;
     bea:	52 cf       	rjmp	.-348    	; 0xa90 <main+0x64>
		}
		
		
		
		switch(mode){
     bec:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <mode>
     bf0:	82 30       	cpi	r24, 0x02	; 2
     bf2:	09 f4       	brne	.+2      	; 0xbf6 <main+0x1ca>
     bf4:	ba c0       	rjmp	.+372    	; 0xd6a <main+0x33e>
     bf6:	30 f4       	brcc	.+12     	; 0xc04 <main+0x1d8>
     bf8:	88 23       	and	r24, r24
     bfa:	59 f0       	breq	.+22     	; 0xc12 <main+0x1e6>
     bfc:	81 30       	cpi	r24, 0x01	; 1
     bfe:	09 f4       	brne	.+2      	; 0xc02 <main+0x1d6>
     c00:	50 c0       	rjmp	.+160    	; 0xca2 <main+0x276>
     c02:	fd c1       	rjmp	.+1018   	; 0xffe <main+0x5d2>
     c04:	83 30       	cpi	r24, 0x03	; 3
     c06:	09 f4       	brne	.+2      	; 0xc0a <main+0x1de>
     c08:	42 c1       	rjmp	.+644    	; 0xe8e <main+0x462>
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	09 f4       	brne	.+2      	; 0xc10 <main+0x1e4>
     c0e:	a9 c1       	rjmp	.+850    	; 0xf62 <main+0x536>
     c10:	f6 c1       	rjmp	.+1004   	; 0xffe <main+0x5d2>
			case ALCOTEST_MODE:
			{
				ALCsample = ADCpretvorba();
     c12:	0e 94 75 02 	call	0x4ea	; 0x4ea <ADCpretvorba>
     c16:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <ALCsample>
     c1a:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <ALCsample+0x1>
     c1e:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <ALCsample+0x2>
     c22:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <ALCsample+0x3>
				snprintf(Ustr, 128, "User:%s", ime);
     c26:	1f 93       	push	r17
     c28:	0f 93       	push	r16
     c2a:	ff 92       	push	r15
     c2c:	ef 92       	push	r14
     c2e:	1f 92       	push	r1
     c30:	80 e8       	ldi	r24, 0x80	; 128
     c32:	8f 93       	push	r24
     c34:	8b e9       	ldi	r24, 0x9B	; 155
     c36:	91 e0       	ldi	r25, 0x01	; 1
     c38:	9f 93       	push	r25
     c3a:	8f 93       	push	r24
     c3c:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
				writeADC(ALCsample);
     c40:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <ALCsample>
     c44:	70 91 55 01 	lds	r23, 0x0155	; 0x800155 <ALCsample+0x1>
     c48:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <ALCsample+0x2>
     c4c:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <ALCsample+0x3>
     c50:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <writeADC>
     c54:	2f ef       	ldi	r18, 0xFF	; 255
     c56:	3f e5       	ldi	r19, 0x5F	; 95
     c58:	83 e0       	ldi	r24, 0x03	; 3
     c5a:	21 50       	subi	r18, 0x01	; 1
     c5c:	30 40       	sbci	r19, 0x00	; 0
     c5e:	80 40       	sbci	r24, 0x00	; 0
     c60:	e1 f7       	brne	.-8      	; 0xc5a <main+0x22e>
     c62:	00 c0       	rjmp	.+0      	; 0xc64 <main+0x238>
     c64:	00 00       	nop
				_delay_ms(150);
				if(is_button_pressed(BUTTON_CONFIRM)) {
     c66:	82 e0       	ldi	r24, 0x02	; 2
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     c6e:	ed b7       	in	r30, 0x3d	; 61
     c70:	fe b7       	in	r31, 0x3e	; 62
     c72:	38 96       	adiw	r30, 0x08	; 8
     c74:	0f b6       	in	r0, 0x3f	; 63
     c76:	f8 94       	cli
     c78:	fe bf       	out	0x3e, r31	; 62
     c7a:	0f be       	out	0x3f, r0	; 63
     c7c:	ed bf       	out	0x3d, r30	; 61
     c7e:	88 23       	and	r24, r24
     c80:	69 f0       	breq	.+26     	; 0xc9c <main+0x270>
					save_result(ALCsample);
     c82:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <ALCsample>
     c86:	70 91 55 01 	lds	r23, 0x0155	; 0x800155 <ALCsample+0x1>
     c8a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <ALCsample+0x2>
     c8e:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <ALCsample+0x3>
     c92:	0e 94 cc 03 	call	0x798	; 0x798 <save_result>
					mode = RESULTS_MODE;
     c96:	82 e0       	ldi	r24, 0x02	; 2
     c98:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <mode>
				}
				write_to_lcd();
     c9c:	0e 94 66 01 	call	0x2cc	; 0x2cc <write_to_lcd>
				break;
     ca0:	ae c1       	rjmp	.+860    	; 0xffe <main+0x5d2>
			}
			case SWITCH_USER_MODE:
			
				if(is_button_pressed(BUTTON_CONFIRM)) {
     ca2:	82 e0       	ldi	r24, 0x02	; 2
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     caa:	88 23       	and	r24, r24
     cac:	29 f0       	breq	.+10     	; 0xcb8 <main+0x28c>
					mode = ALCOTEST_MODE;
     cae:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <mode>
					menu_active = 1;
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <menu_active>
				}
				
				if(is_button_pressed(BUTTON_LEFT)) {
     cb8:	81 e0       	ldi	r24, 0x01	; 1
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     cc0:	88 23       	and	r24, r24
     cc2:	79 f0       	breq	.+30     	; 0xce2 <main+0x2b6>
					if(user_number == 0){
     cc4:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <user_number>
     cc8:	81 11       	cpse	r24, r1
     cca:	06 c0       	rjmp	.+12     	; 0xcd8 <main+0x2ac>
						user_number = number_of_users-1;
     ccc:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <number_of_users>
     cd0:	81 50       	subi	r24, 0x01	; 1
     cd2:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <user_number>
     cd6:	03 c0       	rjmp	.+6      	; 0xcde <main+0x2b2>
						} else {
						user_number--;
     cd8:	81 50       	subi	r24, 0x01	; 1
     cda:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <user_number>
					}
					read_user_name();
     cde:	0e 94 30 04 	call	0x860	; 0x860 <read_user_name>
				}
				
				if(is_button_pressed(BUTTON_RIGHT)) {
     ce2:	83 e0       	ldi	r24, 0x03	; 3
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     cea:	88 23       	and	r24, r24
     cec:	91 f0       	breq	.+36     	; 0xd12 <main+0x2e6>
					user_number++;
     cee:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <user_number>
     cf2:	8f 5f       	subi	r24, 0xFF	; 255
     cf4:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <user_number>
					if(user_number > number_of_users-1) user_number = 0;
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	20 91 3f 01 	lds	r18, 0x013F	; 0x80013f <number_of_users>
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	21 50       	subi	r18, 0x01	; 1
     d02:	31 09       	sbc	r19, r1
     d04:	28 17       	cp	r18, r24
     d06:	39 07       	cpc	r19, r25
     d08:	14 f4       	brge	.+4      	; 0xd0e <main+0x2e2>
     d0a:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <user_number>
					read_user_name();
     d0e:	0e 94 30 04 	call	0x860	; 0x860 <read_user_name>
				}

				snprintf(Ustr, 128, "User:%s", ime);
     d12:	1f 93       	push	r17
     d14:	0f 93       	push	r16
     d16:	ff 92       	push	r15
     d18:	ef 92       	push	r14
     d1a:	1f 92       	push	r1
     d1c:	68 94       	set
     d1e:	44 24       	eor	r4, r4
     d20:	47 f8       	bld	r4, 7
     d22:	4f 92       	push	r4
     d24:	8b e9       	ldi	r24, 0x9B	; 155
     d26:	91 e0       	ldi	r25, 0x01	; 1
     d28:	9f 93       	push	r25
     d2a:	8f 93       	push	r24
     d2c:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
				snprintf(Dstr, 128, "ID:%d of %d", user_number+1, number_of_users);
     d30:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <number_of_users>
     d34:	1f 92       	push	r1
     d36:	8f 93       	push	r24
     d38:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <user_number>
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	01 96       	adiw	r24, 0x01	; 1
     d40:	9f 93       	push	r25
     d42:	8f 93       	push	r24
     d44:	df 92       	push	r13
     d46:	cf 92       	push	r12
     d48:	1f 92       	push	r1
     d4a:	4f 92       	push	r4
     d4c:	df 93       	push	r29
     d4e:	cf 93       	push	r28
     d50:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
				write_to_lcd();
     d54:	0e 94 66 01 	call	0x2cc	; 0x2cc <write_to_lcd>
				break;
     d58:	8d b7       	in	r24, 0x3d	; 61
     d5a:	9e b7       	in	r25, 0x3e	; 62
     d5c:	42 96       	adiw	r24, 0x12	; 18
     d5e:	0f b6       	in	r0, 0x3f	; 63
     d60:	f8 94       	cli
     d62:	9e bf       	out	0x3e, r25	; 62
     d64:	0f be       	out	0x3f, r0	; 63
     d66:	8d bf       	out	0x3d, r24	; 61
     d68:	4a c1       	rjmp	.+660    	; 0xffe <main+0x5d2>
			case RESULTS_MODE:

				if(is_button_pressed(BUTTON_LEFT)) {
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     d72:	88 23       	and	r24, r24
     d74:	61 f0       	breq	.+24     	; 0xd8e <main+0x362>
					if(result_pointer == 0){
     d76:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <result_pointer>
     d7a:	81 11       	cpse	r24, r1
     d7c:	03 c0       	rjmp	.+6      	; 0xd84 <main+0x358>
						result_pointer = 4;
     d7e:	50 92 3e 01 	sts	0x013E, r5	; 0x80013e <result_pointer>
     d82:	03 c0       	rjmp	.+6      	; 0xd8a <main+0x35e>
						} else {
						result_pointer--;
     d84:	81 50       	subi	r24, 0x01	; 1
     d86:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <result_pointer>
					}
					get_user_result();
     d8a:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <get_user_result>
				}
				
				if(is_button_pressed(BUTTON_RIGHT)) {
     d8e:	83 e0       	ldi	r24, 0x03	; 3
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     d96:	88 23       	and	r24, r24
     d98:	61 f0       	breq	.+24     	; 0xdb2 <main+0x386>
					if(result_pointer >= 4){
     d9a:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <result_pointer>
     d9e:	84 30       	cpi	r24, 0x04	; 4
     da0:	18 f0       	brcs	.+6      	; 0xda8 <main+0x37c>
						result_pointer = 0;
     da2:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <result_pointer>
     da6:	03 c0       	rjmp	.+6      	; 0xdae <main+0x382>
						} else {
						result_pointer++;
     da8:	8f 5f       	subi	r24, 0xFF	; 255
     daa:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <result_pointer>
					}
					get_user_result();
     dae:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <get_user_result>
				}
				
				if(result_pointer < 3) {
     db2:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <result_pointer>
     db6:	83 30       	cpi	r24, 0x03	; 3
     db8:	30 f5       	brcc	.+76     	; 0xe06 <main+0x3da>
					snprintf(Ustr, 128, "User:%s  %d.", ime, result_pointer+1);
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	01 96       	adiw	r24, 0x01	; 1
     dbe:	9f 93       	push	r25
     dc0:	8f 93       	push	r24
     dc2:	1f 93       	push	r17
     dc4:	0f 93       	push	r16
     dc6:	ed ee       	ldi	r30, 0xED	; 237
     dc8:	f0 e0       	ldi	r31, 0x00	; 0
     dca:	ff 93       	push	r31
     dcc:	ef 93       	push	r30
     dce:	1f 92       	push	r1
     dd0:	80 e8       	ldi	r24, 0x80	; 128
     dd2:	8f 93       	push	r24
     dd4:	8b e9       	ldi	r24, 0x9B	; 155
     dd6:	91 e0       	ldi	r25, 0x01	; 1
     dd8:	9f 93       	push	r25
     dda:	8f 93       	push	r24
     ddc:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
					writeADC(result);
     de0:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <result>
     de4:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <result+0x1>
     de8:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <result+0x2>
     dec:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <result+0x3>
     df0:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <writeADC>
     df4:	8d b7       	in	r24, 0x3d	; 61
     df6:	9e b7       	in	r25, 0x3e	; 62
     df8:	0a 96       	adiw	r24, 0x0a	; 10
     dfa:	0f b6       	in	r0, 0x3f	; 63
     dfc:	f8 94       	cli
     dfe:	9e bf       	out	0x3e, r25	; 62
     e00:	0f be       	out	0x3f, r0	; 63
     e02:	8d bf       	out	0x3d, r24	; 61
     e04:	41 c0       	rjmp	.+130    	; 0xe88 <main+0x45c>
				} else if(result_pointer == 3) {
     e06:	83 30       	cpi	r24, 0x03	; 3
     e08:	11 f5       	brne	.+68     	; 0xe4e <main+0x422>
					snprintf(Ustr, 128, "User:%s  MAX:", ime);
     e0a:	1f 93       	push	r17
     e0c:	0f 93       	push	r16
     e0e:	ea ef       	ldi	r30, 0xFA	; 250
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	ff 93       	push	r31
     e14:	ef 93       	push	r30
     e16:	1f 92       	push	r1
     e18:	80 e8       	ldi	r24, 0x80	; 128
     e1a:	8f 93       	push	r24
     e1c:	8b e9       	ldi	r24, 0x9B	; 155
     e1e:	91 e0       	ldi	r25, 0x01	; 1
     e20:	9f 93       	push	r25
     e22:	8f 93       	push	r24
     e24:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
					writeADC(result);
     e28:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <result>
     e2c:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <result+0x1>
     e30:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <result+0x2>
     e34:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <result+0x3>
     e38:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <writeADC>
     e3c:	8d b7       	in	r24, 0x3d	; 61
     e3e:	9e b7       	in	r25, 0x3e	; 62
     e40:	08 96       	adiw	r24, 0x08	; 8
     e42:	0f b6       	in	r0, 0x3f	; 63
     e44:	f8 94       	cli
     e46:	9e bf       	out	0x3e, r25	; 62
     e48:	0f be       	out	0x3f, r0	; 63
     e4a:	8d bf       	out	0x3d, r24	; 61
     e4c:	1d c0       	rjmp	.+58     	; 0xe88 <main+0x45c>
				} else if(result_pointer == 4) {
     e4e:	84 30       	cpi	r24, 0x04	; 4
     e50:	d9 f4       	brne	.+54     	; 0xe88 <main+0x45c>
					snprintf(Ustr, 128, "User:%s  AVG:", ime);
     e52:	1f 93       	push	r17
     e54:	0f 93       	push	r16
     e56:	e8 e0       	ldi	r30, 0x08	; 8
     e58:	f1 e0       	ldi	r31, 0x01	; 1
     e5a:	ff 93       	push	r31
     e5c:	ef 93       	push	r30
     e5e:	1f 92       	push	r1
     e60:	80 e8       	ldi	r24, 0x80	; 128
     e62:	8f 93       	push	r24
     e64:	8b e9       	ldi	r24, 0x9B	; 155
     e66:	91 e0       	ldi	r25, 0x01	; 1
     e68:	9f 93       	push	r25
     e6a:	8f 93       	push	r24
     e6c:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
					writeADC(average_result());					
     e70:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <average_result>
     e74:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <writeADC>
     e78:	8d b7       	in	r24, 0x3d	; 61
     e7a:	9e b7       	in	r25, 0x3e	; 62
     e7c:	08 96       	adiw	r24, 0x08	; 8
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	f8 94       	cli
     e82:	9e bf       	out	0x3e, r25	; 62
     e84:	0f be       	out	0x3f, r0	; 63
     e86:	8d bf       	out	0x3d, r24	; 61
				}
				write_to_lcd();
     e88:	0e 94 66 01 	call	0x2cc	; 0x2cc <write_to_lcd>
				break;
     e8c:	b8 c0       	rjmp	.+368    	; 0xffe <main+0x5d2>
			case ADD_USER_MODE:
				add_new_user_update_screen();
     e8e:	0e 94 b7 04 	call	0x96e	; 0x96e <add_new_user_update_screen>
			
				if(is_button_pressed(BUTTON_LEFT)) {
     e92:	81 e0       	ldi	r24, 0x01	; 1
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     e9a:	88 23       	and	r24, r24
     e9c:	99 f0       	breq	.+38     	; 0xec4 <main+0x498>
					if(name_current_letter == 65){
     e9e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     ea2:	81 34       	cpi	r24, 0x41	; 65
     ea4:	21 f4       	brne	.+8      	; 0xeae <main+0x482>
						name_current_letter = 32;
     ea6:	80 e2       	ldi	r24, 0x20	; 32
     ea8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     eac:	09 c0       	rjmp	.+18     	; 0xec0 <main+0x494>
					} else if(name_current_letter == 32){
     eae:	80 32       	cpi	r24, 0x20	; 32
     eb0:	21 f4       	brne	.+8      	; 0xeba <main+0x48e>
						name_current_letter = 90;
     eb2:	8a e5       	ldi	r24, 0x5A	; 90
     eb4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     eb8:	03 c0       	rjmp	.+6      	; 0xec0 <main+0x494>
					} else {
						name_current_letter--;
     eba:	81 50       	subi	r24, 0x01	; 1
     ebc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				}
				add_new_user_update_screen();
     ec0:	0e 94 b7 04 	call	0x96e	; 0x96e <add_new_user_update_screen>
				}
				
				if(is_button_pressed(BUTTON_RIGHT)) {
     ec4:	83 e0       	ldi	r24, 0x03	; 3
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     ecc:	88 23       	and	r24, r24
     ece:	99 f0       	breq	.+38     	; 0xef6 <main+0x4ca>
					if(name_current_letter >= 90){
     ed0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     ed4:	8a 35       	cpi	r24, 0x5A	; 90
     ed6:	20 f0       	brcs	.+8      	; 0xee0 <main+0x4b4>
						name_current_letter = 32;
     ed8:	80 e2       	ldi	r24, 0x20	; 32
     eda:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     ede:	09 c0       	rjmp	.+18     	; 0xef2 <main+0x4c6>
					} else if(name_current_letter == 32){
     ee0:	80 32       	cpi	r24, 0x20	; 32
     ee2:	21 f4       	brne	.+8      	; 0xeec <main+0x4c0>
						name_current_letter = 65;
     ee4:	91 e4       	ldi	r25, 0x41	; 65
     ee6:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__DATA_REGION_ORIGIN__>
     eea:	03 c0       	rjmp	.+6      	; 0xef2 <main+0x4c6>
					} else {
						name_current_letter++;
     eec:	8f 5f       	subi	r24, 0xFF	; 255
     eee:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
					}
					add_new_user_update_screen();
     ef2:	0e 94 b7 04 	call	0x96e	; 0x96e <add_new_user_update_screen>
				}
				
				if(is_button_pressed(BUTTON_CONFIRM)) {
     ef6:	82 e0       	ldi	r24, 0x02	; 2
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     efe:	88 23       	and	r24, r24
     f00:	09 f4       	brne	.+2      	; 0xf04 <main+0x4d8>
     f02:	7d c0       	rjmp	.+250    	; 0xffe <main+0x5d2>
					if(name_current_letter == 32){
     f04:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     f08:	80 32       	cpi	r24, 0x20	; 32
     f0a:	59 f4       	brne	.+22     	; 0xf22 <main+0x4f6>
						// save ime to eeprom as new user
						add_new_user();
     f0c:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <add_new_user>
						mode = ALCOTEST_MODE;
     f10:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <mode>
						menu_active = 1;
     f14:	81 e0       	ldi	r24, 0x01	; 1
     f16:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <menu_active>
						lcd_command(LCD_DISP_ON);
     f1a:	8c e0       	ldi	r24, 0x0C	; 12
     f1c:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_command>
     f20:	1d c0       	rjmp	.+58     	; 0xf5c <main+0x530>
					} else {
						snprintf(ime, USER_NAME_SIZE, "%s%c\0", ime, name_current_letter);
     f22:	1f 92       	push	r1
     f24:	8f 93       	push	r24
     f26:	1f 93       	push	r17
     f28:	0f 93       	push	r16
     f2a:	3f 92       	push	r3
     f2c:	2f 92       	push	r2
     f2e:	1f 92       	push	r1
     f30:	86 e0       	ldi	r24, 0x06	; 6
     f32:	8f 93       	push	r24
     f34:	1f 93       	push	r17
     f36:	0f 93       	push	r16
     f38:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <snprintf>
						name_current_letter = 32;
     f3c:	80 e2       	ldi	r24, 0x20	; 32
     f3e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
						choose_name_pointer++;
     f42:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <choose_name_pointer>
     f46:	8f 5f       	subi	r24, 0xFF	; 255
     f48:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <choose_name_pointer>
     f4c:	ed b7       	in	r30, 0x3d	; 61
     f4e:	fe b7       	in	r31, 0x3e	; 62
     f50:	3a 96       	adiw	r30, 0x0a	; 10
     f52:	0f b6       	in	r0, 0x3f	; 63
     f54:	f8 94       	cli
     f56:	fe bf       	out	0x3e, r31	; 62
     f58:	0f be       	out	0x3f, r0	; 63
     f5a:	ed bf       	out	0x3d, r30	; 61
					}
					add_new_user_update_screen();
     f5c:	0e 94 b7 04 	call	0x96e	; 0x96e <add_new_user_update_screen>
     f60:	4e c0       	rjmp	.+156    	; 0xffe <main+0x5d2>
				}
				break;
			case CLEAR_DATABASE_MODE:
				snprintf(Ustr, 128, "Clear db?");
     f62:	8a e0       	ldi	r24, 0x0A	; 10
     f64:	e6 e1       	ldi	r30, 0x16	; 22
     f66:	f1 e0       	ldi	r31, 0x01	; 1
     f68:	ab e9       	ldi	r26, 0x9B	; 155
     f6a:	b1 e0       	ldi	r27, 0x01	; 1
     f6c:	01 90       	ld	r0, Z+
     f6e:	0d 92       	st	X+, r0
     f70:	8a 95       	dec	r24
     f72:	e1 f7       	brne	.-8      	; 0xf6c <main+0x540>
				if(is_button_pressed(BUTTON_LEFT) || is_button_pressed(BUTTON_RIGHT)) {
     f74:	81 e0       	ldi	r24, 0x01	; 1
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     f7c:	81 11       	cpse	r24, r1
     f7e:	06 c0       	rjmp	.+12     	; 0xf8c <main+0x560>
     f80:	83 e0       	ldi	r24, 0x03	; 3
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     f88:	88 23       	and	r24, r24
     f8a:	59 f0       	breq	.+22     	; 0xfa2 <main+0x576>
					if(!yes_no_button){
     f8c:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <yes_no_button>
     f90:	81 11       	cpse	r24, r1
     f92:	04 c0       	rjmp	.+8      	; 0xf9c <main+0x570>
						yes_no_button = 1;
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <yes_no_button>
     f9a:	0b c0       	rjmp	.+22     	; 0xfb2 <main+0x586>
					} else {
						yes_no_button = 0;
     f9c:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <yes_no_button>
     fa0:	04 c0       	rjmp	.+8      	; 0xfaa <main+0x57e>
					}
				}
				
				if(!yes_no_button){
     fa2:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <yes_no_button>
     fa6:	81 11       	cpse	r24, r1
     fa8:	04 c0       	rjmp	.+8      	; 0xfb2 <main+0x586>
					snprintf(Dstr, 128, "No");
     faa:	79 82       	std	Y+1, r7	; 0x01
     fac:	68 82       	st	Y, r6
     fae:	1a 82       	std	Y+2, r1	; 0x02
     fb0:	24 c0       	rjmp	.+72     	; 0xffa <main+0x5ce>
				} else {
					snprintf(Dstr, 128, "Yes");
     fb2:	99 82       	std	Y+1, r9	; 0x01
     fb4:	88 82       	st	Y, r8
     fb6:	bb 82       	std	Y+3, r11	; 0x03
     fb8:	aa 82       	std	Y+2, r10	; 0x02
					if(is_button_pressed(BUTTON_CONFIRM)) {
     fba:	82 e0       	ldi	r24, 0x02	; 2
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	0e 94 e6 02 	call	0x5cc	; 0x5cc <is_button_pressed>
     fc2:	88 23       	and	r24, r24
     fc4:	d1 f0       	breq	.+52     	; 0xffa <main+0x5ce>
						snprintf(Ustr, 128, "Clearing db...");
     fc6:	8f e0       	ldi	r24, 0x0F	; 15
     fc8:	e0 e2       	ldi	r30, 0x20	; 32
     fca:	f1 e0       	ldi	r31, 0x01	; 1
     fcc:	ab e9       	ldi	r26, 0x9B	; 155
     fce:	b1 e0       	ldi	r27, 0x01	; 1
     fd0:	01 90       	ld	r0, Z+
     fd2:	0d 92       	st	X+, r0
     fd4:	8a 95       	dec	r24
     fd6:	e1 f7       	brne	.-8      	; 0xfd0 <main+0x5a4>
						snprintf(Dstr, 128, "Wait...");
     fd8:	88 e0       	ldi	r24, 0x08	; 8
     fda:	ef e2       	ldi	r30, 0x2F	; 47
     fdc:	f1 e0       	ldi	r31, 0x01	; 1
     fde:	de 01       	movw	r26, r28
     fe0:	01 90       	ld	r0, Z+
     fe2:	0d 92       	st	X+, r0
     fe4:	8a 95       	dec	r24
     fe6:	e1 f7       	brne	.-8      	; 0xfe0 <main+0x5b4>
						write_to_lcd();
     fe8:	0e 94 66 01 	call	0x2cc	; 0x2cc <write_to_lcd>
						delete_database();
     fec:	0e 94 9f 01 	call	0x33e	; 0x33e <delete_database>
						mode = ALCOTEST_MODE;
     ff0:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <mode>
						menu_active = 1;
     ff4:	81 e0       	ldi	r24, 0x01	; 1
     ff6:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <menu_active>
					}
				}
				write_to_lcd();
     ffa:	0e 94 66 01 	call	0x2cc	; 0x2cc <write_to_lcd>
     ffe:	ff ef       	ldi	r31, 0xFF	; 255
    1000:	2f e1       	ldi	r18, 0x1F	; 31
    1002:	31 e0       	ldi	r19, 0x01	; 1
    1004:	f1 50       	subi	r31, 0x01	; 1
    1006:	20 40       	sbci	r18, 0x00	; 0
    1008:	30 40       	sbci	r19, 0x00	; 0
    100a:	e1 f7       	brne	.-8      	; 0x1004 <main+0x5d8>
    100c:	00 c0       	rjmp	.+0      	; 0x100e <main+0x5e2>
    100e:	00 00       	nop
    1010:	3f cd       	rjmp	.-1410   	; 0xa90 <main+0x64>

00001012 <__subsf3>:
    1012:	50 58       	subi	r21, 0x80	; 128

00001014 <__addsf3>:
    1014:	bb 27       	eor	r27, r27
    1016:	aa 27       	eor	r26, r26
    1018:	0e 94 21 08 	call	0x1042	; 0x1042 <__addsf3x>
    101c:	0c 94 9b 09 	jmp	0x1336	; 0x1336 <__fp_round>
    1020:	0e 94 8d 09 	call	0x131a	; 0x131a <__fp_pscA>
    1024:	38 f0       	brcs	.+14     	; 0x1034 <__addsf3+0x20>
    1026:	0e 94 94 09 	call	0x1328	; 0x1328 <__fp_pscB>
    102a:	20 f0       	brcs	.+8      	; 0x1034 <__addsf3+0x20>
    102c:	39 f4       	brne	.+14     	; 0x103c <__addsf3+0x28>
    102e:	9f 3f       	cpi	r25, 0xFF	; 255
    1030:	19 f4       	brne	.+6      	; 0x1038 <__addsf3+0x24>
    1032:	26 f4       	brtc	.+8      	; 0x103c <__addsf3+0x28>
    1034:	0c 94 8a 09 	jmp	0x1314	; 0x1314 <__fp_nan>
    1038:	0e f4       	brtc	.+2      	; 0x103c <__addsf3+0x28>
    103a:	e0 95       	com	r30
    103c:	e7 fb       	bst	r30, 7
    103e:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_inf>

00001042 <__addsf3x>:
    1042:	e9 2f       	mov	r30, r25
    1044:	0e 94 ac 09 	call	0x1358	; 0x1358 <__fp_split3>
    1048:	58 f3       	brcs	.-42     	; 0x1020 <__addsf3+0xc>
    104a:	ba 17       	cp	r27, r26
    104c:	62 07       	cpc	r22, r18
    104e:	73 07       	cpc	r23, r19
    1050:	84 07       	cpc	r24, r20
    1052:	95 07       	cpc	r25, r21
    1054:	20 f0       	brcs	.+8      	; 0x105e <__addsf3x+0x1c>
    1056:	79 f4       	brne	.+30     	; 0x1076 <__addsf3x+0x34>
    1058:	a6 f5       	brtc	.+104    	; 0x10c2 <__addsf3x+0x80>
    105a:	0c 94 ce 09 	jmp	0x139c	; 0x139c <__fp_zero>
    105e:	0e f4       	brtc	.+2      	; 0x1062 <__addsf3x+0x20>
    1060:	e0 95       	com	r30
    1062:	0b 2e       	mov	r0, r27
    1064:	ba 2f       	mov	r27, r26
    1066:	a0 2d       	mov	r26, r0
    1068:	0b 01       	movw	r0, r22
    106a:	b9 01       	movw	r22, r18
    106c:	90 01       	movw	r18, r0
    106e:	0c 01       	movw	r0, r24
    1070:	ca 01       	movw	r24, r20
    1072:	a0 01       	movw	r20, r0
    1074:	11 24       	eor	r1, r1
    1076:	ff 27       	eor	r31, r31
    1078:	59 1b       	sub	r21, r25
    107a:	99 f0       	breq	.+38     	; 0x10a2 <__addsf3x+0x60>
    107c:	59 3f       	cpi	r21, 0xF9	; 249
    107e:	50 f4       	brcc	.+20     	; 0x1094 <__addsf3x+0x52>
    1080:	50 3e       	cpi	r21, 0xE0	; 224
    1082:	68 f1       	brcs	.+90     	; 0x10de <__addsf3x+0x9c>
    1084:	1a 16       	cp	r1, r26
    1086:	f0 40       	sbci	r31, 0x00	; 0
    1088:	a2 2f       	mov	r26, r18
    108a:	23 2f       	mov	r18, r19
    108c:	34 2f       	mov	r19, r20
    108e:	44 27       	eor	r20, r20
    1090:	58 5f       	subi	r21, 0xF8	; 248
    1092:	f3 cf       	rjmp	.-26     	; 0x107a <__addsf3x+0x38>
    1094:	46 95       	lsr	r20
    1096:	37 95       	ror	r19
    1098:	27 95       	ror	r18
    109a:	a7 95       	ror	r26
    109c:	f0 40       	sbci	r31, 0x00	; 0
    109e:	53 95       	inc	r21
    10a0:	c9 f7       	brne	.-14     	; 0x1094 <__addsf3x+0x52>
    10a2:	7e f4       	brtc	.+30     	; 0x10c2 <__addsf3x+0x80>
    10a4:	1f 16       	cp	r1, r31
    10a6:	ba 0b       	sbc	r27, r26
    10a8:	62 0b       	sbc	r22, r18
    10aa:	73 0b       	sbc	r23, r19
    10ac:	84 0b       	sbc	r24, r20
    10ae:	ba f0       	brmi	.+46     	; 0x10de <__addsf3x+0x9c>
    10b0:	91 50       	subi	r25, 0x01	; 1
    10b2:	a1 f0       	breq	.+40     	; 0x10dc <__addsf3x+0x9a>
    10b4:	ff 0f       	add	r31, r31
    10b6:	bb 1f       	adc	r27, r27
    10b8:	66 1f       	adc	r22, r22
    10ba:	77 1f       	adc	r23, r23
    10bc:	88 1f       	adc	r24, r24
    10be:	c2 f7       	brpl	.-16     	; 0x10b0 <__addsf3x+0x6e>
    10c0:	0e c0       	rjmp	.+28     	; 0x10de <__addsf3x+0x9c>
    10c2:	ba 0f       	add	r27, r26
    10c4:	62 1f       	adc	r22, r18
    10c6:	73 1f       	adc	r23, r19
    10c8:	84 1f       	adc	r24, r20
    10ca:	48 f4       	brcc	.+18     	; 0x10de <__addsf3x+0x9c>
    10cc:	87 95       	ror	r24
    10ce:	77 95       	ror	r23
    10d0:	67 95       	ror	r22
    10d2:	b7 95       	ror	r27
    10d4:	f7 95       	ror	r31
    10d6:	9e 3f       	cpi	r25, 0xFE	; 254
    10d8:	08 f0       	brcs	.+2      	; 0x10dc <__addsf3x+0x9a>
    10da:	b0 cf       	rjmp	.-160    	; 0x103c <__addsf3+0x28>
    10dc:	93 95       	inc	r25
    10de:	88 0f       	add	r24, r24
    10e0:	08 f0       	brcs	.+2      	; 0x10e4 <__addsf3x+0xa2>
    10e2:	99 27       	eor	r25, r25
    10e4:	ee 0f       	add	r30, r30
    10e6:	97 95       	ror	r25
    10e8:	87 95       	ror	r24
    10ea:	08 95       	ret

000010ec <__cmpsf2>:
    10ec:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__fp_cmp>
    10f0:	08 f4       	brcc	.+2      	; 0x10f4 <__cmpsf2+0x8>
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	08 95       	ret

000010f6 <__divsf3>:
    10f6:	0e 94 8f 08 	call	0x111e	; 0x111e <__divsf3x>
    10fa:	0c 94 9b 09 	jmp	0x1336	; 0x1336 <__fp_round>
    10fe:	0e 94 94 09 	call	0x1328	; 0x1328 <__fp_pscB>
    1102:	58 f0       	brcs	.+22     	; 0x111a <__divsf3+0x24>
    1104:	0e 94 8d 09 	call	0x131a	; 0x131a <__fp_pscA>
    1108:	40 f0       	brcs	.+16     	; 0x111a <__divsf3+0x24>
    110a:	29 f4       	brne	.+10     	; 0x1116 <__divsf3+0x20>
    110c:	5f 3f       	cpi	r21, 0xFF	; 255
    110e:	29 f0       	breq	.+10     	; 0x111a <__divsf3+0x24>
    1110:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_inf>
    1114:	51 11       	cpse	r21, r1
    1116:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__fp_szero>
    111a:	0c 94 8a 09 	jmp	0x1314	; 0x1314 <__fp_nan>

0000111e <__divsf3x>:
    111e:	0e 94 ac 09 	call	0x1358	; 0x1358 <__fp_split3>
    1122:	68 f3       	brcs	.-38     	; 0x10fe <__divsf3+0x8>

00001124 <__divsf3_pse>:
    1124:	99 23       	and	r25, r25
    1126:	b1 f3       	breq	.-20     	; 0x1114 <__divsf3+0x1e>
    1128:	55 23       	and	r21, r21
    112a:	91 f3       	breq	.-28     	; 0x1110 <__divsf3+0x1a>
    112c:	95 1b       	sub	r25, r21
    112e:	55 0b       	sbc	r21, r21
    1130:	bb 27       	eor	r27, r27
    1132:	aa 27       	eor	r26, r26
    1134:	62 17       	cp	r22, r18
    1136:	73 07       	cpc	r23, r19
    1138:	84 07       	cpc	r24, r20
    113a:	38 f0       	brcs	.+14     	; 0x114a <__divsf3_pse+0x26>
    113c:	9f 5f       	subi	r25, 0xFF	; 255
    113e:	5f 4f       	sbci	r21, 0xFF	; 255
    1140:	22 0f       	add	r18, r18
    1142:	33 1f       	adc	r19, r19
    1144:	44 1f       	adc	r20, r20
    1146:	aa 1f       	adc	r26, r26
    1148:	a9 f3       	breq	.-22     	; 0x1134 <__divsf3_pse+0x10>
    114a:	35 d0       	rcall	.+106    	; 0x11b6 <__divsf3_pse+0x92>
    114c:	0e 2e       	mov	r0, r30
    114e:	3a f0       	brmi	.+14     	; 0x115e <__divsf3_pse+0x3a>
    1150:	e0 e8       	ldi	r30, 0x80	; 128
    1152:	32 d0       	rcall	.+100    	; 0x11b8 <__divsf3_pse+0x94>
    1154:	91 50       	subi	r25, 0x01	; 1
    1156:	50 40       	sbci	r21, 0x00	; 0
    1158:	e6 95       	lsr	r30
    115a:	00 1c       	adc	r0, r0
    115c:	ca f7       	brpl	.-14     	; 0x1150 <__divsf3_pse+0x2c>
    115e:	2b d0       	rcall	.+86     	; 0x11b6 <__divsf3_pse+0x92>
    1160:	fe 2f       	mov	r31, r30
    1162:	29 d0       	rcall	.+82     	; 0x11b6 <__divsf3_pse+0x92>
    1164:	66 0f       	add	r22, r22
    1166:	77 1f       	adc	r23, r23
    1168:	88 1f       	adc	r24, r24
    116a:	bb 1f       	adc	r27, r27
    116c:	26 17       	cp	r18, r22
    116e:	37 07       	cpc	r19, r23
    1170:	48 07       	cpc	r20, r24
    1172:	ab 07       	cpc	r26, r27
    1174:	b0 e8       	ldi	r27, 0x80	; 128
    1176:	09 f0       	breq	.+2      	; 0x117a <__divsf3_pse+0x56>
    1178:	bb 0b       	sbc	r27, r27
    117a:	80 2d       	mov	r24, r0
    117c:	bf 01       	movw	r22, r30
    117e:	ff 27       	eor	r31, r31
    1180:	93 58       	subi	r25, 0x83	; 131
    1182:	5f 4f       	sbci	r21, 0xFF	; 255
    1184:	3a f0       	brmi	.+14     	; 0x1194 <__divsf3_pse+0x70>
    1186:	9e 3f       	cpi	r25, 0xFE	; 254
    1188:	51 05       	cpc	r21, r1
    118a:	78 f0       	brcs	.+30     	; 0x11aa <__divsf3_pse+0x86>
    118c:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_inf>
    1190:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__fp_szero>
    1194:	5f 3f       	cpi	r21, 0xFF	; 255
    1196:	e4 f3       	brlt	.-8      	; 0x1190 <__divsf3_pse+0x6c>
    1198:	98 3e       	cpi	r25, 0xE8	; 232
    119a:	d4 f3       	brlt	.-12     	; 0x1190 <__divsf3_pse+0x6c>
    119c:	86 95       	lsr	r24
    119e:	77 95       	ror	r23
    11a0:	67 95       	ror	r22
    11a2:	b7 95       	ror	r27
    11a4:	f7 95       	ror	r31
    11a6:	9f 5f       	subi	r25, 0xFF	; 255
    11a8:	c9 f7       	brne	.-14     	; 0x119c <__divsf3_pse+0x78>
    11aa:	88 0f       	add	r24, r24
    11ac:	91 1d       	adc	r25, r1
    11ae:	96 95       	lsr	r25
    11b0:	87 95       	ror	r24
    11b2:	97 f9       	bld	r25, 7
    11b4:	08 95       	ret
    11b6:	e1 e0       	ldi	r30, 0x01	; 1
    11b8:	66 0f       	add	r22, r22
    11ba:	77 1f       	adc	r23, r23
    11bc:	88 1f       	adc	r24, r24
    11be:	bb 1f       	adc	r27, r27
    11c0:	62 17       	cp	r22, r18
    11c2:	73 07       	cpc	r23, r19
    11c4:	84 07       	cpc	r24, r20
    11c6:	ba 07       	cpc	r27, r26
    11c8:	20 f0       	brcs	.+8      	; 0x11d2 <__divsf3_pse+0xae>
    11ca:	62 1b       	sub	r22, r18
    11cc:	73 0b       	sbc	r23, r19
    11ce:	84 0b       	sbc	r24, r20
    11d0:	ba 0b       	sbc	r27, r26
    11d2:	ee 1f       	adc	r30, r30
    11d4:	88 f7       	brcc	.-30     	; 0x11b8 <__divsf3_pse+0x94>
    11d6:	e0 95       	com	r30
    11d8:	08 95       	ret

000011da <__fixsfsi>:
    11da:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <__fixunssfsi>
    11de:	68 94       	set
    11e0:	b1 11       	cpse	r27, r1
    11e2:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__fp_szero>
    11e6:	08 95       	ret

000011e8 <__fixunssfsi>:
    11e8:	0e 94 b4 09 	call	0x1368	; 0x1368 <__fp_splitA>
    11ec:	88 f0       	brcs	.+34     	; 0x1210 <__fixunssfsi+0x28>
    11ee:	9f 57       	subi	r25, 0x7F	; 127
    11f0:	98 f0       	brcs	.+38     	; 0x1218 <__fixunssfsi+0x30>
    11f2:	b9 2f       	mov	r27, r25
    11f4:	99 27       	eor	r25, r25
    11f6:	b7 51       	subi	r27, 0x17	; 23
    11f8:	b0 f0       	brcs	.+44     	; 0x1226 <__fixunssfsi+0x3e>
    11fa:	e1 f0       	breq	.+56     	; 0x1234 <__fixunssfsi+0x4c>
    11fc:	66 0f       	add	r22, r22
    11fe:	77 1f       	adc	r23, r23
    1200:	88 1f       	adc	r24, r24
    1202:	99 1f       	adc	r25, r25
    1204:	1a f0       	brmi	.+6      	; 0x120c <__fixunssfsi+0x24>
    1206:	ba 95       	dec	r27
    1208:	c9 f7       	brne	.-14     	; 0x11fc <__fixunssfsi+0x14>
    120a:	14 c0       	rjmp	.+40     	; 0x1234 <__fixunssfsi+0x4c>
    120c:	b1 30       	cpi	r27, 0x01	; 1
    120e:	91 f0       	breq	.+36     	; 0x1234 <__fixunssfsi+0x4c>
    1210:	0e 94 ce 09 	call	0x139c	; 0x139c <__fp_zero>
    1214:	b1 e0       	ldi	r27, 0x01	; 1
    1216:	08 95       	ret
    1218:	0c 94 ce 09 	jmp	0x139c	; 0x139c <__fp_zero>
    121c:	67 2f       	mov	r22, r23
    121e:	78 2f       	mov	r23, r24
    1220:	88 27       	eor	r24, r24
    1222:	b8 5f       	subi	r27, 0xF8	; 248
    1224:	39 f0       	breq	.+14     	; 0x1234 <__fixunssfsi+0x4c>
    1226:	b9 3f       	cpi	r27, 0xF9	; 249
    1228:	cc f3       	brlt	.-14     	; 0x121c <__fixunssfsi+0x34>
    122a:	86 95       	lsr	r24
    122c:	77 95       	ror	r23
    122e:	67 95       	ror	r22
    1230:	b3 95       	inc	r27
    1232:	d9 f7       	brne	.-10     	; 0x122a <__fixunssfsi+0x42>
    1234:	3e f4       	brtc	.+14     	; 0x1244 <__fixunssfsi+0x5c>
    1236:	90 95       	com	r25
    1238:	80 95       	com	r24
    123a:	70 95       	com	r23
    123c:	61 95       	neg	r22
    123e:	7f 4f       	sbci	r23, 0xFF	; 255
    1240:	8f 4f       	sbci	r24, 0xFF	; 255
    1242:	9f 4f       	sbci	r25, 0xFF	; 255
    1244:	08 95       	ret

00001246 <__floatunsisf>:
    1246:	e8 94       	clt
    1248:	09 c0       	rjmp	.+18     	; 0x125c <__floatsisf+0x12>

0000124a <__floatsisf>:
    124a:	97 fb       	bst	r25, 7
    124c:	3e f4       	brtc	.+14     	; 0x125c <__floatsisf+0x12>
    124e:	90 95       	com	r25
    1250:	80 95       	com	r24
    1252:	70 95       	com	r23
    1254:	61 95       	neg	r22
    1256:	7f 4f       	sbci	r23, 0xFF	; 255
    1258:	8f 4f       	sbci	r24, 0xFF	; 255
    125a:	9f 4f       	sbci	r25, 0xFF	; 255
    125c:	99 23       	and	r25, r25
    125e:	a9 f0       	breq	.+42     	; 0x128a <__floatsisf+0x40>
    1260:	f9 2f       	mov	r31, r25
    1262:	96 e9       	ldi	r25, 0x96	; 150
    1264:	bb 27       	eor	r27, r27
    1266:	93 95       	inc	r25
    1268:	f6 95       	lsr	r31
    126a:	87 95       	ror	r24
    126c:	77 95       	ror	r23
    126e:	67 95       	ror	r22
    1270:	b7 95       	ror	r27
    1272:	f1 11       	cpse	r31, r1
    1274:	f8 cf       	rjmp	.-16     	; 0x1266 <__floatsisf+0x1c>
    1276:	fa f4       	brpl	.+62     	; 0x12b6 <__floatsisf+0x6c>
    1278:	bb 0f       	add	r27, r27
    127a:	11 f4       	brne	.+4      	; 0x1280 <__floatsisf+0x36>
    127c:	60 ff       	sbrs	r22, 0
    127e:	1b c0       	rjmp	.+54     	; 0x12b6 <__floatsisf+0x6c>
    1280:	6f 5f       	subi	r22, 0xFF	; 255
    1282:	7f 4f       	sbci	r23, 0xFF	; 255
    1284:	8f 4f       	sbci	r24, 0xFF	; 255
    1286:	9f 4f       	sbci	r25, 0xFF	; 255
    1288:	16 c0       	rjmp	.+44     	; 0x12b6 <__floatsisf+0x6c>
    128a:	88 23       	and	r24, r24
    128c:	11 f0       	breq	.+4      	; 0x1292 <__floatsisf+0x48>
    128e:	96 e9       	ldi	r25, 0x96	; 150
    1290:	11 c0       	rjmp	.+34     	; 0x12b4 <__floatsisf+0x6a>
    1292:	77 23       	and	r23, r23
    1294:	21 f0       	breq	.+8      	; 0x129e <__floatsisf+0x54>
    1296:	9e e8       	ldi	r25, 0x8E	; 142
    1298:	87 2f       	mov	r24, r23
    129a:	76 2f       	mov	r23, r22
    129c:	05 c0       	rjmp	.+10     	; 0x12a8 <__floatsisf+0x5e>
    129e:	66 23       	and	r22, r22
    12a0:	71 f0       	breq	.+28     	; 0x12be <__floatsisf+0x74>
    12a2:	96 e8       	ldi	r25, 0x86	; 134
    12a4:	86 2f       	mov	r24, r22
    12a6:	70 e0       	ldi	r23, 0x00	; 0
    12a8:	60 e0       	ldi	r22, 0x00	; 0
    12aa:	2a f0       	brmi	.+10     	; 0x12b6 <__floatsisf+0x6c>
    12ac:	9a 95       	dec	r25
    12ae:	66 0f       	add	r22, r22
    12b0:	77 1f       	adc	r23, r23
    12b2:	88 1f       	adc	r24, r24
    12b4:	da f7       	brpl	.-10     	; 0x12ac <__floatsisf+0x62>
    12b6:	88 0f       	add	r24, r24
    12b8:	96 95       	lsr	r25
    12ba:	87 95       	ror	r24
    12bc:	97 f9       	bld	r25, 7
    12be:	08 95       	ret

000012c0 <__fp_cmp>:
    12c0:	99 0f       	add	r25, r25
    12c2:	00 08       	sbc	r0, r0
    12c4:	55 0f       	add	r21, r21
    12c6:	aa 0b       	sbc	r26, r26
    12c8:	e0 e8       	ldi	r30, 0x80	; 128
    12ca:	fe ef       	ldi	r31, 0xFE	; 254
    12cc:	16 16       	cp	r1, r22
    12ce:	17 06       	cpc	r1, r23
    12d0:	e8 07       	cpc	r30, r24
    12d2:	f9 07       	cpc	r31, r25
    12d4:	c0 f0       	brcs	.+48     	; 0x1306 <__fp_cmp+0x46>
    12d6:	12 16       	cp	r1, r18
    12d8:	13 06       	cpc	r1, r19
    12da:	e4 07       	cpc	r30, r20
    12dc:	f5 07       	cpc	r31, r21
    12de:	98 f0       	brcs	.+38     	; 0x1306 <__fp_cmp+0x46>
    12e0:	62 1b       	sub	r22, r18
    12e2:	73 0b       	sbc	r23, r19
    12e4:	84 0b       	sbc	r24, r20
    12e6:	95 0b       	sbc	r25, r21
    12e8:	39 f4       	brne	.+14     	; 0x12f8 <__fp_cmp+0x38>
    12ea:	0a 26       	eor	r0, r26
    12ec:	61 f0       	breq	.+24     	; 0x1306 <__fp_cmp+0x46>
    12ee:	23 2b       	or	r18, r19
    12f0:	24 2b       	or	r18, r20
    12f2:	25 2b       	or	r18, r21
    12f4:	21 f4       	brne	.+8      	; 0x12fe <__fp_cmp+0x3e>
    12f6:	08 95       	ret
    12f8:	0a 26       	eor	r0, r26
    12fa:	09 f4       	brne	.+2      	; 0x12fe <__fp_cmp+0x3e>
    12fc:	a1 40       	sbci	r26, 0x01	; 1
    12fe:	a6 95       	lsr	r26
    1300:	8f ef       	ldi	r24, 0xFF	; 255
    1302:	81 1d       	adc	r24, r1
    1304:	81 1d       	adc	r24, r1
    1306:	08 95       	ret

00001308 <__fp_inf>:
    1308:	97 f9       	bld	r25, 7
    130a:	9f 67       	ori	r25, 0x7F	; 127
    130c:	80 e8       	ldi	r24, 0x80	; 128
    130e:	70 e0       	ldi	r23, 0x00	; 0
    1310:	60 e0       	ldi	r22, 0x00	; 0
    1312:	08 95       	ret

00001314 <__fp_nan>:
    1314:	9f ef       	ldi	r25, 0xFF	; 255
    1316:	80 ec       	ldi	r24, 0xC0	; 192
    1318:	08 95       	ret

0000131a <__fp_pscA>:
    131a:	00 24       	eor	r0, r0
    131c:	0a 94       	dec	r0
    131e:	16 16       	cp	r1, r22
    1320:	17 06       	cpc	r1, r23
    1322:	18 06       	cpc	r1, r24
    1324:	09 06       	cpc	r0, r25
    1326:	08 95       	ret

00001328 <__fp_pscB>:
    1328:	00 24       	eor	r0, r0
    132a:	0a 94       	dec	r0
    132c:	12 16       	cp	r1, r18
    132e:	13 06       	cpc	r1, r19
    1330:	14 06       	cpc	r1, r20
    1332:	05 06       	cpc	r0, r21
    1334:	08 95       	ret

00001336 <__fp_round>:
    1336:	09 2e       	mov	r0, r25
    1338:	03 94       	inc	r0
    133a:	00 0c       	add	r0, r0
    133c:	11 f4       	brne	.+4      	; 0x1342 <__fp_round+0xc>
    133e:	88 23       	and	r24, r24
    1340:	52 f0       	brmi	.+20     	; 0x1356 <__fp_round+0x20>
    1342:	bb 0f       	add	r27, r27
    1344:	40 f4       	brcc	.+16     	; 0x1356 <__fp_round+0x20>
    1346:	bf 2b       	or	r27, r31
    1348:	11 f4       	brne	.+4      	; 0x134e <__fp_round+0x18>
    134a:	60 ff       	sbrs	r22, 0
    134c:	04 c0       	rjmp	.+8      	; 0x1356 <__fp_round+0x20>
    134e:	6f 5f       	subi	r22, 0xFF	; 255
    1350:	7f 4f       	sbci	r23, 0xFF	; 255
    1352:	8f 4f       	sbci	r24, 0xFF	; 255
    1354:	9f 4f       	sbci	r25, 0xFF	; 255
    1356:	08 95       	ret

00001358 <__fp_split3>:
    1358:	57 fd       	sbrc	r21, 7
    135a:	90 58       	subi	r25, 0x80	; 128
    135c:	44 0f       	add	r20, r20
    135e:	55 1f       	adc	r21, r21
    1360:	59 f0       	breq	.+22     	; 0x1378 <__fp_splitA+0x10>
    1362:	5f 3f       	cpi	r21, 0xFF	; 255
    1364:	71 f0       	breq	.+28     	; 0x1382 <__fp_splitA+0x1a>
    1366:	47 95       	ror	r20

00001368 <__fp_splitA>:
    1368:	88 0f       	add	r24, r24
    136a:	97 fb       	bst	r25, 7
    136c:	99 1f       	adc	r25, r25
    136e:	61 f0       	breq	.+24     	; 0x1388 <__fp_splitA+0x20>
    1370:	9f 3f       	cpi	r25, 0xFF	; 255
    1372:	79 f0       	breq	.+30     	; 0x1392 <__fp_splitA+0x2a>
    1374:	87 95       	ror	r24
    1376:	08 95       	ret
    1378:	12 16       	cp	r1, r18
    137a:	13 06       	cpc	r1, r19
    137c:	14 06       	cpc	r1, r20
    137e:	55 1f       	adc	r21, r21
    1380:	f2 cf       	rjmp	.-28     	; 0x1366 <__fp_split3+0xe>
    1382:	46 95       	lsr	r20
    1384:	f1 df       	rcall	.-30     	; 0x1368 <__fp_splitA>
    1386:	08 c0       	rjmp	.+16     	; 0x1398 <__fp_splitA+0x30>
    1388:	16 16       	cp	r1, r22
    138a:	17 06       	cpc	r1, r23
    138c:	18 06       	cpc	r1, r24
    138e:	99 1f       	adc	r25, r25
    1390:	f1 cf       	rjmp	.-30     	; 0x1374 <__fp_splitA+0xc>
    1392:	86 95       	lsr	r24
    1394:	71 05       	cpc	r23, r1
    1396:	61 05       	cpc	r22, r1
    1398:	08 94       	sec
    139a:	08 95       	ret

0000139c <__fp_zero>:
    139c:	e8 94       	clt

0000139e <__fp_szero>:
    139e:	bb 27       	eor	r27, r27
    13a0:	66 27       	eor	r22, r22
    13a2:	77 27       	eor	r23, r23
    13a4:	cb 01       	movw	r24, r22
    13a6:	97 f9       	bld	r25, 7
    13a8:	08 95       	ret

000013aa <__mulsf3>:
    13aa:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3x>
    13ae:	0c 94 9b 09 	jmp	0x1336	; 0x1336 <__fp_round>
    13b2:	0e 94 8d 09 	call	0x131a	; 0x131a <__fp_pscA>
    13b6:	38 f0       	brcs	.+14     	; 0x13c6 <__mulsf3+0x1c>
    13b8:	0e 94 94 09 	call	0x1328	; 0x1328 <__fp_pscB>
    13bc:	20 f0       	brcs	.+8      	; 0x13c6 <__mulsf3+0x1c>
    13be:	95 23       	and	r25, r21
    13c0:	11 f0       	breq	.+4      	; 0x13c6 <__mulsf3+0x1c>
    13c2:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_inf>
    13c6:	0c 94 8a 09 	jmp	0x1314	; 0x1314 <__fp_nan>
    13ca:	11 24       	eor	r1, r1
    13cc:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__fp_szero>

000013d0 <__mulsf3x>:
    13d0:	0e 94 ac 09 	call	0x1358	; 0x1358 <__fp_split3>
    13d4:	70 f3       	brcs	.-36     	; 0x13b2 <__mulsf3+0x8>

000013d6 <__mulsf3_pse>:
    13d6:	95 9f       	mul	r25, r21
    13d8:	c1 f3       	breq	.-16     	; 0x13ca <__mulsf3+0x20>
    13da:	95 0f       	add	r25, r21
    13dc:	50 e0       	ldi	r21, 0x00	; 0
    13de:	55 1f       	adc	r21, r21
    13e0:	62 9f       	mul	r22, r18
    13e2:	f0 01       	movw	r30, r0
    13e4:	72 9f       	mul	r23, r18
    13e6:	bb 27       	eor	r27, r27
    13e8:	f0 0d       	add	r31, r0
    13ea:	b1 1d       	adc	r27, r1
    13ec:	63 9f       	mul	r22, r19
    13ee:	aa 27       	eor	r26, r26
    13f0:	f0 0d       	add	r31, r0
    13f2:	b1 1d       	adc	r27, r1
    13f4:	aa 1f       	adc	r26, r26
    13f6:	64 9f       	mul	r22, r20
    13f8:	66 27       	eor	r22, r22
    13fa:	b0 0d       	add	r27, r0
    13fc:	a1 1d       	adc	r26, r1
    13fe:	66 1f       	adc	r22, r22
    1400:	82 9f       	mul	r24, r18
    1402:	22 27       	eor	r18, r18
    1404:	b0 0d       	add	r27, r0
    1406:	a1 1d       	adc	r26, r1
    1408:	62 1f       	adc	r22, r18
    140a:	73 9f       	mul	r23, r19
    140c:	b0 0d       	add	r27, r0
    140e:	a1 1d       	adc	r26, r1
    1410:	62 1f       	adc	r22, r18
    1412:	83 9f       	mul	r24, r19
    1414:	a0 0d       	add	r26, r0
    1416:	61 1d       	adc	r22, r1
    1418:	22 1f       	adc	r18, r18
    141a:	74 9f       	mul	r23, r20
    141c:	33 27       	eor	r19, r19
    141e:	a0 0d       	add	r26, r0
    1420:	61 1d       	adc	r22, r1
    1422:	23 1f       	adc	r18, r19
    1424:	84 9f       	mul	r24, r20
    1426:	60 0d       	add	r22, r0
    1428:	21 1d       	adc	r18, r1
    142a:	82 2f       	mov	r24, r18
    142c:	76 2f       	mov	r23, r22
    142e:	6a 2f       	mov	r22, r26
    1430:	11 24       	eor	r1, r1
    1432:	9f 57       	subi	r25, 0x7F	; 127
    1434:	50 40       	sbci	r21, 0x00	; 0
    1436:	9a f0       	brmi	.+38     	; 0x145e <__mulsf3_pse+0x88>
    1438:	f1 f0       	breq	.+60     	; 0x1476 <__mulsf3_pse+0xa0>
    143a:	88 23       	and	r24, r24
    143c:	4a f0       	brmi	.+18     	; 0x1450 <__mulsf3_pse+0x7a>
    143e:	ee 0f       	add	r30, r30
    1440:	ff 1f       	adc	r31, r31
    1442:	bb 1f       	adc	r27, r27
    1444:	66 1f       	adc	r22, r22
    1446:	77 1f       	adc	r23, r23
    1448:	88 1f       	adc	r24, r24
    144a:	91 50       	subi	r25, 0x01	; 1
    144c:	50 40       	sbci	r21, 0x00	; 0
    144e:	a9 f7       	brne	.-22     	; 0x143a <__mulsf3_pse+0x64>
    1450:	9e 3f       	cpi	r25, 0xFE	; 254
    1452:	51 05       	cpc	r21, r1
    1454:	80 f0       	brcs	.+32     	; 0x1476 <__mulsf3_pse+0xa0>
    1456:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_inf>
    145a:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__fp_szero>
    145e:	5f 3f       	cpi	r21, 0xFF	; 255
    1460:	e4 f3       	brlt	.-8      	; 0x145a <__mulsf3_pse+0x84>
    1462:	98 3e       	cpi	r25, 0xE8	; 232
    1464:	d4 f3       	brlt	.-12     	; 0x145a <__mulsf3_pse+0x84>
    1466:	86 95       	lsr	r24
    1468:	77 95       	ror	r23
    146a:	67 95       	ror	r22
    146c:	b7 95       	ror	r27
    146e:	f7 95       	ror	r31
    1470:	e7 95       	ror	r30
    1472:	9f 5f       	subi	r25, 0xFF	; 255
    1474:	c1 f7       	brne	.-16     	; 0x1466 <__mulsf3_pse+0x90>
    1476:	fe 2b       	or	r31, r30
    1478:	88 0f       	add	r24, r24
    147a:	91 1d       	adc	r25, r1
    147c:	96 95       	lsr	r25
    147e:	87 95       	ror	r24
    1480:	97 f9       	bld	r25, 7
    1482:	08 95       	ret

00001484 <pow>:
    1484:	fa 01       	movw	r30, r20
    1486:	ee 0f       	add	r30, r30
    1488:	ff 1f       	adc	r31, r31
    148a:	30 96       	adiw	r30, 0x00	; 0
    148c:	21 05       	cpc	r18, r1
    148e:	31 05       	cpc	r19, r1
    1490:	a1 f1       	breq	.+104    	; 0x14fa <pow+0x76>
    1492:	61 15       	cp	r22, r1
    1494:	71 05       	cpc	r23, r1
    1496:	61 f4       	brne	.+24     	; 0x14b0 <pow+0x2c>
    1498:	80 38       	cpi	r24, 0x80	; 128
    149a:	bf e3       	ldi	r27, 0x3F	; 63
    149c:	9b 07       	cpc	r25, r27
    149e:	49 f1       	breq	.+82     	; 0x14f2 <pow+0x6e>
    14a0:	68 94       	set
    14a2:	90 38       	cpi	r25, 0x80	; 128
    14a4:	81 05       	cpc	r24, r1
    14a6:	61 f0       	breq	.+24     	; 0x14c0 <pow+0x3c>
    14a8:	80 38       	cpi	r24, 0x80	; 128
    14aa:	bf ef       	ldi	r27, 0xFF	; 255
    14ac:	9b 07       	cpc	r25, r27
    14ae:	41 f0       	breq	.+16     	; 0x14c0 <pow+0x3c>
    14b0:	99 23       	and	r25, r25
    14b2:	4a f5       	brpl	.+82     	; 0x1506 <pow+0x82>
    14b4:	ff 3f       	cpi	r31, 0xFF	; 255
    14b6:	e1 05       	cpc	r30, r1
    14b8:	31 05       	cpc	r19, r1
    14ba:	21 05       	cpc	r18, r1
    14bc:	19 f1       	breq	.+70     	; 0x1504 <pow+0x80>
    14be:	e8 94       	clt
    14c0:	08 94       	sec
    14c2:	e7 95       	ror	r30
    14c4:	d9 01       	movw	r26, r18
    14c6:	aa 23       	and	r26, r26
    14c8:	29 f4       	brne	.+10     	; 0x14d4 <pow+0x50>
    14ca:	ab 2f       	mov	r26, r27
    14cc:	be 2f       	mov	r27, r30
    14ce:	f8 5f       	subi	r31, 0xF8	; 248
    14d0:	d0 f3       	brcs	.-12     	; 0x14c6 <pow+0x42>
    14d2:	10 c0       	rjmp	.+32     	; 0x14f4 <pow+0x70>
    14d4:	ff 5f       	subi	r31, 0xFF	; 255
    14d6:	70 f4       	brcc	.+28     	; 0x14f4 <pow+0x70>
    14d8:	a6 95       	lsr	r26
    14da:	e0 f7       	brcc	.-8      	; 0x14d4 <pow+0x50>
    14dc:	f7 39       	cpi	r31, 0x97	; 151
    14de:	50 f0       	brcs	.+20     	; 0x14f4 <pow+0x70>
    14e0:	19 f0       	breq	.+6      	; 0x14e8 <pow+0x64>
    14e2:	ff 3a       	cpi	r31, 0xAF	; 175
    14e4:	38 f4       	brcc	.+14     	; 0x14f4 <pow+0x70>
    14e6:	9f 77       	andi	r25, 0x7F	; 127
    14e8:	9f 93       	push	r25
    14ea:	0d d0       	rcall	.+26     	; 0x1506 <pow+0x82>
    14ec:	0f 90       	pop	r0
    14ee:	07 fc       	sbrc	r0, 7
    14f0:	90 58       	subi	r25, 0x80	; 128
    14f2:	08 95       	ret
    14f4:	46 f0       	brts	.+16     	; 0x1506 <pow+0x82>
    14f6:	0c 94 8a 09 	jmp	0x1314	; 0x1314 <__fp_nan>
    14fa:	60 e0       	ldi	r22, 0x00	; 0
    14fc:	70 e0       	ldi	r23, 0x00	; 0
    14fe:	80 e8       	ldi	r24, 0x80	; 128
    1500:	9f e3       	ldi	r25, 0x3F	; 63
    1502:	08 95       	ret
    1504:	4f e7       	ldi	r20, 0x7F	; 127
    1506:	9f 77       	andi	r25, 0x7F	; 127
    1508:	5f 93       	push	r21
    150a:	4f 93       	push	r20
    150c:	3f 93       	push	r19
    150e:	2f 93       	push	r18
    1510:	0e 94 3d 0b 	call	0x167a	; 0x167a <log>
    1514:	2f 91       	pop	r18
    1516:	3f 91       	pop	r19
    1518:	4f 91       	pop	r20
    151a:	5f 91       	pop	r21
    151c:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__mulsf3>
    1520:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <exp>
    1524:	29 f4       	brne	.+10     	; 0x1530 <pow+0xac>
    1526:	16 f0       	brts	.+4      	; 0x152c <pow+0xa8>
    1528:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_inf>
    152c:	0c 94 ce 09 	jmp	0x139c	; 0x139c <__fp_zero>
    1530:	0c 94 8a 09 	jmp	0x1314	; 0x1314 <__fp_nan>

00001534 <exp>:
    1534:	0e 94 b4 09 	call	0x1368	; 0x1368 <__fp_splitA>
    1538:	a8 f3       	brcs	.-22     	; 0x1524 <pow+0xa0>
    153a:	96 38       	cpi	r25, 0x86	; 134
    153c:	a0 f7       	brcc	.-24     	; 0x1526 <pow+0xa2>
    153e:	07 f8       	bld	r0, 7
    1540:	0f 92       	push	r0
    1542:	e8 94       	clt
    1544:	2b e3       	ldi	r18, 0x3B	; 59
    1546:	3a ea       	ldi	r19, 0xAA	; 170
    1548:	48 eb       	ldi	r20, 0xB8	; 184
    154a:	5f e7       	ldi	r21, 0x7F	; 127
    154c:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__mulsf3_pse>
    1550:	0f 92       	push	r0
    1552:	0f 92       	push	r0
    1554:	0f 92       	push	r0
    1556:	4d b7       	in	r20, 0x3d	; 61
    1558:	5e b7       	in	r21, 0x3e	; 62
    155a:	0f 92       	push	r0
    155c:	0e 94 85 0b 	call	0x170a	; 0x170a <modf>
    1560:	e4 e5       	ldi	r30, 0x54	; 84
    1562:	f0 e0       	ldi	r31, 0x00	; 0
    1564:	0e 94 cc 0a 	call	0x1598	; 0x1598 <__fp_powser>
    1568:	4f 91       	pop	r20
    156a:	5f 91       	pop	r21
    156c:	ef 91       	pop	r30
    156e:	ff 91       	pop	r31
    1570:	e5 95       	asr	r30
    1572:	ee 1f       	adc	r30, r30
    1574:	ff 1f       	adc	r31, r31
    1576:	49 f0       	breq	.+18     	; 0x158a <exp+0x56>
    1578:	fe 57       	subi	r31, 0x7E	; 126
    157a:	e0 68       	ori	r30, 0x80	; 128
    157c:	44 27       	eor	r20, r20
    157e:	ee 0f       	add	r30, r30
    1580:	44 1f       	adc	r20, r20
    1582:	fa 95       	dec	r31
    1584:	e1 f7       	brne	.-8      	; 0x157e <exp+0x4a>
    1586:	41 95       	neg	r20
    1588:	55 0b       	sbc	r21, r21
    158a:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <ldexp>
    158e:	0f 90       	pop	r0
    1590:	07 fe       	sbrs	r0, 7
    1592:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <inverse>
    1596:	08 95       	ret

00001598 <__fp_powser>:
    1598:	df 93       	push	r29
    159a:	cf 93       	push	r28
    159c:	1f 93       	push	r17
    159e:	0f 93       	push	r16
    15a0:	ff 92       	push	r15
    15a2:	ef 92       	push	r14
    15a4:	df 92       	push	r13
    15a6:	7b 01       	movw	r14, r22
    15a8:	8c 01       	movw	r16, r24
    15aa:	68 94       	set
    15ac:	06 c0       	rjmp	.+12     	; 0x15ba <__fp_powser+0x22>
    15ae:	da 2e       	mov	r13, r26
    15b0:	ef 01       	movw	r28, r30
    15b2:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3x>
    15b6:	fe 01       	movw	r30, r28
    15b8:	e8 94       	clt
    15ba:	a5 91       	lpm	r26, Z+
    15bc:	25 91       	lpm	r18, Z+
    15be:	35 91       	lpm	r19, Z+
    15c0:	45 91       	lpm	r20, Z+
    15c2:	55 91       	lpm	r21, Z+
    15c4:	a6 f3       	brts	.-24     	; 0x15ae <__fp_powser+0x16>
    15c6:	ef 01       	movw	r28, r30
    15c8:	0e 94 21 08 	call	0x1042	; 0x1042 <__addsf3x>
    15cc:	fe 01       	movw	r30, r28
    15ce:	97 01       	movw	r18, r14
    15d0:	a8 01       	movw	r20, r16
    15d2:	da 94       	dec	r13
    15d4:	69 f7       	brne	.-38     	; 0x15b0 <__fp_powser+0x18>
    15d6:	df 90       	pop	r13
    15d8:	ef 90       	pop	r14
    15da:	ff 90       	pop	r15
    15dc:	0f 91       	pop	r16
    15de:	1f 91       	pop	r17
    15e0:	cf 91       	pop	r28
    15e2:	df 91       	pop	r29
    15e4:	08 95       	ret

000015e6 <inverse>:
    15e6:	9b 01       	movw	r18, r22
    15e8:	ac 01       	movw	r20, r24
    15ea:	60 e0       	ldi	r22, 0x00	; 0
    15ec:	70 e0       	ldi	r23, 0x00	; 0
    15ee:	80 e8       	ldi	r24, 0x80	; 128
    15f0:	9f e3       	ldi	r25, 0x3F	; 63
    15f2:	0c 94 7b 08 	jmp	0x10f6	; 0x10f6 <__divsf3>
    15f6:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_inf>
    15fa:	0c 94 b9 0b 	jmp	0x1772	; 0x1772 <__fp_mpack>

000015fe <ldexp>:
    15fe:	0e 94 b4 09 	call	0x1368	; 0x1368 <__fp_splitA>
    1602:	d8 f3       	brcs	.-10     	; 0x15fa <inverse+0x14>
    1604:	99 23       	and	r25, r25
    1606:	c9 f3       	breq	.-14     	; 0x15fa <inverse+0x14>
    1608:	94 0f       	add	r25, r20
    160a:	51 1d       	adc	r21, r1
    160c:	a3 f3       	brvs	.-24     	; 0x15f6 <inverse+0x10>
    160e:	91 50       	subi	r25, 0x01	; 1
    1610:	50 40       	sbci	r21, 0x00	; 0
    1612:	94 f0       	brlt	.+36     	; 0x1638 <ldexp+0x3a>
    1614:	59 f0       	breq	.+22     	; 0x162c <ldexp+0x2e>
    1616:	88 23       	and	r24, r24
    1618:	32 f0       	brmi	.+12     	; 0x1626 <ldexp+0x28>
    161a:	66 0f       	add	r22, r22
    161c:	77 1f       	adc	r23, r23
    161e:	88 1f       	adc	r24, r24
    1620:	91 50       	subi	r25, 0x01	; 1
    1622:	50 40       	sbci	r21, 0x00	; 0
    1624:	c1 f7       	brne	.-16     	; 0x1616 <ldexp+0x18>
    1626:	9e 3f       	cpi	r25, 0xFE	; 254
    1628:	51 05       	cpc	r21, r1
    162a:	2c f7       	brge	.-54     	; 0x15f6 <inverse+0x10>
    162c:	88 0f       	add	r24, r24
    162e:	91 1d       	adc	r25, r1
    1630:	96 95       	lsr	r25
    1632:	87 95       	ror	r24
    1634:	97 f9       	bld	r25, 7
    1636:	08 95       	ret
    1638:	5f 3f       	cpi	r21, 0xFF	; 255
    163a:	ac f0       	brlt	.+42     	; 0x1666 <ldexp+0x68>
    163c:	98 3e       	cpi	r25, 0xE8	; 232
    163e:	9c f0       	brlt	.+38     	; 0x1666 <ldexp+0x68>
    1640:	bb 27       	eor	r27, r27
    1642:	86 95       	lsr	r24
    1644:	77 95       	ror	r23
    1646:	67 95       	ror	r22
    1648:	b7 95       	ror	r27
    164a:	08 f4       	brcc	.+2      	; 0x164e <ldexp+0x50>
    164c:	b1 60       	ori	r27, 0x01	; 1
    164e:	93 95       	inc	r25
    1650:	c1 f7       	brne	.-16     	; 0x1642 <ldexp+0x44>
    1652:	bb 0f       	add	r27, r27
    1654:	58 f7       	brcc	.-42     	; 0x162c <ldexp+0x2e>
    1656:	11 f4       	brne	.+4      	; 0x165c <ldexp+0x5e>
    1658:	60 ff       	sbrs	r22, 0
    165a:	e8 cf       	rjmp	.-48     	; 0x162c <ldexp+0x2e>
    165c:	6f 5f       	subi	r22, 0xFF	; 255
    165e:	7f 4f       	sbci	r23, 0xFF	; 255
    1660:	8f 4f       	sbci	r24, 0xFF	; 255
    1662:	9f 4f       	sbci	r25, 0xFF	; 255
    1664:	e3 cf       	rjmp	.-58     	; 0x162c <ldexp+0x2e>
    1666:	0c 94 cf 09 	jmp	0x139e	; 0x139e <__fp_szero>
    166a:	16 f0       	brts	.+4      	; 0x1670 <ldexp+0x72>
    166c:	0c 94 b9 0b 	jmp	0x1772	; 0x1772 <__fp_mpack>
    1670:	0c 94 8a 09 	jmp	0x1314	; 0x1314 <__fp_nan>
    1674:	68 94       	set
    1676:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_inf>

0000167a <log>:
    167a:	0e 94 b4 09 	call	0x1368	; 0x1368 <__fp_splitA>
    167e:	a8 f3       	brcs	.-22     	; 0x166a <ldexp+0x6c>
    1680:	99 23       	and	r25, r25
    1682:	c1 f3       	breq	.-16     	; 0x1674 <ldexp+0x76>
    1684:	ae f3       	brts	.-22     	; 0x1670 <ldexp+0x72>
    1686:	df 93       	push	r29
    1688:	cf 93       	push	r28
    168a:	1f 93       	push	r17
    168c:	0f 93       	push	r16
    168e:	ff 92       	push	r15
    1690:	c9 2f       	mov	r28, r25
    1692:	dd 27       	eor	r29, r29
    1694:	88 23       	and	r24, r24
    1696:	2a f0       	brmi	.+10     	; 0x16a2 <log+0x28>
    1698:	21 97       	sbiw	r28, 0x01	; 1
    169a:	66 0f       	add	r22, r22
    169c:	77 1f       	adc	r23, r23
    169e:	88 1f       	adc	r24, r24
    16a0:	da f7       	brpl	.-10     	; 0x1698 <log+0x1e>
    16a2:	20 e0       	ldi	r18, 0x00	; 0
    16a4:	30 e0       	ldi	r19, 0x00	; 0
    16a6:	40 e8       	ldi	r20, 0x80	; 128
    16a8:	5f eb       	ldi	r21, 0xBF	; 191
    16aa:	9f e3       	ldi	r25, 0x3F	; 63
    16ac:	88 39       	cpi	r24, 0x98	; 152
    16ae:	20 f0       	brcs	.+8      	; 0x16b8 <log+0x3e>
    16b0:	80 3e       	cpi	r24, 0xE0	; 224
    16b2:	38 f0       	brcs	.+14     	; 0x16c2 <log+0x48>
    16b4:	21 96       	adiw	r28, 0x01	; 1
    16b6:	8f 77       	andi	r24, 0x7F	; 127
    16b8:	0e 94 0a 08 	call	0x1014	; 0x1014 <__addsf3>
    16bc:	ec e7       	ldi	r30, 0x7C	; 124
    16be:	f0 e0       	ldi	r31, 0x00	; 0
    16c0:	04 c0       	rjmp	.+8      	; 0x16ca <log+0x50>
    16c2:	0e 94 0a 08 	call	0x1014	; 0x1014 <__addsf3>
    16c6:	e9 ea       	ldi	r30, 0xA9	; 169
    16c8:	f0 e0       	ldi	r31, 0x00	; 0
    16ca:	0e 94 cc 0a 	call	0x1598	; 0x1598 <__fp_powser>
    16ce:	8b 01       	movw	r16, r22
    16d0:	be 01       	movw	r22, r28
    16d2:	ec 01       	movw	r28, r24
    16d4:	fb 2e       	mov	r15, r27
    16d6:	6f 57       	subi	r22, 0x7F	; 127
    16d8:	71 09       	sbc	r23, r1
    16da:	75 95       	asr	r23
    16dc:	77 1f       	adc	r23, r23
    16de:	88 0b       	sbc	r24, r24
    16e0:	99 0b       	sbc	r25, r25
    16e2:	0e 94 25 09 	call	0x124a	; 0x124a <__floatsisf>
    16e6:	28 e1       	ldi	r18, 0x18	; 24
    16e8:	32 e7       	ldi	r19, 0x72	; 114
    16ea:	41 e3       	ldi	r20, 0x31	; 49
    16ec:	5f e3       	ldi	r21, 0x3F	; 63
    16ee:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__mulsf3x>
    16f2:	af 2d       	mov	r26, r15
    16f4:	98 01       	movw	r18, r16
    16f6:	ae 01       	movw	r20, r28
    16f8:	ff 90       	pop	r15
    16fa:	0f 91       	pop	r16
    16fc:	1f 91       	pop	r17
    16fe:	cf 91       	pop	r28
    1700:	df 91       	pop	r29
    1702:	0e 94 21 08 	call	0x1042	; 0x1042 <__addsf3x>
    1706:	0c 94 9b 09 	jmp	0x1336	; 0x1336 <__fp_round>

0000170a <modf>:
    170a:	fa 01       	movw	r30, r20
    170c:	dc 01       	movw	r26, r24
    170e:	aa 0f       	add	r26, r26
    1710:	bb 1f       	adc	r27, r27
    1712:	9b 01       	movw	r18, r22
    1714:	ac 01       	movw	r20, r24
    1716:	bf 57       	subi	r27, 0x7F	; 127
    1718:	28 f4       	brcc	.+10     	; 0x1724 <modf+0x1a>
    171a:	22 27       	eor	r18, r18
    171c:	33 27       	eor	r19, r19
    171e:	44 27       	eor	r20, r20
    1720:	50 78       	andi	r21, 0x80	; 128
    1722:	20 c0       	rjmp	.+64     	; 0x1764 <modf+0x5a>
    1724:	b7 51       	subi	r27, 0x17	; 23
    1726:	90 f4       	brcc	.+36     	; 0x174c <modf+0x42>
    1728:	ab 2f       	mov	r26, r27
    172a:	00 24       	eor	r0, r0
    172c:	46 95       	lsr	r20
    172e:	37 95       	ror	r19
    1730:	27 95       	ror	r18
    1732:	01 1c       	adc	r0, r1
    1734:	a3 95       	inc	r26
    1736:	d2 f3       	brmi	.-12     	; 0x172c <modf+0x22>
    1738:	00 20       	and	r0, r0
    173a:	71 f0       	breq	.+28     	; 0x1758 <modf+0x4e>
    173c:	22 0f       	add	r18, r18
    173e:	33 1f       	adc	r19, r19
    1740:	44 1f       	adc	r20, r20
    1742:	b3 95       	inc	r27
    1744:	da f3       	brmi	.-10     	; 0x173c <modf+0x32>
    1746:	0e d0       	rcall	.+28     	; 0x1764 <modf+0x5a>
    1748:	0c 94 09 08 	jmp	0x1012	; 0x1012 <__subsf3>
    174c:	61 30       	cpi	r22, 0x01	; 1
    174e:	71 05       	cpc	r23, r1
    1750:	a0 e8       	ldi	r26, 0x80	; 128
    1752:	8a 07       	cpc	r24, r26
    1754:	b9 46       	sbci	r27, 0x69	; 105
    1756:	30 f4       	brcc	.+12     	; 0x1764 <modf+0x5a>
    1758:	9b 01       	movw	r18, r22
    175a:	ac 01       	movw	r20, r24
    175c:	66 27       	eor	r22, r22
    175e:	77 27       	eor	r23, r23
    1760:	88 27       	eor	r24, r24
    1762:	90 78       	andi	r25, 0x80	; 128
    1764:	30 96       	adiw	r30, 0x00	; 0
    1766:	21 f0       	breq	.+8      	; 0x1770 <modf+0x66>
    1768:	20 83       	st	Z, r18
    176a:	31 83       	std	Z+1, r19	; 0x01
    176c:	42 83       	std	Z+2, r20	; 0x02
    176e:	53 83       	std	Z+3, r21	; 0x03
    1770:	08 95       	ret

00001772 <__fp_mpack>:
    1772:	9f 3f       	cpi	r25, 0xFF	; 255
    1774:	31 f0       	breq	.+12     	; 0x1782 <__fp_mpack_finite+0xc>

00001776 <__fp_mpack_finite>:
    1776:	91 50       	subi	r25, 0x01	; 1
    1778:	20 f4       	brcc	.+8      	; 0x1782 <__fp_mpack_finite+0xc>
    177a:	87 95       	ror	r24
    177c:	77 95       	ror	r23
    177e:	67 95       	ror	r22
    1780:	b7 95       	ror	r27
    1782:	88 0f       	add	r24, r24
    1784:	91 1d       	adc	r25, r1
    1786:	96 95       	lsr	r25
    1788:	87 95       	ror	r24
    178a:	97 f9       	bld	r25, 7
    178c:	08 95       	ret

0000178e <__divmodhi4>:
    178e:	97 fb       	bst	r25, 7
    1790:	07 2e       	mov	r0, r23
    1792:	16 f4       	brtc	.+4      	; 0x1798 <__divmodhi4+0xa>
    1794:	00 94       	com	r0
    1796:	07 d0       	rcall	.+14     	; 0x17a6 <__divmodhi4_neg1>
    1798:	77 fd       	sbrc	r23, 7
    179a:	09 d0       	rcall	.+18     	; 0x17ae <__divmodhi4_neg2>
    179c:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <__udivmodhi4>
    17a0:	07 fc       	sbrc	r0, 7
    17a2:	05 d0       	rcall	.+10     	; 0x17ae <__divmodhi4_neg2>
    17a4:	3e f4       	brtc	.+14     	; 0x17b4 <__divmodhi4_exit>

000017a6 <__divmodhi4_neg1>:
    17a6:	90 95       	com	r25
    17a8:	81 95       	neg	r24
    17aa:	9f 4f       	sbci	r25, 0xFF	; 255
    17ac:	08 95       	ret

000017ae <__divmodhi4_neg2>:
    17ae:	70 95       	com	r23
    17b0:	61 95       	neg	r22
    17b2:	7f 4f       	sbci	r23, 0xFF	; 255

000017b4 <__divmodhi4_exit>:
    17b4:	08 95       	ret

000017b6 <__umulhisi3>:
    17b6:	a2 9f       	mul	r26, r18
    17b8:	b0 01       	movw	r22, r0
    17ba:	b3 9f       	mul	r27, r19
    17bc:	c0 01       	movw	r24, r0
    17be:	a3 9f       	mul	r26, r19
    17c0:	70 0d       	add	r23, r0
    17c2:	81 1d       	adc	r24, r1
    17c4:	11 24       	eor	r1, r1
    17c6:	91 1d       	adc	r25, r1
    17c8:	b2 9f       	mul	r27, r18
    17ca:	70 0d       	add	r23, r0
    17cc:	81 1d       	adc	r24, r1
    17ce:	11 24       	eor	r1, r1
    17d0:	91 1d       	adc	r25, r1
    17d2:	08 95       	ret

000017d4 <__udivmodhi4>:
    17d4:	aa 1b       	sub	r26, r26
    17d6:	bb 1b       	sub	r27, r27
    17d8:	51 e1       	ldi	r21, 0x11	; 17
    17da:	07 c0       	rjmp	.+14     	; 0x17ea <__udivmodhi4_ep>

000017dc <__udivmodhi4_loop>:
    17dc:	aa 1f       	adc	r26, r26
    17de:	bb 1f       	adc	r27, r27
    17e0:	a6 17       	cp	r26, r22
    17e2:	b7 07       	cpc	r27, r23
    17e4:	10 f0       	brcs	.+4      	; 0x17ea <__udivmodhi4_ep>
    17e6:	a6 1b       	sub	r26, r22
    17e8:	b7 0b       	sbc	r27, r23

000017ea <__udivmodhi4_ep>:
    17ea:	88 1f       	adc	r24, r24
    17ec:	99 1f       	adc	r25, r25
    17ee:	5a 95       	dec	r21
    17f0:	a9 f7       	brne	.-22     	; 0x17dc <__udivmodhi4_loop>
    17f2:	80 95       	com	r24
    17f4:	90 95       	com	r25
    17f6:	bc 01       	movw	r22, r24
    17f8:	cd 01       	movw	r24, r26
    17fa:	08 95       	ret

000017fc <snprintf>:
    17fc:	ae e0       	ldi	r26, 0x0E	; 14
    17fe:	b0 e0       	ldi	r27, 0x00	; 0
    1800:	e4 e0       	ldi	r30, 0x04	; 4
    1802:	fc e0       	ldi	r31, 0x0C	; 12
    1804:	0c 94 05 0f 	jmp	0x1e0a	; 0x1e0a <__prologue_saves__+0x1c>
    1808:	0d 89       	ldd	r16, Y+21	; 0x15
    180a:	1e 89       	ldd	r17, Y+22	; 0x16
    180c:	8f 89       	ldd	r24, Y+23	; 0x17
    180e:	98 8d       	ldd	r25, Y+24	; 0x18
    1810:	26 e0       	ldi	r18, 0x06	; 6
    1812:	2c 83       	std	Y+4, r18	; 0x04
    1814:	1a 83       	std	Y+2, r17	; 0x02
    1816:	09 83       	std	Y+1, r16	; 0x01
    1818:	97 ff       	sbrs	r25, 7
    181a:	02 c0       	rjmp	.+4      	; 0x1820 <snprintf+0x24>
    181c:	80 e0       	ldi	r24, 0x00	; 0
    181e:	90 e8       	ldi	r25, 0x80	; 128
    1820:	01 97       	sbiw	r24, 0x01	; 1
    1822:	9e 83       	std	Y+6, r25	; 0x06
    1824:	8d 83       	std	Y+5, r24	; 0x05
    1826:	ae 01       	movw	r20, r28
    1828:	45 5e       	subi	r20, 0xE5	; 229
    182a:	5f 4f       	sbci	r21, 0xFF	; 255
    182c:	69 8d       	ldd	r22, Y+25	; 0x19
    182e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1830:	ce 01       	movw	r24, r28
    1832:	01 96       	adiw	r24, 0x01	; 1
    1834:	0e 94 2e 0c 	call	0x185c	; 0x185c <vfprintf>
    1838:	4d 81       	ldd	r20, Y+5	; 0x05
    183a:	5e 81       	ldd	r21, Y+6	; 0x06
    183c:	57 fd       	sbrc	r21, 7
    183e:	0a c0       	rjmp	.+20     	; 0x1854 <snprintf+0x58>
    1840:	2f 81       	ldd	r18, Y+7	; 0x07
    1842:	38 85       	ldd	r19, Y+8	; 0x08
    1844:	42 17       	cp	r20, r18
    1846:	53 07       	cpc	r21, r19
    1848:	0c f4       	brge	.+2      	; 0x184c <snprintf+0x50>
    184a:	9a 01       	movw	r18, r20
    184c:	f8 01       	movw	r30, r16
    184e:	e2 0f       	add	r30, r18
    1850:	f3 1f       	adc	r31, r19
    1852:	10 82       	st	Z, r1
    1854:	2e 96       	adiw	r28, 0x0e	; 14
    1856:	e4 e0       	ldi	r30, 0x04	; 4
    1858:	0c 94 21 0f 	jmp	0x1e42	; 0x1e42 <__epilogue_restores__+0x1c>

0000185c <vfprintf>:
    185c:	ab e0       	ldi	r26, 0x0B	; 11
    185e:	b0 e0       	ldi	r27, 0x00	; 0
    1860:	e4 e3       	ldi	r30, 0x34	; 52
    1862:	fc e0       	ldi	r31, 0x0C	; 12
    1864:	0c 94 f7 0e 	jmp	0x1dee	; 0x1dee <__prologue_saves__>
    1868:	6c 01       	movw	r12, r24
    186a:	7b 01       	movw	r14, r22
    186c:	8a 01       	movw	r16, r20
    186e:	fc 01       	movw	r30, r24
    1870:	17 82       	std	Z+7, r1	; 0x07
    1872:	16 82       	std	Z+6, r1	; 0x06
    1874:	83 81       	ldd	r24, Z+3	; 0x03
    1876:	81 ff       	sbrs	r24, 1
    1878:	cc c1       	rjmp	.+920    	; 0x1c12 <vfprintf+0x3b6>
    187a:	ce 01       	movw	r24, r28
    187c:	01 96       	adiw	r24, 0x01	; 1
    187e:	3c 01       	movw	r6, r24
    1880:	f6 01       	movw	r30, r12
    1882:	93 81       	ldd	r25, Z+3	; 0x03
    1884:	f7 01       	movw	r30, r14
    1886:	93 fd       	sbrc	r25, 3
    1888:	85 91       	lpm	r24, Z+
    188a:	93 ff       	sbrs	r25, 3
    188c:	81 91       	ld	r24, Z+
    188e:	7f 01       	movw	r14, r30
    1890:	88 23       	and	r24, r24
    1892:	09 f4       	brne	.+2      	; 0x1896 <vfprintf+0x3a>
    1894:	ba c1       	rjmp	.+884    	; 0x1c0a <vfprintf+0x3ae>
    1896:	85 32       	cpi	r24, 0x25	; 37
    1898:	39 f4       	brne	.+14     	; 0x18a8 <vfprintf+0x4c>
    189a:	93 fd       	sbrc	r25, 3
    189c:	85 91       	lpm	r24, Z+
    189e:	93 ff       	sbrs	r25, 3
    18a0:	81 91       	ld	r24, Z+
    18a2:	7f 01       	movw	r14, r30
    18a4:	85 32       	cpi	r24, 0x25	; 37
    18a6:	29 f4       	brne	.+10     	; 0x18b2 <vfprintf+0x56>
    18a8:	b6 01       	movw	r22, r12
    18aa:	90 e0       	ldi	r25, 0x00	; 0
    18ac:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <fputc>
    18b0:	e7 cf       	rjmp	.-50     	; 0x1880 <vfprintf+0x24>
    18b2:	91 2c       	mov	r9, r1
    18b4:	21 2c       	mov	r2, r1
    18b6:	31 2c       	mov	r3, r1
    18b8:	ff e1       	ldi	r31, 0x1F	; 31
    18ba:	f3 15       	cp	r31, r3
    18bc:	d8 f0       	brcs	.+54     	; 0x18f4 <vfprintf+0x98>
    18be:	8b 32       	cpi	r24, 0x2B	; 43
    18c0:	79 f0       	breq	.+30     	; 0x18e0 <vfprintf+0x84>
    18c2:	38 f4       	brcc	.+14     	; 0x18d2 <vfprintf+0x76>
    18c4:	80 32       	cpi	r24, 0x20	; 32
    18c6:	79 f0       	breq	.+30     	; 0x18e6 <vfprintf+0x8a>
    18c8:	83 32       	cpi	r24, 0x23	; 35
    18ca:	a1 f4       	brne	.+40     	; 0x18f4 <vfprintf+0x98>
    18cc:	23 2d       	mov	r18, r3
    18ce:	20 61       	ori	r18, 0x10	; 16
    18d0:	1d c0       	rjmp	.+58     	; 0x190c <vfprintf+0xb0>
    18d2:	8d 32       	cpi	r24, 0x2D	; 45
    18d4:	61 f0       	breq	.+24     	; 0x18ee <vfprintf+0x92>
    18d6:	80 33       	cpi	r24, 0x30	; 48
    18d8:	69 f4       	brne	.+26     	; 0x18f4 <vfprintf+0x98>
    18da:	23 2d       	mov	r18, r3
    18dc:	21 60       	ori	r18, 0x01	; 1
    18de:	16 c0       	rjmp	.+44     	; 0x190c <vfprintf+0xb0>
    18e0:	83 2d       	mov	r24, r3
    18e2:	82 60       	ori	r24, 0x02	; 2
    18e4:	38 2e       	mov	r3, r24
    18e6:	e3 2d       	mov	r30, r3
    18e8:	e4 60       	ori	r30, 0x04	; 4
    18ea:	3e 2e       	mov	r3, r30
    18ec:	2a c0       	rjmp	.+84     	; 0x1942 <vfprintf+0xe6>
    18ee:	f3 2d       	mov	r31, r3
    18f0:	f8 60       	ori	r31, 0x08	; 8
    18f2:	1d c0       	rjmp	.+58     	; 0x192e <vfprintf+0xd2>
    18f4:	37 fc       	sbrc	r3, 7
    18f6:	2d c0       	rjmp	.+90     	; 0x1952 <vfprintf+0xf6>
    18f8:	20 ed       	ldi	r18, 0xD0	; 208
    18fa:	28 0f       	add	r18, r24
    18fc:	2a 30       	cpi	r18, 0x0A	; 10
    18fe:	40 f0       	brcs	.+16     	; 0x1910 <vfprintf+0xb4>
    1900:	8e 32       	cpi	r24, 0x2E	; 46
    1902:	b9 f4       	brne	.+46     	; 0x1932 <vfprintf+0xd6>
    1904:	36 fc       	sbrc	r3, 6
    1906:	81 c1       	rjmp	.+770    	; 0x1c0a <vfprintf+0x3ae>
    1908:	23 2d       	mov	r18, r3
    190a:	20 64       	ori	r18, 0x40	; 64
    190c:	32 2e       	mov	r3, r18
    190e:	19 c0       	rjmp	.+50     	; 0x1942 <vfprintf+0xe6>
    1910:	36 fe       	sbrs	r3, 6
    1912:	06 c0       	rjmp	.+12     	; 0x1920 <vfprintf+0xc4>
    1914:	8a e0       	ldi	r24, 0x0A	; 10
    1916:	98 9e       	mul	r9, r24
    1918:	20 0d       	add	r18, r0
    191a:	11 24       	eor	r1, r1
    191c:	92 2e       	mov	r9, r18
    191e:	11 c0       	rjmp	.+34     	; 0x1942 <vfprintf+0xe6>
    1920:	ea e0       	ldi	r30, 0x0A	; 10
    1922:	2e 9e       	mul	r2, r30
    1924:	20 0d       	add	r18, r0
    1926:	11 24       	eor	r1, r1
    1928:	22 2e       	mov	r2, r18
    192a:	f3 2d       	mov	r31, r3
    192c:	f0 62       	ori	r31, 0x20	; 32
    192e:	3f 2e       	mov	r3, r31
    1930:	08 c0       	rjmp	.+16     	; 0x1942 <vfprintf+0xe6>
    1932:	8c 36       	cpi	r24, 0x6C	; 108
    1934:	21 f4       	brne	.+8      	; 0x193e <vfprintf+0xe2>
    1936:	83 2d       	mov	r24, r3
    1938:	80 68       	ori	r24, 0x80	; 128
    193a:	38 2e       	mov	r3, r24
    193c:	02 c0       	rjmp	.+4      	; 0x1942 <vfprintf+0xe6>
    193e:	88 36       	cpi	r24, 0x68	; 104
    1940:	41 f4       	brne	.+16     	; 0x1952 <vfprintf+0xf6>
    1942:	f7 01       	movw	r30, r14
    1944:	93 fd       	sbrc	r25, 3
    1946:	85 91       	lpm	r24, Z+
    1948:	93 ff       	sbrs	r25, 3
    194a:	81 91       	ld	r24, Z+
    194c:	7f 01       	movw	r14, r30
    194e:	81 11       	cpse	r24, r1
    1950:	b3 cf       	rjmp	.-154    	; 0x18b8 <vfprintf+0x5c>
    1952:	98 2f       	mov	r25, r24
    1954:	9f 7d       	andi	r25, 0xDF	; 223
    1956:	95 54       	subi	r25, 0x45	; 69
    1958:	93 30       	cpi	r25, 0x03	; 3
    195a:	28 f4       	brcc	.+10     	; 0x1966 <vfprintf+0x10a>
    195c:	0c 5f       	subi	r16, 0xFC	; 252
    195e:	1f 4f       	sbci	r17, 0xFF	; 255
    1960:	9f e3       	ldi	r25, 0x3F	; 63
    1962:	99 83       	std	Y+1, r25	; 0x01
    1964:	0d c0       	rjmp	.+26     	; 0x1980 <vfprintf+0x124>
    1966:	83 36       	cpi	r24, 0x63	; 99
    1968:	31 f0       	breq	.+12     	; 0x1976 <vfprintf+0x11a>
    196a:	83 37       	cpi	r24, 0x73	; 115
    196c:	71 f0       	breq	.+28     	; 0x198a <vfprintf+0x12e>
    196e:	83 35       	cpi	r24, 0x53	; 83
    1970:	09 f0       	breq	.+2      	; 0x1974 <vfprintf+0x118>
    1972:	59 c0       	rjmp	.+178    	; 0x1a26 <vfprintf+0x1ca>
    1974:	21 c0       	rjmp	.+66     	; 0x19b8 <vfprintf+0x15c>
    1976:	f8 01       	movw	r30, r16
    1978:	80 81       	ld	r24, Z
    197a:	89 83       	std	Y+1, r24	; 0x01
    197c:	0e 5f       	subi	r16, 0xFE	; 254
    197e:	1f 4f       	sbci	r17, 0xFF	; 255
    1980:	88 24       	eor	r8, r8
    1982:	83 94       	inc	r8
    1984:	91 2c       	mov	r9, r1
    1986:	53 01       	movw	r10, r6
    1988:	13 c0       	rjmp	.+38     	; 0x19b0 <vfprintf+0x154>
    198a:	28 01       	movw	r4, r16
    198c:	f2 e0       	ldi	r31, 0x02	; 2
    198e:	4f 0e       	add	r4, r31
    1990:	51 1c       	adc	r5, r1
    1992:	f8 01       	movw	r30, r16
    1994:	a0 80       	ld	r10, Z
    1996:	b1 80       	ldd	r11, Z+1	; 0x01
    1998:	36 fe       	sbrs	r3, 6
    199a:	03 c0       	rjmp	.+6      	; 0x19a2 <vfprintf+0x146>
    199c:	69 2d       	mov	r22, r9
    199e:	70 e0       	ldi	r23, 0x00	; 0
    19a0:	02 c0       	rjmp	.+4      	; 0x19a6 <vfprintf+0x14a>
    19a2:	6f ef       	ldi	r22, 0xFF	; 255
    19a4:	7f ef       	ldi	r23, 0xFF	; 255
    19a6:	c5 01       	movw	r24, r10
    19a8:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <strnlen>
    19ac:	4c 01       	movw	r8, r24
    19ae:	82 01       	movw	r16, r4
    19b0:	f3 2d       	mov	r31, r3
    19b2:	ff 77       	andi	r31, 0x7F	; 127
    19b4:	3f 2e       	mov	r3, r31
    19b6:	16 c0       	rjmp	.+44     	; 0x19e4 <vfprintf+0x188>
    19b8:	28 01       	movw	r4, r16
    19ba:	22 e0       	ldi	r18, 0x02	; 2
    19bc:	42 0e       	add	r4, r18
    19be:	51 1c       	adc	r5, r1
    19c0:	f8 01       	movw	r30, r16
    19c2:	a0 80       	ld	r10, Z
    19c4:	b1 80       	ldd	r11, Z+1	; 0x01
    19c6:	36 fe       	sbrs	r3, 6
    19c8:	03 c0       	rjmp	.+6      	; 0x19d0 <vfprintf+0x174>
    19ca:	69 2d       	mov	r22, r9
    19cc:	70 e0       	ldi	r23, 0x00	; 0
    19ce:	02 c0       	rjmp	.+4      	; 0x19d4 <vfprintf+0x178>
    19d0:	6f ef       	ldi	r22, 0xFF	; 255
    19d2:	7f ef       	ldi	r23, 0xFF	; 255
    19d4:	c5 01       	movw	r24, r10
    19d6:	0e 94 0f 0e 	call	0x1c1e	; 0x1c1e <strnlen_P>
    19da:	4c 01       	movw	r8, r24
    19dc:	f3 2d       	mov	r31, r3
    19de:	f0 68       	ori	r31, 0x80	; 128
    19e0:	3f 2e       	mov	r3, r31
    19e2:	82 01       	movw	r16, r4
    19e4:	33 fc       	sbrc	r3, 3
    19e6:	1b c0       	rjmp	.+54     	; 0x1a1e <vfprintf+0x1c2>
    19e8:	82 2d       	mov	r24, r2
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	88 16       	cp	r8, r24
    19ee:	99 06       	cpc	r9, r25
    19f0:	b0 f4       	brcc	.+44     	; 0x1a1e <vfprintf+0x1c2>
    19f2:	b6 01       	movw	r22, r12
    19f4:	80 e2       	ldi	r24, 0x20	; 32
    19f6:	90 e0       	ldi	r25, 0x00	; 0
    19f8:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <fputc>
    19fc:	2a 94       	dec	r2
    19fe:	f4 cf       	rjmp	.-24     	; 0x19e8 <vfprintf+0x18c>
    1a00:	f5 01       	movw	r30, r10
    1a02:	37 fc       	sbrc	r3, 7
    1a04:	85 91       	lpm	r24, Z+
    1a06:	37 fe       	sbrs	r3, 7
    1a08:	81 91       	ld	r24, Z+
    1a0a:	5f 01       	movw	r10, r30
    1a0c:	b6 01       	movw	r22, r12
    1a0e:	90 e0       	ldi	r25, 0x00	; 0
    1a10:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <fputc>
    1a14:	21 10       	cpse	r2, r1
    1a16:	2a 94       	dec	r2
    1a18:	21 e0       	ldi	r18, 0x01	; 1
    1a1a:	82 1a       	sub	r8, r18
    1a1c:	91 08       	sbc	r9, r1
    1a1e:	81 14       	cp	r8, r1
    1a20:	91 04       	cpc	r9, r1
    1a22:	71 f7       	brne	.-36     	; 0x1a00 <vfprintf+0x1a4>
    1a24:	e8 c0       	rjmp	.+464    	; 0x1bf6 <vfprintf+0x39a>
    1a26:	84 36       	cpi	r24, 0x64	; 100
    1a28:	11 f0       	breq	.+4      	; 0x1a2e <vfprintf+0x1d2>
    1a2a:	89 36       	cpi	r24, 0x69	; 105
    1a2c:	41 f5       	brne	.+80     	; 0x1a7e <vfprintf+0x222>
    1a2e:	f8 01       	movw	r30, r16
    1a30:	37 fe       	sbrs	r3, 7
    1a32:	07 c0       	rjmp	.+14     	; 0x1a42 <vfprintf+0x1e6>
    1a34:	60 81       	ld	r22, Z
    1a36:	71 81       	ldd	r23, Z+1	; 0x01
    1a38:	82 81       	ldd	r24, Z+2	; 0x02
    1a3a:	93 81       	ldd	r25, Z+3	; 0x03
    1a3c:	0c 5f       	subi	r16, 0xFC	; 252
    1a3e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a40:	08 c0       	rjmp	.+16     	; 0x1a52 <vfprintf+0x1f6>
    1a42:	60 81       	ld	r22, Z
    1a44:	71 81       	ldd	r23, Z+1	; 0x01
    1a46:	07 2e       	mov	r0, r23
    1a48:	00 0c       	add	r0, r0
    1a4a:	88 0b       	sbc	r24, r24
    1a4c:	99 0b       	sbc	r25, r25
    1a4e:	0e 5f       	subi	r16, 0xFE	; 254
    1a50:	1f 4f       	sbci	r17, 0xFF	; 255
    1a52:	f3 2d       	mov	r31, r3
    1a54:	ff 76       	andi	r31, 0x6F	; 111
    1a56:	3f 2e       	mov	r3, r31
    1a58:	97 ff       	sbrs	r25, 7
    1a5a:	09 c0       	rjmp	.+18     	; 0x1a6e <vfprintf+0x212>
    1a5c:	90 95       	com	r25
    1a5e:	80 95       	com	r24
    1a60:	70 95       	com	r23
    1a62:	61 95       	neg	r22
    1a64:	7f 4f       	sbci	r23, 0xFF	; 255
    1a66:	8f 4f       	sbci	r24, 0xFF	; 255
    1a68:	9f 4f       	sbci	r25, 0xFF	; 255
    1a6a:	f0 68       	ori	r31, 0x80	; 128
    1a6c:	3f 2e       	mov	r3, r31
    1a6e:	2a e0       	ldi	r18, 0x0A	; 10
    1a70:	30 e0       	ldi	r19, 0x00	; 0
    1a72:	a3 01       	movw	r20, r6
    1a74:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <__ultoa_invert>
    1a78:	88 2e       	mov	r8, r24
    1a7a:	86 18       	sub	r8, r6
    1a7c:	45 c0       	rjmp	.+138    	; 0x1b08 <vfprintf+0x2ac>
    1a7e:	85 37       	cpi	r24, 0x75	; 117
    1a80:	31 f4       	brne	.+12     	; 0x1a8e <vfprintf+0x232>
    1a82:	23 2d       	mov	r18, r3
    1a84:	2f 7e       	andi	r18, 0xEF	; 239
    1a86:	b2 2e       	mov	r11, r18
    1a88:	2a e0       	ldi	r18, 0x0A	; 10
    1a8a:	30 e0       	ldi	r19, 0x00	; 0
    1a8c:	25 c0       	rjmp	.+74     	; 0x1ad8 <vfprintf+0x27c>
    1a8e:	93 2d       	mov	r25, r3
    1a90:	99 7f       	andi	r25, 0xF9	; 249
    1a92:	b9 2e       	mov	r11, r25
    1a94:	8f 36       	cpi	r24, 0x6F	; 111
    1a96:	c1 f0       	breq	.+48     	; 0x1ac8 <vfprintf+0x26c>
    1a98:	18 f4       	brcc	.+6      	; 0x1aa0 <vfprintf+0x244>
    1a9a:	88 35       	cpi	r24, 0x58	; 88
    1a9c:	79 f0       	breq	.+30     	; 0x1abc <vfprintf+0x260>
    1a9e:	b5 c0       	rjmp	.+362    	; 0x1c0a <vfprintf+0x3ae>
    1aa0:	80 37       	cpi	r24, 0x70	; 112
    1aa2:	19 f0       	breq	.+6      	; 0x1aaa <vfprintf+0x24e>
    1aa4:	88 37       	cpi	r24, 0x78	; 120
    1aa6:	21 f0       	breq	.+8      	; 0x1ab0 <vfprintf+0x254>
    1aa8:	b0 c0       	rjmp	.+352    	; 0x1c0a <vfprintf+0x3ae>
    1aaa:	e9 2f       	mov	r30, r25
    1aac:	e0 61       	ori	r30, 0x10	; 16
    1aae:	be 2e       	mov	r11, r30
    1ab0:	b4 fe       	sbrs	r11, 4
    1ab2:	0d c0       	rjmp	.+26     	; 0x1ace <vfprintf+0x272>
    1ab4:	fb 2d       	mov	r31, r11
    1ab6:	f4 60       	ori	r31, 0x04	; 4
    1ab8:	bf 2e       	mov	r11, r31
    1aba:	09 c0       	rjmp	.+18     	; 0x1ace <vfprintf+0x272>
    1abc:	34 fe       	sbrs	r3, 4
    1abe:	0a c0       	rjmp	.+20     	; 0x1ad4 <vfprintf+0x278>
    1ac0:	29 2f       	mov	r18, r25
    1ac2:	26 60       	ori	r18, 0x06	; 6
    1ac4:	b2 2e       	mov	r11, r18
    1ac6:	06 c0       	rjmp	.+12     	; 0x1ad4 <vfprintf+0x278>
    1ac8:	28 e0       	ldi	r18, 0x08	; 8
    1aca:	30 e0       	ldi	r19, 0x00	; 0
    1acc:	05 c0       	rjmp	.+10     	; 0x1ad8 <vfprintf+0x27c>
    1ace:	20 e1       	ldi	r18, 0x10	; 16
    1ad0:	30 e0       	ldi	r19, 0x00	; 0
    1ad2:	02 c0       	rjmp	.+4      	; 0x1ad8 <vfprintf+0x27c>
    1ad4:	20 e1       	ldi	r18, 0x10	; 16
    1ad6:	32 e0       	ldi	r19, 0x02	; 2
    1ad8:	f8 01       	movw	r30, r16
    1ada:	b7 fe       	sbrs	r11, 7
    1adc:	07 c0       	rjmp	.+14     	; 0x1aec <vfprintf+0x290>
    1ade:	60 81       	ld	r22, Z
    1ae0:	71 81       	ldd	r23, Z+1	; 0x01
    1ae2:	82 81       	ldd	r24, Z+2	; 0x02
    1ae4:	93 81       	ldd	r25, Z+3	; 0x03
    1ae6:	0c 5f       	subi	r16, 0xFC	; 252
    1ae8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aea:	06 c0       	rjmp	.+12     	; 0x1af8 <vfprintf+0x29c>
    1aec:	60 81       	ld	r22, Z
    1aee:	71 81       	ldd	r23, Z+1	; 0x01
    1af0:	80 e0       	ldi	r24, 0x00	; 0
    1af2:	90 e0       	ldi	r25, 0x00	; 0
    1af4:	0e 5f       	subi	r16, 0xFE	; 254
    1af6:	1f 4f       	sbci	r17, 0xFF	; 255
    1af8:	a3 01       	movw	r20, r6
    1afa:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <__ultoa_invert>
    1afe:	88 2e       	mov	r8, r24
    1b00:	86 18       	sub	r8, r6
    1b02:	fb 2d       	mov	r31, r11
    1b04:	ff 77       	andi	r31, 0x7F	; 127
    1b06:	3f 2e       	mov	r3, r31
    1b08:	36 fe       	sbrs	r3, 6
    1b0a:	0d c0       	rjmp	.+26     	; 0x1b26 <vfprintf+0x2ca>
    1b0c:	23 2d       	mov	r18, r3
    1b0e:	2e 7f       	andi	r18, 0xFE	; 254
    1b10:	a2 2e       	mov	r10, r18
    1b12:	89 14       	cp	r8, r9
    1b14:	58 f4       	brcc	.+22     	; 0x1b2c <vfprintf+0x2d0>
    1b16:	34 fe       	sbrs	r3, 4
    1b18:	0b c0       	rjmp	.+22     	; 0x1b30 <vfprintf+0x2d4>
    1b1a:	32 fc       	sbrc	r3, 2
    1b1c:	09 c0       	rjmp	.+18     	; 0x1b30 <vfprintf+0x2d4>
    1b1e:	83 2d       	mov	r24, r3
    1b20:	8e 7e       	andi	r24, 0xEE	; 238
    1b22:	a8 2e       	mov	r10, r24
    1b24:	05 c0       	rjmp	.+10     	; 0x1b30 <vfprintf+0x2d4>
    1b26:	b8 2c       	mov	r11, r8
    1b28:	a3 2c       	mov	r10, r3
    1b2a:	03 c0       	rjmp	.+6      	; 0x1b32 <vfprintf+0x2d6>
    1b2c:	b8 2c       	mov	r11, r8
    1b2e:	01 c0       	rjmp	.+2      	; 0x1b32 <vfprintf+0x2d6>
    1b30:	b9 2c       	mov	r11, r9
    1b32:	a4 fe       	sbrs	r10, 4
    1b34:	0f c0       	rjmp	.+30     	; 0x1b54 <vfprintf+0x2f8>
    1b36:	fe 01       	movw	r30, r28
    1b38:	e8 0d       	add	r30, r8
    1b3a:	f1 1d       	adc	r31, r1
    1b3c:	80 81       	ld	r24, Z
    1b3e:	80 33       	cpi	r24, 0x30	; 48
    1b40:	21 f4       	brne	.+8      	; 0x1b4a <vfprintf+0x2ee>
    1b42:	9a 2d       	mov	r25, r10
    1b44:	99 7e       	andi	r25, 0xE9	; 233
    1b46:	a9 2e       	mov	r10, r25
    1b48:	09 c0       	rjmp	.+18     	; 0x1b5c <vfprintf+0x300>
    1b4a:	a2 fe       	sbrs	r10, 2
    1b4c:	06 c0       	rjmp	.+12     	; 0x1b5a <vfprintf+0x2fe>
    1b4e:	b3 94       	inc	r11
    1b50:	b3 94       	inc	r11
    1b52:	04 c0       	rjmp	.+8      	; 0x1b5c <vfprintf+0x300>
    1b54:	8a 2d       	mov	r24, r10
    1b56:	86 78       	andi	r24, 0x86	; 134
    1b58:	09 f0       	breq	.+2      	; 0x1b5c <vfprintf+0x300>
    1b5a:	b3 94       	inc	r11
    1b5c:	a3 fc       	sbrc	r10, 3
    1b5e:	11 c0       	rjmp	.+34     	; 0x1b82 <vfprintf+0x326>
    1b60:	a0 fe       	sbrs	r10, 0
    1b62:	06 c0       	rjmp	.+12     	; 0x1b70 <vfprintf+0x314>
    1b64:	b2 14       	cp	r11, r2
    1b66:	88 f4       	brcc	.+34     	; 0x1b8a <vfprintf+0x32e>
    1b68:	28 0c       	add	r2, r8
    1b6a:	92 2c       	mov	r9, r2
    1b6c:	9b 18       	sub	r9, r11
    1b6e:	0e c0       	rjmp	.+28     	; 0x1b8c <vfprintf+0x330>
    1b70:	b2 14       	cp	r11, r2
    1b72:	60 f4       	brcc	.+24     	; 0x1b8c <vfprintf+0x330>
    1b74:	b6 01       	movw	r22, r12
    1b76:	80 e2       	ldi	r24, 0x20	; 32
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <fputc>
    1b7e:	b3 94       	inc	r11
    1b80:	f7 cf       	rjmp	.-18     	; 0x1b70 <vfprintf+0x314>
    1b82:	b2 14       	cp	r11, r2
    1b84:	18 f4       	brcc	.+6      	; 0x1b8c <vfprintf+0x330>
    1b86:	2b 18       	sub	r2, r11
    1b88:	02 c0       	rjmp	.+4      	; 0x1b8e <vfprintf+0x332>
    1b8a:	98 2c       	mov	r9, r8
    1b8c:	21 2c       	mov	r2, r1
    1b8e:	a4 fe       	sbrs	r10, 4
    1b90:	10 c0       	rjmp	.+32     	; 0x1bb2 <vfprintf+0x356>
    1b92:	b6 01       	movw	r22, r12
    1b94:	80 e3       	ldi	r24, 0x30	; 48
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <fputc>
    1b9c:	a2 fe       	sbrs	r10, 2
    1b9e:	17 c0       	rjmp	.+46     	; 0x1bce <vfprintf+0x372>
    1ba0:	a1 fc       	sbrc	r10, 1
    1ba2:	03 c0       	rjmp	.+6      	; 0x1baa <vfprintf+0x34e>
    1ba4:	88 e7       	ldi	r24, 0x78	; 120
    1ba6:	90 e0       	ldi	r25, 0x00	; 0
    1ba8:	02 c0       	rjmp	.+4      	; 0x1bae <vfprintf+0x352>
    1baa:	88 e5       	ldi	r24, 0x58	; 88
    1bac:	90 e0       	ldi	r25, 0x00	; 0
    1bae:	b6 01       	movw	r22, r12
    1bb0:	0c c0       	rjmp	.+24     	; 0x1bca <vfprintf+0x36e>
    1bb2:	8a 2d       	mov	r24, r10
    1bb4:	86 78       	andi	r24, 0x86	; 134
    1bb6:	59 f0       	breq	.+22     	; 0x1bce <vfprintf+0x372>
    1bb8:	a1 fe       	sbrs	r10, 1
    1bba:	02 c0       	rjmp	.+4      	; 0x1bc0 <vfprintf+0x364>
    1bbc:	8b e2       	ldi	r24, 0x2B	; 43
    1bbe:	01 c0       	rjmp	.+2      	; 0x1bc2 <vfprintf+0x366>
    1bc0:	80 e2       	ldi	r24, 0x20	; 32
    1bc2:	a7 fc       	sbrc	r10, 7
    1bc4:	8d e2       	ldi	r24, 0x2D	; 45
    1bc6:	b6 01       	movw	r22, r12
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <fputc>
    1bce:	89 14       	cp	r8, r9
    1bd0:	38 f4       	brcc	.+14     	; 0x1be0 <vfprintf+0x384>
    1bd2:	b6 01       	movw	r22, r12
    1bd4:	80 e3       	ldi	r24, 0x30	; 48
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <fputc>
    1bdc:	9a 94       	dec	r9
    1bde:	f7 cf       	rjmp	.-18     	; 0x1bce <vfprintf+0x372>
    1be0:	8a 94       	dec	r8
    1be2:	f3 01       	movw	r30, r6
    1be4:	e8 0d       	add	r30, r8
    1be6:	f1 1d       	adc	r31, r1
    1be8:	80 81       	ld	r24, Z
    1bea:	b6 01       	movw	r22, r12
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <fputc>
    1bf2:	81 10       	cpse	r8, r1
    1bf4:	f5 cf       	rjmp	.-22     	; 0x1be0 <vfprintf+0x384>
    1bf6:	22 20       	and	r2, r2
    1bf8:	09 f4       	brne	.+2      	; 0x1bfc <vfprintf+0x3a0>
    1bfa:	42 ce       	rjmp	.-892    	; 0x1880 <vfprintf+0x24>
    1bfc:	b6 01       	movw	r22, r12
    1bfe:	80 e2       	ldi	r24, 0x20	; 32
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	0e 94 25 0e 	call	0x1c4a	; 0x1c4a <fputc>
    1c06:	2a 94       	dec	r2
    1c08:	f6 cf       	rjmp	.-20     	; 0x1bf6 <vfprintf+0x39a>
    1c0a:	f6 01       	movw	r30, r12
    1c0c:	86 81       	ldd	r24, Z+6	; 0x06
    1c0e:	97 81       	ldd	r25, Z+7	; 0x07
    1c10:	02 c0       	rjmp	.+4      	; 0x1c16 <vfprintf+0x3ba>
    1c12:	8f ef       	ldi	r24, 0xFF	; 255
    1c14:	9f ef       	ldi	r25, 0xFF	; 255
    1c16:	2b 96       	adiw	r28, 0x0b	; 11
    1c18:	e2 e1       	ldi	r30, 0x12	; 18
    1c1a:	0c 94 13 0f 	jmp	0x1e26	; 0x1e26 <__epilogue_restores__>

00001c1e <strnlen_P>:
    1c1e:	fc 01       	movw	r30, r24
    1c20:	05 90       	lpm	r0, Z+
    1c22:	61 50       	subi	r22, 0x01	; 1
    1c24:	70 40       	sbci	r23, 0x00	; 0
    1c26:	01 10       	cpse	r0, r1
    1c28:	d8 f7       	brcc	.-10     	; 0x1c20 <strnlen_P+0x2>
    1c2a:	80 95       	com	r24
    1c2c:	90 95       	com	r25
    1c2e:	8e 0f       	add	r24, r30
    1c30:	9f 1f       	adc	r25, r31
    1c32:	08 95       	ret

00001c34 <strnlen>:
    1c34:	fc 01       	movw	r30, r24
    1c36:	61 50       	subi	r22, 0x01	; 1
    1c38:	70 40       	sbci	r23, 0x00	; 0
    1c3a:	01 90       	ld	r0, Z+
    1c3c:	01 10       	cpse	r0, r1
    1c3e:	d8 f7       	brcc	.-10     	; 0x1c36 <strnlen+0x2>
    1c40:	80 95       	com	r24
    1c42:	90 95       	com	r25
    1c44:	8e 0f       	add	r24, r30
    1c46:	9f 1f       	adc	r25, r31
    1c48:	08 95       	ret

00001c4a <fputc>:
    1c4a:	0f 93       	push	r16
    1c4c:	1f 93       	push	r17
    1c4e:	cf 93       	push	r28
    1c50:	df 93       	push	r29
    1c52:	fb 01       	movw	r30, r22
    1c54:	23 81       	ldd	r18, Z+3	; 0x03
    1c56:	21 fd       	sbrc	r18, 1
    1c58:	03 c0       	rjmp	.+6      	; 0x1c60 <fputc+0x16>
    1c5a:	8f ef       	ldi	r24, 0xFF	; 255
    1c5c:	9f ef       	ldi	r25, 0xFF	; 255
    1c5e:	2c c0       	rjmp	.+88     	; 0x1cb8 <fputc+0x6e>
    1c60:	22 ff       	sbrs	r18, 2
    1c62:	16 c0       	rjmp	.+44     	; 0x1c90 <fputc+0x46>
    1c64:	46 81       	ldd	r20, Z+6	; 0x06
    1c66:	57 81       	ldd	r21, Z+7	; 0x07
    1c68:	24 81       	ldd	r18, Z+4	; 0x04
    1c6a:	35 81       	ldd	r19, Z+5	; 0x05
    1c6c:	42 17       	cp	r20, r18
    1c6e:	53 07       	cpc	r21, r19
    1c70:	44 f4       	brge	.+16     	; 0x1c82 <fputc+0x38>
    1c72:	a0 81       	ld	r26, Z
    1c74:	b1 81       	ldd	r27, Z+1	; 0x01
    1c76:	9d 01       	movw	r18, r26
    1c78:	2f 5f       	subi	r18, 0xFF	; 255
    1c7a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c7c:	31 83       	std	Z+1, r19	; 0x01
    1c7e:	20 83       	st	Z, r18
    1c80:	8c 93       	st	X, r24
    1c82:	26 81       	ldd	r18, Z+6	; 0x06
    1c84:	37 81       	ldd	r19, Z+7	; 0x07
    1c86:	2f 5f       	subi	r18, 0xFF	; 255
    1c88:	3f 4f       	sbci	r19, 0xFF	; 255
    1c8a:	37 83       	std	Z+7, r19	; 0x07
    1c8c:	26 83       	std	Z+6, r18	; 0x06
    1c8e:	14 c0       	rjmp	.+40     	; 0x1cb8 <fputc+0x6e>
    1c90:	8b 01       	movw	r16, r22
    1c92:	ec 01       	movw	r28, r24
    1c94:	fb 01       	movw	r30, r22
    1c96:	00 84       	ldd	r0, Z+8	; 0x08
    1c98:	f1 85       	ldd	r31, Z+9	; 0x09
    1c9a:	e0 2d       	mov	r30, r0
    1c9c:	09 95       	icall
    1c9e:	89 2b       	or	r24, r25
    1ca0:	e1 f6       	brne	.-72     	; 0x1c5a <fputc+0x10>
    1ca2:	d8 01       	movw	r26, r16
    1ca4:	16 96       	adiw	r26, 0x06	; 6
    1ca6:	8d 91       	ld	r24, X+
    1ca8:	9c 91       	ld	r25, X
    1caa:	17 97       	sbiw	r26, 0x07	; 7
    1cac:	01 96       	adiw	r24, 0x01	; 1
    1cae:	17 96       	adiw	r26, 0x07	; 7
    1cb0:	9c 93       	st	X, r25
    1cb2:	8e 93       	st	-X, r24
    1cb4:	16 97       	sbiw	r26, 0x06	; 6
    1cb6:	ce 01       	movw	r24, r28
    1cb8:	df 91       	pop	r29
    1cba:	cf 91       	pop	r28
    1cbc:	1f 91       	pop	r17
    1cbe:	0f 91       	pop	r16
    1cc0:	08 95       	ret

00001cc2 <__ultoa_invert>:
    1cc2:	fa 01       	movw	r30, r20
    1cc4:	aa 27       	eor	r26, r26
    1cc6:	28 30       	cpi	r18, 0x08	; 8
    1cc8:	51 f1       	breq	.+84     	; 0x1d1e <__ultoa_invert+0x5c>
    1cca:	20 31       	cpi	r18, 0x10	; 16
    1ccc:	81 f1       	breq	.+96     	; 0x1d2e <__ultoa_invert+0x6c>
    1cce:	e8 94       	clt
    1cd0:	6f 93       	push	r22
    1cd2:	6e 7f       	andi	r22, 0xFE	; 254
    1cd4:	6e 5f       	subi	r22, 0xFE	; 254
    1cd6:	7f 4f       	sbci	r23, 0xFF	; 255
    1cd8:	8f 4f       	sbci	r24, 0xFF	; 255
    1cda:	9f 4f       	sbci	r25, 0xFF	; 255
    1cdc:	af 4f       	sbci	r26, 0xFF	; 255
    1cde:	b1 e0       	ldi	r27, 0x01	; 1
    1ce0:	3e d0       	rcall	.+124    	; 0x1d5e <__ultoa_invert+0x9c>
    1ce2:	b4 e0       	ldi	r27, 0x04	; 4
    1ce4:	3c d0       	rcall	.+120    	; 0x1d5e <__ultoa_invert+0x9c>
    1ce6:	67 0f       	add	r22, r23
    1ce8:	78 1f       	adc	r23, r24
    1cea:	89 1f       	adc	r24, r25
    1cec:	9a 1f       	adc	r25, r26
    1cee:	a1 1d       	adc	r26, r1
    1cf0:	68 0f       	add	r22, r24
    1cf2:	79 1f       	adc	r23, r25
    1cf4:	8a 1f       	adc	r24, r26
    1cf6:	91 1d       	adc	r25, r1
    1cf8:	a1 1d       	adc	r26, r1
    1cfa:	6a 0f       	add	r22, r26
    1cfc:	71 1d       	adc	r23, r1
    1cfe:	81 1d       	adc	r24, r1
    1d00:	91 1d       	adc	r25, r1
    1d02:	a1 1d       	adc	r26, r1
    1d04:	20 d0       	rcall	.+64     	; 0x1d46 <__ultoa_invert+0x84>
    1d06:	09 f4       	brne	.+2      	; 0x1d0a <__ultoa_invert+0x48>
    1d08:	68 94       	set
    1d0a:	3f 91       	pop	r19
    1d0c:	2a e0       	ldi	r18, 0x0A	; 10
    1d0e:	26 9f       	mul	r18, r22
    1d10:	11 24       	eor	r1, r1
    1d12:	30 19       	sub	r19, r0
    1d14:	30 5d       	subi	r19, 0xD0	; 208
    1d16:	31 93       	st	Z+, r19
    1d18:	de f6       	brtc	.-74     	; 0x1cd0 <__ultoa_invert+0xe>
    1d1a:	cf 01       	movw	r24, r30
    1d1c:	08 95       	ret
    1d1e:	46 2f       	mov	r20, r22
    1d20:	47 70       	andi	r20, 0x07	; 7
    1d22:	40 5d       	subi	r20, 0xD0	; 208
    1d24:	41 93       	st	Z+, r20
    1d26:	b3 e0       	ldi	r27, 0x03	; 3
    1d28:	0f d0       	rcall	.+30     	; 0x1d48 <__ultoa_invert+0x86>
    1d2a:	c9 f7       	brne	.-14     	; 0x1d1e <__ultoa_invert+0x5c>
    1d2c:	f6 cf       	rjmp	.-20     	; 0x1d1a <__ultoa_invert+0x58>
    1d2e:	46 2f       	mov	r20, r22
    1d30:	4f 70       	andi	r20, 0x0F	; 15
    1d32:	40 5d       	subi	r20, 0xD0	; 208
    1d34:	4a 33       	cpi	r20, 0x3A	; 58
    1d36:	18 f0       	brcs	.+6      	; 0x1d3e <__ultoa_invert+0x7c>
    1d38:	49 5d       	subi	r20, 0xD9	; 217
    1d3a:	31 fd       	sbrc	r19, 1
    1d3c:	40 52       	subi	r20, 0x20	; 32
    1d3e:	41 93       	st	Z+, r20
    1d40:	02 d0       	rcall	.+4      	; 0x1d46 <__ultoa_invert+0x84>
    1d42:	a9 f7       	brne	.-22     	; 0x1d2e <__ultoa_invert+0x6c>
    1d44:	ea cf       	rjmp	.-44     	; 0x1d1a <__ultoa_invert+0x58>
    1d46:	b4 e0       	ldi	r27, 0x04	; 4
    1d48:	a6 95       	lsr	r26
    1d4a:	97 95       	ror	r25
    1d4c:	87 95       	ror	r24
    1d4e:	77 95       	ror	r23
    1d50:	67 95       	ror	r22
    1d52:	ba 95       	dec	r27
    1d54:	c9 f7       	brne	.-14     	; 0x1d48 <__ultoa_invert+0x86>
    1d56:	00 97       	sbiw	r24, 0x00	; 0
    1d58:	61 05       	cpc	r22, r1
    1d5a:	71 05       	cpc	r23, r1
    1d5c:	08 95       	ret
    1d5e:	9b 01       	movw	r18, r22
    1d60:	ac 01       	movw	r20, r24
    1d62:	0a 2e       	mov	r0, r26
    1d64:	06 94       	lsr	r0
    1d66:	57 95       	ror	r21
    1d68:	47 95       	ror	r20
    1d6a:	37 95       	ror	r19
    1d6c:	27 95       	ror	r18
    1d6e:	ba 95       	dec	r27
    1d70:	c9 f7       	brne	.-14     	; 0x1d64 <__ultoa_invert+0xa2>
    1d72:	62 0f       	add	r22, r18
    1d74:	73 1f       	adc	r23, r19
    1d76:	84 1f       	adc	r24, r20
    1d78:	95 1f       	adc	r25, r21
    1d7a:	a0 1d       	adc	r26, r0
    1d7c:	08 95       	ret

00001d7e <eeprom_read_block>:
    1d7e:	dc 01       	movw	r26, r24
    1d80:	cb 01       	movw	r24, r22

00001d82 <eeprom_read_blraw>:
    1d82:	fc 01       	movw	r30, r24
    1d84:	e1 99       	sbic	0x1c, 1	; 28
    1d86:	fe cf       	rjmp	.-4      	; 0x1d84 <eeprom_read_blraw+0x2>
    1d88:	06 c0       	rjmp	.+12     	; 0x1d96 <eeprom_read_blraw+0x14>
    1d8a:	ff bb       	out	0x1f, r31	; 31
    1d8c:	ee bb       	out	0x1e, r30	; 30
    1d8e:	e0 9a       	sbi	0x1c, 0	; 28
    1d90:	31 96       	adiw	r30, 0x01	; 1
    1d92:	0d b2       	in	r0, 0x1d	; 29
    1d94:	0d 92       	st	X+, r0
    1d96:	41 50       	subi	r20, 0x01	; 1
    1d98:	50 40       	sbci	r21, 0x00	; 0
    1d9a:	b8 f7       	brcc	.-18     	; 0x1d8a <eeprom_read_blraw+0x8>
    1d9c:	08 95       	ret

00001d9e <eeprom_read_byte>:
    1d9e:	e1 99       	sbic	0x1c, 1	; 28
    1da0:	fe cf       	rjmp	.-4      	; 0x1d9e <eeprom_read_byte>
    1da2:	9f bb       	out	0x1f, r25	; 31
    1da4:	8e bb       	out	0x1e, r24	; 30
    1da6:	e0 9a       	sbi	0x1c, 0	; 28
    1da8:	99 27       	eor	r25, r25
    1daa:	8d b3       	in	r24, 0x1d	; 29
    1dac:	08 95       	ret

00001dae <eeprom_read_dword>:
    1dae:	a6 e1       	ldi	r26, 0x16	; 22
    1db0:	b0 e0       	ldi	r27, 0x00	; 0
    1db2:	44 e0       	ldi	r20, 0x04	; 4
    1db4:	50 e0       	ldi	r21, 0x00	; 0
    1db6:	0c 94 c1 0e 	jmp	0x1d82	; 0x1d82 <eeprom_read_blraw>

00001dba <eeprom_write_byte>:
    1dba:	26 2f       	mov	r18, r22

00001dbc <eeprom_write_r18>:
    1dbc:	e1 99       	sbic	0x1c, 1	; 28
    1dbe:	fe cf       	rjmp	.-4      	; 0x1dbc <eeprom_write_r18>
    1dc0:	9f bb       	out	0x1f, r25	; 31
    1dc2:	8e bb       	out	0x1e, r24	; 30
    1dc4:	2d bb       	out	0x1d, r18	; 29
    1dc6:	0f b6       	in	r0, 0x3f	; 63
    1dc8:	f8 94       	cli
    1dca:	e2 9a       	sbi	0x1c, 2	; 28
    1dcc:	e1 9a       	sbi	0x1c, 1	; 28
    1dce:	0f be       	out	0x3f, r0	; 63
    1dd0:	01 96       	adiw	r24, 0x01	; 1
    1dd2:	08 95       	ret

00001dd4 <eeprom_write_dword>:
    1dd4:	24 2f       	mov	r18, r20
    1dd6:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <eeprom_write_r18>
    1dda:	25 2f       	mov	r18, r21
    1ddc:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <eeprom_write_r18>
    1de0:	0c 94 f2 0e 	jmp	0x1de4	; 0x1de4 <eeprom_write_word>

00001de4 <eeprom_write_word>:
    1de4:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <eeprom_write_byte>
    1de8:	27 2f       	mov	r18, r23
    1dea:	0c 94 de 0e 	jmp	0x1dbc	; 0x1dbc <eeprom_write_r18>

00001dee <__prologue_saves__>:
    1dee:	2f 92       	push	r2
    1df0:	3f 92       	push	r3
    1df2:	4f 92       	push	r4
    1df4:	5f 92       	push	r5
    1df6:	6f 92       	push	r6
    1df8:	7f 92       	push	r7
    1dfa:	8f 92       	push	r8
    1dfc:	9f 92       	push	r9
    1dfe:	af 92       	push	r10
    1e00:	bf 92       	push	r11
    1e02:	cf 92       	push	r12
    1e04:	df 92       	push	r13
    1e06:	ef 92       	push	r14
    1e08:	ff 92       	push	r15
    1e0a:	0f 93       	push	r16
    1e0c:	1f 93       	push	r17
    1e0e:	cf 93       	push	r28
    1e10:	df 93       	push	r29
    1e12:	cd b7       	in	r28, 0x3d	; 61
    1e14:	de b7       	in	r29, 0x3e	; 62
    1e16:	ca 1b       	sub	r28, r26
    1e18:	db 0b       	sbc	r29, r27
    1e1a:	0f b6       	in	r0, 0x3f	; 63
    1e1c:	f8 94       	cli
    1e1e:	de bf       	out	0x3e, r29	; 62
    1e20:	0f be       	out	0x3f, r0	; 63
    1e22:	cd bf       	out	0x3d, r28	; 61
    1e24:	09 94       	ijmp

00001e26 <__epilogue_restores__>:
    1e26:	2a 88       	ldd	r2, Y+18	; 0x12
    1e28:	39 88       	ldd	r3, Y+17	; 0x11
    1e2a:	48 88       	ldd	r4, Y+16	; 0x10
    1e2c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e2e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e30:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e32:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e34:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e36:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e38:	b9 84       	ldd	r11, Y+9	; 0x09
    1e3a:	c8 84       	ldd	r12, Y+8	; 0x08
    1e3c:	df 80       	ldd	r13, Y+7	; 0x07
    1e3e:	ee 80       	ldd	r14, Y+6	; 0x06
    1e40:	fd 80       	ldd	r15, Y+5	; 0x05
    1e42:	0c 81       	ldd	r16, Y+4	; 0x04
    1e44:	1b 81       	ldd	r17, Y+3	; 0x03
    1e46:	aa 81       	ldd	r26, Y+2	; 0x02
    1e48:	b9 81       	ldd	r27, Y+1	; 0x01
    1e4a:	ce 0f       	add	r28, r30
    1e4c:	d1 1d       	adc	r29, r1
    1e4e:	0f b6       	in	r0, 0x3f	; 63
    1e50:	f8 94       	cli
    1e52:	de bf       	out	0x3e, r29	; 62
    1e54:	0f be       	out	0x3f, r0	; 63
    1e56:	cd bf       	out	0x3d, r28	; 61
    1e58:	ed 01       	movw	r28, r26
    1e5a:	08 95       	ret

00001e5c <_exit>:
    1e5c:	f8 94       	cli

00001e5e <__stop_program>:
    1e5e:	ff cf       	rjmp	.-2      	; 0x1e5e <__stop_program>
